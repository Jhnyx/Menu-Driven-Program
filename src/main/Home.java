/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import dataStructures.ArraysFrame;
import dataStructures.LinkedListsFrame;
import dataStructures.QueueFrame;
import dataStructures.StackFrame;
import dataStructures.GraphFrame;
import dataStructures.SearchAlgoFrame;
import dataStructures.SortingAlgoFrame;
import dataStructures.TreesFrame;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import java.awt.Point;
import java.io.IOException;

/**
 *
 * @author jhnyx
 */
public class Home extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;
    private Point mousePosition;

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();

    }

    public String getLastPanelClicked() {
        return lastPanelClicked;
    }

    // Declare the lastPanelClicked variable 
    private String lastPanelClicked;

    public void switchToHomePanel(String panelName) {
        CardLayout cardLayout = (CardLayout) pRoot.getLayout();
        cardLayout.show(pRoot, "Loading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            cardLayout.show(pRoot, panelName);
        });
        timer.setRepeats(false);
        timer.start();
    }

    public void setButtonForeground(JButton button, boolean isMouseEnter) {
        if (isMouseEnter) {
            button.setForeground(new Color(250, 82, 82)); // set color for mouse enter
        } else {
            button.setForeground(new Color(255, 255, 255)); // set color for mouse exit
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pFrameContainer = new javax.swing.JPanel();
        pContainer = new javax.swing.JPanel();
        pSideBar = new javax.swing.JPanel();
        bLogo = new javax.swing.JButton();
        pSideGap = new javax.swing.JPanel();
        bHome = new javax.swing.JButton();
        bSetting = new javax.swing.JButton();
        bInfo = new javax.swing.JButton();
        bExit = new javax.swing.JButton();
        pRoot = new javax.swing.JPanel();
        pHome = new javax.swing.JPanel();
        pSTop1 = new javax.swing.JPanel();
        sTitle2 = new javax.swing.JLabel();
        pSCenter1 = new javax.swing.JPanel();
        bArrays = new javax.swing.JButton();
        bStack = new javax.swing.JButton();
        bQueues = new javax.swing.JButton();
        bLinkedLists = new javax.swing.JButton();
        bSearchingAlgo = new javax.swing.JButton();
        bSortingAlgo = new javax.swing.JButton();
        bTrees = new javax.swing.JButton();
        bGraph = new javax.swing.JButton();
        pSBot1 = new javax.swing.JPanel();
        javaIcon19 = new javax.swing.JLabel();
        devName3 = new javax.swing.JLabel();
        pSettings = new javax.swing.JPanel();
        pSTop = new javax.swing.JPanel();
        sTitle1 = new javax.swing.JLabel();
        pSCenter = new javax.swing.JPanel();
        bRestart = new javax.swing.JButton();
        pSideGap1 = new javax.swing.JPanel();
        pSBot = new javax.swing.JPanel();
        javaIcon20 = new javax.swing.JLabel();
        devName1 = new javax.swing.JLabel();
        pInfo = new javax.swing.JPanel();
        pITop = new javax.swing.JPanel();
        iTitle = new javax.swing.JLabel();
        pICenter = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTextArea10 = new javax.swing.JTextArea();
        pSideGap5 = new javax.swing.JPanel();
        pSideGap6 = new javax.swing.JPanel();
        pSideGap7 = new javax.swing.JPanel();
        pIBot = new javax.swing.JPanel();
        javaIcon21 = new javax.swing.JLabel();
        devName = new javax.swing.JLabel();
        pLoading = new javax.swing.JPanel();
        pSTop12 = new javax.swing.JPanel();
        pSCenter20 = new javax.swing.JPanel();
        bArrays2 = new javax.swing.JButton();
        pSBot12 = new javax.swing.JPanel();
        pWelcome = new javax.swing.JPanel();
        pWTop = new javax.swing.JPanel();
        wTitle = new javax.swing.JLabel();
        pWCenter = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTextArea9 = new javax.swing.JTextArea();
        bWStart = new javax.swing.JButton();
        pSideGap2 = new javax.swing.JPanel();
        pSideGap3 = new javax.swing.JPanel();
        pSideGap4 = new javax.swing.JPanel();
        pWBot = new javax.swing.JPanel();
        javaIcon22 = new javax.swing.JLabel();
        devName2 = new javax.swing.JLabel();
        pFrameLoading = new javax.swing.JPanel();
        pSTop11 = new javax.swing.JPanel();
        pSCenter19 = new javax.swing.JPanel();
        bArrays1 = new javax.swing.JButton();
        pSBot11 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setUndecorated(true);
        setResizable(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        pFrameContainer.setLayout(new java.awt.CardLayout());

        pContainer.setMinimumSize(new java.awt.Dimension(1280, 720));
        pContainer.setPreferredSize(new java.awt.Dimension(1280, 720));
        pContainer.setLayout(new java.awt.BorderLayout());

        pSideBar.setBackground(new java.awt.Color(24, 25, 28));
        pSideBar.setPreferredSize(new java.awt.Dimension(100, 0));
        pSideBar.setRequestFocusEnabled(false);
        pSideBar.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 50));

        bLogo.setBackground(new java.awt.Color(24, 25, 28));
        bLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/logo_icon.png"))); // NOI18N
        bLogo.setBorder(null);
        bLogo.setBorderPainted(false);
        bLogo.setContentAreaFilled(false);
        bLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bLogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLogoActionPerformed(evt);
            }
        });
        pSideBar.add(bLogo);

        pSideGap.setBackground(new java.awt.Color(24, 25, 28));
        pSideGap.setPreferredSize(new java.awt.Dimension(100, 125));
        pSideGap.setRequestFocusEnabled(false);

        javax.swing.GroupLayout pSideGapLayout = new javax.swing.GroupLayout(pSideGap);
        pSideGap.setLayout(pSideGapLayout);
        pSideGapLayout.setHorizontalGroup(
            pSideGapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        pSideGapLayout.setVerticalGroup(
            pSideGapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 125, Short.MAX_VALUE)
        );

        pSideBar.add(pSideGap);

        bHome.setBackground(new java.awt.Color(24, 25, 28));
        bHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/home_icon.png"))); // NOI18N
        bHome.setBorder(null);
        bHome.setBorderPainted(false);
        bHome.setContentAreaFilled(false);
        bHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bHome.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_home_icon.png"))); // NOI18N
        bHome.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHomeActionPerformed(evt);
            }
        });
        pSideBar.add(bHome);

        bSetting.setBackground(new java.awt.Color(24, 25, 28));
        bSetting.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/setting_icon.png"))); // NOI18N
        bSetting.setBorder(null);
        bSetting.setBorderPainted(false);
        bSetting.setContentAreaFilled(false);
        bSetting.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bSetting.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_setting_icon.png"))); // NOI18N
        bSetting.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bSetting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSettingActionPerformed(evt);
            }
        });
        pSideBar.add(bSetting);

        bInfo.setBackground(new java.awt.Color(24, 25, 28));
        bInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/info_icon.png"))); // NOI18N
        bInfo.setBorder(null);
        bInfo.setBorderPainted(false);
        bInfo.setContentAreaFilled(false);
        bInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bInfo.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_info_icon.png"))); // NOI18N
        bInfo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInfoActionPerformed(evt);
            }
        });
        pSideBar.add(bInfo);

        bExit.setBackground(new java.awt.Color(24, 25, 28));
        bExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/exit_icon.png"))); // NOI18N
        bExit.setBorder(null);
        bExit.setBorderPainted(false);
        bExit.setContentAreaFilled(false);
        bExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bExit.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_exit_icon.png"))); // NOI18N
        bExit.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExitActionPerformed(evt);
            }
        });
        pSideBar.add(bExit);

        pContainer.add(pSideBar, java.awt.BorderLayout.WEST);

        pRoot.setMaximumSize(new java.awt.Dimension(1280, 720));
        pRoot.setMinimumSize(new java.awt.Dimension(1280, 720));
        pRoot.setPreferredSize(new java.awt.Dimension(1280, 720));
        pRoot.setRequestFocusEnabled(false);
        pRoot.setLayout(new java.awt.CardLayout());

        pHome.setBackground(new java.awt.Color(35, 40, 50));
        pHome.setMinimumSize(new java.awt.Dimension(1280, 720));
        pHome.setPreferredSize(new java.awt.Dimension(1280, 720));
        pHome.setLayout(new java.awt.BorderLayout());

        pSTop1.setBackground(new java.awt.Color(35, 40, 50));
        pSTop1.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 100, 0));

        sTitle2.setFont(new java.awt.Font("Russo One", 0, 36)); // NOI18N
        sTitle2.setForeground(new java.awt.Color(255, 255, 255));
        sTitle2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sTitle2.setText("MENU DRIVEN PROGRAM");
        sTitle2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sTitle2.setMaximumSize(new java.awt.Dimension(0, 0));
        sTitle2.setMinimumSize(new java.awt.Dimension(0, 0));
        sTitle2.setPreferredSize(new java.awt.Dimension(700, 100));
        sTitle2.setRequestFocusEnabled(false);
        pSTop1.add(sTitle2);

        pHome.add(pSTop1, java.awt.BorderLayout.PAGE_START);

        pSCenter1.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter1.setLayout(new java.awt.GridLayout(2, 0));

        bArrays.setBackground(new java.awt.Color(35, 40, 50));
        bArrays.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bArrays.setForeground(new java.awt.Color(255, 255, 255));
        bArrays.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_array_gif.gif"))); // NOI18N
        bArrays.setText("ARRAYS");
        bArrays.setBorder(null);
        bArrays.setBorderPainted(false);
        bArrays.setContentAreaFilled(false);
        bArrays.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bArrays.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bArrays.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bArrays.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bArraysMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bArraysMouseExited(evt);
            }
        });
        bArrays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bArraysActionPerformed(evt);
            }
        });
        pSCenter1.add(bArrays);

        bStack.setBackground(new java.awt.Color(24, 25, 28));
        bStack.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bStack.setForeground(new java.awt.Color(255, 255, 255));
        bStack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_stack_gif.gif"))); // NOI18N
        bStack.setText("STACK");
        bStack.setBorder(null);
        bStack.setBorderPainted(false);
        bStack.setContentAreaFilled(false);
        bStack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bStack.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bStack.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bStack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bStackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bStackMouseExited(evt);
            }
        });
        bStack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bStackActionPerformed(evt);
            }
        });
        pSCenter1.add(bStack);

        bQueues.setBackground(new java.awt.Color(24, 25, 28));
        bQueues.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bQueues.setForeground(new java.awt.Color(255, 255, 255));
        bQueues.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_queue_gif.gif"))); // NOI18N
        bQueues.setText("QUEUES");
        bQueues.setBorder(null);
        bQueues.setBorderPainted(false);
        bQueues.setContentAreaFilled(false);
        bQueues.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bQueues.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bQueues.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bQueues.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bQueuesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bQueuesMouseExited(evt);
            }
        });
        bQueues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bQueuesActionPerformed(evt);
            }
        });
        pSCenter1.add(bQueues);

        bLinkedLists.setBackground(new java.awt.Color(24, 25, 28));
        bLinkedLists.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bLinkedLists.setForeground(new java.awt.Color(255, 255, 255));
        bLinkedLists.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_linkedlist_gif.gif"))); // NOI18N
        bLinkedLists.setText("LINKED LISTS");
        bLinkedLists.setBorder(null);
        bLinkedLists.setBorderPainted(false);
        bLinkedLists.setContentAreaFilled(false);
        bLinkedLists.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bLinkedLists.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bLinkedLists.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bLinkedLists.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bLinkedListsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bLinkedListsMouseExited(evt);
            }
        });
        bLinkedLists.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLinkedListsActionPerformed(evt);
            }
        });
        pSCenter1.add(bLinkedLists);

        bSearchingAlgo.setBackground(new java.awt.Color(24, 25, 28));
        bSearchingAlgo.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bSearchingAlgo.setForeground(new java.awt.Color(255, 255, 255));
        bSearchingAlgo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_searching_gif.gif"))); // NOI18N
        bSearchingAlgo.setText("SEARCHING ALGORITHM");
        bSearchingAlgo.setBorder(null);
        bSearchingAlgo.setBorderPainted(false);
        bSearchingAlgo.setContentAreaFilled(false);
        bSearchingAlgo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bSearchingAlgo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bSearchingAlgo.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bSearchingAlgo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bSearchingAlgoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bSearchingAlgoMouseExited(evt);
            }
        });
        bSearchingAlgo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSearchingAlgoActionPerformed(evt);
            }
        });
        pSCenter1.add(bSearchingAlgo);

        bSortingAlgo.setBackground(new java.awt.Color(24, 25, 28));
        bSortingAlgo.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bSortingAlgo.setForeground(new java.awt.Color(255, 255, 255));
        bSortingAlgo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_sorting_gif.gif"))); // NOI18N
        bSortingAlgo.setText("SORTING ALGORITHM");
        bSortingAlgo.setBorder(null);
        bSortingAlgo.setBorderPainted(false);
        bSortingAlgo.setContentAreaFilled(false);
        bSortingAlgo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bSortingAlgo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bSortingAlgo.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bSortingAlgo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bSortingAlgoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bSortingAlgoMouseExited(evt);
            }
        });
        bSortingAlgo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSortingAlgoActionPerformed(evt);
            }
        });
        pSCenter1.add(bSortingAlgo);

        bTrees.setBackground(new java.awt.Color(24, 25, 28));
        bTrees.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bTrees.setForeground(new java.awt.Color(255, 255, 255));
        bTrees.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_tree_gif.gif"))); // NOI18N
        bTrees.setText("TREES");
        bTrees.setBorder(null);
        bTrees.setBorderPainted(false);
        bTrees.setContentAreaFilled(false);
        bTrees.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bTrees.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bTrees.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bTrees.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bTreesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bTreesMouseExited(evt);
            }
        });
        bTrees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bTreesActionPerformed(evt);
            }
        });
        pSCenter1.add(bTrees);

        bGraph.setBackground(new java.awt.Color(24, 25, 28));
        bGraph.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bGraph.setForeground(new java.awt.Color(255, 255, 255));
        bGraph.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_graphs_gif.gif"))); // NOI18N
        bGraph.setText("GRAPH");
        bGraph.setBorder(null);
        bGraph.setBorderPainted(false);
        bGraph.setContentAreaFilled(false);
        bGraph.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bGraph.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bGraph.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bGraph.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bGraphMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bGraphMouseExited(evt);
            }
        });
        bGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGraphActionPerformed(evt);
            }
        });
        pSCenter1.add(bGraph);

        pHome.add(pSCenter1, java.awt.BorderLayout.CENTER);

        pSBot1.setBackground(new java.awt.Color(35, 40, 50));
        pSBot1.setPreferredSize(new java.awt.Dimension(0, 100));
        pSBot1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));

        javaIcon19.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        javaIcon19.setForeground(new java.awt.Color(255, 255, 255));
        javaIcon19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        javaIcon19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/java_icon.png"))); // NOI18N
        javaIcon19.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pSBot1.add(javaIcon19);

        devName3.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        devName3.setForeground(new java.awt.Color(255, 255, 255));
        devName3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        devName3.setText("© John Onyx Abcede");
        devName3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pSBot1.add(devName3);

        pHome.add(pSBot1, java.awt.BorderLayout.SOUTH);

        pRoot.add(pHome, "Home");

        pSettings.setBackground(new java.awt.Color(35, 40, 50));
        pSettings.setMinimumSize(new java.awt.Dimension(1280, 720));
        pSettings.setPreferredSize(new java.awt.Dimension(1280, 720));
        pSettings.setLayout(new java.awt.BorderLayout());

        pSTop.setBackground(new java.awt.Color(35, 40, 50));
        pSTop.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 100, 0));

        sTitle1.setFont(new java.awt.Font("Russo One", 1, 48)); // NOI18N
        sTitle1.setForeground(new java.awt.Color(255, 255, 255));
        sTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sTitle1.setText("SETTINGS");
        sTitle1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sTitle1.setMaximumSize(new java.awt.Dimension(0, 0));
        sTitle1.setMinimumSize(new java.awt.Dimension(0, 0));
        sTitle1.setPreferredSize(new java.awt.Dimension(500, 100));
        sTitle1.setRequestFocusEnabled(false);
        pSTop.add(sTitle1);

        pSettings.add(pSTop, java.awt.BorderLayout.NORTH);

        pSCenter.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 50));

        bRestart.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bRestart.setForeground(new java.awt.Color(255, 255, 255));
        bRestart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/restart_icon.png"))); // NOI18N
        bRestart.setText("Restart App");
        bRestart.setBorder(null);
        bRestart.setBorderPainted(false);
        bRestart.setContentAreaFilled(false);
        bRestart.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bRestart.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bRestart.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_restart_icon.png"))); // NOI18N
        bRestart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bRestartMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bRestartMouseExited(evt);
            }
        });
        bRestart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRestartActionPerformed(evt);
            }
        });
        pSCenter.add(bRestart);

        pSideGap1.setBackground(new java.awt.Color(35, 40, 50));
        pSideGap1.setPreferredSize(new java.awt.Dimension(2000, 0));
        pSideGap1.setRequestFocusEnabled(false);

        javax.swing.GroupLayout pSideGap1Layout = new javax.swing.GroupLayout(pSideGap1);
        pSideGap1.setLayout(pSideGap1Layout);
        pSideGap1Layout.setHorizontalGroup(
            pSideGap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2000, Short.MAX_VALUE)
        );
        pSideGap1Layout.setVerticalGroup(
            pSideGap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pSCenter.add(pSideGap1);

        pSettings.add(pSCenter, java.awt.BorderLayout.CENTER);

        pSBot.setBackground(new java.awt.Color(35, 40, 50));
        pSBot.setPreferredSize(new java.awt.Dimension(0, 100));
        pSBot.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));

        javaIcon20.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        javaIcon20.setForeground(new java.awt.Color(255, 255, 255));
        javaIcon20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        javaIcon20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/java_icon.png"))); // NOI18N
        javaIcon20.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pSBot.add(javaIcon20);

        devName1.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        devName1.setForeground(new java.awt.Color(255, 255, 255));
        devName1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        devName1.setText("© John Onyx Abcede");
        devName1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pSBot.add(devName1);

        pSettings.add(pSBot, java.awt.BorderLayout.SOUTH);

        pRoot.add(pSettings, "Settings");

        pInfo.setBackground(new java.awt.Color(35, 40, 50));
        pInfo.setMinimumSize(new java.awt.Dimension(1280, 720));
        pInfo.setPreferredSize(new java.awt.Dimension(1280, 720));
        pInfo.setLayout(new java.awt.BorderLayout());

        pITop.setBackground(new java.awt.Color(35, 40, 50));
        pITop.setPreferredSize(new java.awt.Dimension(0, 100));
        pITop.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 100, 0));

        iTitle.setFont(new java.awt.Font("Russo One", 1, 48)); // NOI18N
        iTitle.setForeground(new java.awt.Color(255, 255, 255));
        iTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iTitle.setText("INFORMATION");
        iTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        iTitle.setMaximumSize(new java.awt.Dimension(0, 0));
        iTitle.setMinimumSize(new java.awt.Dimension(0, 0));
        iTitle.setPreferredSize(new java.awt.Dimension(500, 100));
        iTitle.setRequestFocusEnabled(false);
        pITop.add(iTitle);

        pInfo.add(pITop, java.awt.BorderLayout.NORTH);

        pICenter.setBackground(new java.awt.Color(35, 40, 50));
        pICenter.setLayout(new java.awt.BorderLayout());

        jScrollPane10.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane10.setBorder(null);
        jScrollPane10.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane10.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane10.setHorizontalScrollBar(null);
        jScrollPane10.setOpaque(false);
        jScrollPane10.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane10.setRequestFocusEnabled(false);
        jScrollPane10.setWheelScrollingEnabled(false);

        jTextArea10.setEditable(false);
        jTextArea10.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea10.setColumns(20);
        jTextArea10.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        jTextArea10.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea10.setLineWrap(true);
        jTextArea10.setText("Are you tired of manually managing your data structures? Say no more! I have just the tool you need to make your life easier.\n\nIntroducing my program, developed by yours truly, John Onyx Abcede for my CPE 221 final project. With its user-friendly interface, you can easily manage and manipulate various data structures such as arrays, linked lists, stacks, queues, trees, and graphs. Want to insert a new data element? No problem! Need to delete an old one? Easy as pie! Looking to modify existing elements? Piece of cake!\n\nWith just a few clicks, you can perform all sorts of operations, from searching to modifying, and everything in between. So sit back, relax, and let my program do all the heavy lifting. You'll wonder how you ever managed without it! Navigate the MENU BAR at your left, and let's start managing those data structures like a pro!");
        jTextArea10.setWrapStyleWord(true);
        jTextArea10.setAutoscrolls(false);
        jTextArea10.setBorder(null);
        jTextArea10.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane10.setViewportView(jTextArea10);

        pICenter.add(jScrollPane10, java.awt.BorderLayout.CENTER);

        pSideGap5.setBackground(new java.awt.Color(35, 40, 50));
        pSideGap5.setPreferredSize(new java.awt.Dimension(100, 25));
        pSideGap5.setRequestFocusEnabled(false);

        javax.swing.GroupLayout pSideGap5Layout = new javax.swing.GroupLayout(pSideGap5);
        pSideGap5.setLayout(pSideGap5Layout);
        pSideGap5Layout.setHorizontalGroup(
            pSideGap5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pSideGap5Layout.setVerticalGroup(
            pSideGap5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        pICenter.add(pSideGap5, java.awt.BorderLayout.PAGE_START);

        pSideGap6.setBackground(new java.awt.Color(35, 40, 50));
        pSideGap6.setPreferredSize(new java.awt.Dimension(50, 50));
        pSideGap6.setRequestFocusEnabled(false);

        javax.swing.GroupLayout pSideGap6Layout = new javax.swing.GroupLayout(pSideGap6);
        pSideGap6.setLayout(pSideGap6Layout);
        pSideGap6Layout.setHorizontalGroup(
            pSideGap6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );
        pSideGap6Layout.setVerticalGroup(
            pSideGap6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pICenter.add(pSideGap6, java.awt.BorderLayout.WEST);

        pSideGap7.setBackground(new java.awt.Color(35, 40, 50));
        pSideGap7.setPreferredSize(new java.awt.Dimension(50, 50));
        pSideGap7.setRequestFocusEnabled(false);

        javax.swing.GroupLayout pSideGap7Layout = new javax.swing.GroupLayout(pSideGap7);
        pSideGap7.setLayout(pSideGap7Layout);
        pSideGap7Layout.setHorizontalGroup(
            pSideGap7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );
        pSideGap7Layout.setVerticalGroup(
            pSideGap7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pICenter.add(pSideGap7, java.awt.BorderLayout.EAST);

        pInfo.add(pICenter, java.awt.BorderLayout.CENTER);

        pIBot.setBackground(new java.awt.Color(35, 40, 50));
        pIBot.setPreferredSize(new java.awt.Dimension(0, 100));
        pIBot.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));

        javaIcon21.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        javaIcon21.setForeground(new java.awt.Color(255, 255, 255));
        javaIcon21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        javaIcon21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/java_icon.png"))); // NOI18N
        javaIcon21.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pIBot.add(javaIcon21);

        devName.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        devName.setForeground(new java.awt.Color(255, 255, 255));
        devName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        devName.setText("© John Onyx Abcede");
        devName.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pIBot.add(devName);

        pInfo.add(pIBot, java.awt.BorderLayout.SOUTH);

        pRoot.add(pInfo, "Info");

        pLoading.setBackground(new java.awt.Color(35, 40, 50));
        pLoading.setMinimumSize(new java.awt.Dimension(1280, 720));
        pLoading.setPreferredSize(new java.awt.Dimension(1280, 720));
        pLoading.setLayout(new java.awt.BorderLayout());

        pSTop12.setBackground(new java.awt.Color(35, 40, 50));
        pSTop12.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 100, 25));
        pLoading.add(pSTop12, java.awt.BorderLayout.NORTH);

        pSCenter20.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter20.setLayout(new java.awt.GridLayout(1, 0));

        bArrays2.setBackground(new java.awt.Color(35, 40, 50));
        bArrays2.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bArrays2.setForeground(new java.awt.Color(255, 255, 255));
        bArrays2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/loading_gif.gif"))); // NOI18N
        bArrays2.setText("LOADING...");
        bArrays2.setBorder(null);
        bArrays2.setBorderPainted(false);
        bArrays2.setContentAreaFilled(false);
        bArrays2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bArrays2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bArrays2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bArrays2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bArrays2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bArrays2MouseExited(evt);
            }
        });
        bArrays2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bArrays2ActionPerformed(evt);
            }
        });
        pSCenter20.add(bArrays2);

        pLoading.add(pSCenter20, java.awt.BorderLayout.CENTER);

        pSBot12.setBackground(new java.awt.Color(35, 40, 50));
        pSBot12.setPreferredSize(new java.awt.Dimension(0, 100));
        pSBot12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));
        pLoading.add(pSBot12, java.awt.BorderLayout.SOUTH);

        pRoot.add(pLoading, "Loading");

        pWelcome.setBackground(new java.awt.Color(35, 40, 50));
        pWelcome.setMinimumSize(new java.awt.Dimension(1280, 720));
        pWelcome.setPreferredSize(new java.awt.Dimension(1280, 720));
        pWelcome.setLayout(new java.awt.BorderLayout());

        pWTop.setBackground(new java.awt.Color(35, 40, 50));
        pWTop.setPreferredSize(new java.awt.Dimension(0, 100));
        pWTop.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 100, 25));

        wTitle.setFont(new java.awt.Font("Russo One", 1, 48)); // NOI18N
        wTitle.setForeground(new java.awt.Color(255, 255, 255));
        wTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        wTitle.setText("WELCOME!");
        wTitle.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        wTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        wTitle.setMaximumSize(new java.awt.Dimension(0, 0));
        wTitle.setMinimumSize(new java.awt.Dimension(0, 0));
        wTitle.setPreferredSize(new java.awt.Dimension(500, 100));
        wTitle.setRequestFocusEnabled(false);
        pWTop.add(wTitle);

        pWelcome.add(pWTop, java.awt.BorderLayout.NORTH);

        pWCenter.setBackground(new java.awt.Color(35, 40, 50));
        pWCenter.setMinimumSize(new java.awt.Dimension(1280, 720));
        pWCenter.setPreferredSize(new java.awt.Dimension(1280, 720));
        pWCenter.setLayout(new java.awt.BorderLayout());

        jScrollPane9.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane9.setBorder(null);
        jScrollPane9.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane9.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane9.setHorizontalScrollBar(null);
        jScrollPane9.setOpaque(false);
        jScrollPane9.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane9.setRequestFocusEnabled(false);
        jScrollPane9.setWheelScrollingEnabled(false);

        jTextArea9.setEditable(false);
        jTextArea9.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea9.setColumns(20);
        jTextArea9.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        jTextArea9.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea9.setLineWrap(true);
        jTextArea9.setText("Welcome to my Menu Driven Program all about data structures! I'm here to help you explore the wonderful world of programming and data structures, in a fun and interactive way.\n\nAre you ready to take the plunge? Great! Just navigate in the menu bar to choose the data structure you're interested in, and let's get started! Don't worry if you're not sure where to begin, my program is designed to be user-friendly and intuitive.\n\nSo, whether you want to learn about arrays, stacks, queues, linked lists, searching algorithms, sorting algorithms, trees, or graphs, I've got you covered! Just sit back, relax, and let me guide you through each step of the process. Click on the CHIBI below or navigate the MENU BAR at your left, and let's explore the exciting world of data structures together!");
        jTextArea9.setWrapStyleWord(true);
        jTextArea9.setAutoscrolls(false);
        jTextArea9.setBorder(null);
        jTextArea9.setFocusable(false);
        jTextArea9.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane9.setViewportView(jTextArea9);

        pWCenter.add(jScrollPane9, java.awt.BorderLayout.CENTER);

        bWStart.setBackground(new java.awt.Color(255, 102, 102));
        bWStart.setFont(new java.awt.Font("Russo One", 1, 36)); // NOI18N
        bWStart.setForeground(new java.awt.Color(255, 102, 102));
        bWStart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_loading_gif.gif"))); // NOI18N
        bWStart.setBorder(null);
        bWStart.setContentAreaFilled(false);
        bWStart.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bWStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bWStartActionPerformed(evt);
            }
        });
        pWCenter.add(bWStart, java.awt.BorderLayout.SOUTH);

        pSideGap2.setBackground(new java.awt.Color(35, 40, 50));
        pSideGap2.setPreferredSize(new java.awt.Dimension(100, 25));
        pSideGap2.setRequestFocusEnabled(false);

        javax.swing.GroupLayout pSideGap2Layout = new javax.swing.GroupLayout(pSideGap2);
        pSideGap2.setLayout(pSideGap2Layout);
        pSideGap2Layout.setHorizontalGroup(
            pSideGap2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pSideGap2Layout.setVerticalGroup(
            pSideGap2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        pWCenter.add(pSideGap2, java.awt.BorderLayout.PAGE_START);

        pSideGap3.setBackground(new java.awt.Color(35, 40, 50));
        pSideGap3.setPreferredSize(new java.awt.Dimension(50, 50));
        pSideGap3.setRequestFocusEnabled(false);

        javax.swing.GroupLayout pSideGap3Layout = new javax.swing.GroupLayout(pSideGap3);
        pSideGap3.setLayout(pSideGap3Layout);
        pSideGap3Layout.setHorizontalGroup(
            pSideGap3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );
        pSideGap3Layout.setVerticalGroup(
            pSideGap3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pWCenter.add(pSideGap3, java.awt.BorderLayout.WEST);

        pSideGap4.setBackground(new java.awt.Color(35, 40, 50));
        pSideGap4.setPreferredSize(new java.awt.Dimension(50, 50));
        pSideGap4.setRequestFocusEnabled(false);

        javax.swing.GroupLayout pSideGap4Layout = new javax.swing.GroupLayout(pSideGap4);
        pSideGap4.setLayout(pSideGap4Layout);
        pSideGap4Layout.setHorizontalGroup(
            pSideGap4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );
        pSideGap4Layout.setVerticalGroup(
            pSideGap4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pWCenter.add(pSideGap4, java.awt.BorderLayout.EAST);

        pWelcome.add(pWCenter, java.awt.BorderLayout.CENTER);

        pWBot.setBackground(new java.awt.Color(35, 40, 50));
        pWBot.setMinimumSize(new java.awt.Dimension(1280, 720));
        pWBot.setPreferredSize(new java.awt.Dimension(0, 100));
        pWBot.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));

        javaIcon22.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        javaIcon22.setForeground(new java.awt.Color(255, 255, 255));
        javaIcon22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        javaIcon22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/java_icon.png"))); // NOI18N
        javaIcon22.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pWBot.add(javaIcon22);

        devName2.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        devName2.setForeground(new java.awt.Color(255, 255, 255));
        devName2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        devName2.setText("© John Onyx Abcede");
        devName2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pWBot.add(devName2);

        pWelcome.add(pWBot, java.awt.BorderLayout.SOUTH);

        pRoot.add(pWelcome, "Welcome");

        pContainer.add(pRoot, java.awt.BorderLayout.CENTER);

        pFrameContainer.add(pContainer, "Container");

        pFrameLoading.setBackground(new java.awt.Color(35, 40, 50));
        pFrameLoading.setMinimumSize(new java.awt.Dimension(1280, 720));
        pFrameLoading.setPreferredSize(new java.awt.Dimension(1280, 720));
        pFrameLoading.setLayout(new java.awt.BorderLayout());

        pSTop11.setBackground(new java.awt.Color(35, 40, 50));
        pSTop11.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 100, 25));
        pFrameLoading.add(pSTop11, java.awt.BorderLayout.NORTH);

        pSCenter19.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter19.setLayout(new java.awt.GridLayout(1, 0));

        bArrays1.setBackground(new java.awt.Color(35, 40, 50));
        bArrays1.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bArrays1.setForeground(new java.awt.Color(255, 255, 255));
        bArrays1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/loading_gif.gif"))); // NOI18N
        bArrays1.setText("LOADING...");
        bArrays1.setBorder(null);
        bArrays1.setBorderPainted(false);
        bArrays1.setContentAreaFilled(false);
        bArrays1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bArrays1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bArrays1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bArrays1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bArrays1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bArrays1MouseExited(evt);
            }
        });
        bArrays1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bArrays1ActionPerformed(evt);
            }
        });
        pSCenter19.add(bArrays1);

        pFrameLoading.add(pSCenter19, java.awt.BorderLayout.CENTER);

        pSBot11.setBackground(new java.awt.Color(35, 40, 50));
        pSBot11.setPreferredSize(new java.awt.Dimension(0, 100));
        pSBot11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));
        pFrameLoading.add(pSBot11, java.awt.BorderLayout.SOUTH);

        pFrameContainer.add(pFrameLoading, "FrameLoading");

        getContentPane().add(pFrameContainer, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHomeActionPerformed
        // Set the previous button's icon to the default icon
        bInfo.setIcon(new ImageIcon(getClass().getResource("/resources/icons/info_icon.png")));
        bSetting.setIcon(new ImageIcon(getClass().getResource("/resources/icons/setting_icon.png")));

        // Set the current button's icon to the rollover icon
        bHome.setIcon(new ImageIcon(getClass().getResource("/resources/icons/rollover_home_icon.png")));

        // Show the "Home" card
        CardLayout cardLayout = (CardLayout) pRoot.getLayout();
        cardLayout.show(pRoot, "Loading");
        Timer timer = new Timer(500, (ActionEvent e) -> {
            cardLayout.show(pRoot, "Home");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bHomeActionPerformed

    private void bSettingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSettingActionPerformed
        // Set the previous button's icon to the default icon
        bHome.setIcon(new ImageIcon(getClass().getResource("/resources/icons/home_icon.png")));
        bInfo.setIcon(new ImageIcon(getClass().getResource("/resources/icons/info_icon.png")));

        // Set the current button's icon to the rollover icon
        bSetting.setIcon(new ImageIcon(getClass().getResource("/resources/icons/rollover_setting_icon.png")));

        // Show the "Settings" card
        CardLayout cardLayout = (CardLayout) pRoot.getLayout();
        cardLayout.show(pRoot, "Loading");
        Timer timer = new Timer(500, (ActionEvent e) -> {
            cardLayout.show(pRoot, "Settings");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bSettingActionPerformed

    private void bInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInfoActionPerformed
        // Set the previous button's icon to the default icon
        bHome.setIcon(new ImageIcon(getClass().getResource("/resources/icons/home_icon.png")));
        bSetting.setIcon(new ImageIcon(getClass().getResource("/resources/icons/setting_icon.png")));

        // Set the current button's icon to the rollover icon
        bInfo.setIcon(new ImageIcon(getClass().getResource("/resources/icons/rollover_info_icon.png")));

        // Show the "Info" card
        CardLayout cardLayout = (CardLayout) pRoot.getLayout();
        cardLayout.show(pRoot, "Loading");
        Timer timer = new Timer(500, (ActionEvent e) -> {
            cardLayout.show(pRoot, "Info");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bInfoActionPerformed

    private void bLogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLogoActionPerformed
        // Set the previous button's icon to the default icon
        bHome.setIcon(new ImageIcon(getClass().getResource("/resources/icons/home_icon.png")));
        bInfo.setIcon(new ImageIcon(getClass().getResource("/resources/icons/info_icon.png")));
        bSetting.setIcon(new ImageIcon(getClass().getResource("/resources/icons/setting_icon.png")));

        // Show the "Welcome" card
        CardLayout cardLayout = (CardLayout) pRoot.getLayout();
        cardLayout.show(pRoot, "Loading");
        Timer timer = new Timer(500, (ActionEvent e) -> {
            cardLayout.show(pRoot, "Welcome");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bLogoActionPerformed

    private void bExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_bExitActionPerformed

    private void bWStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bWStartActionPerformed
        // Set the previous button's icon to the default icon
        bInfo.setIcon(new ImageIcon(getClass().getResource("/resources/icons/info_icon.png")));
        bSetting.setIcon(new ImageIcon(getClass().getResource("/resources/icons/setting_icon.png")));

        // Set the current button's icon to the rollover icon
        bHome.setIcon(new ImageIcon(getClass().getResource("/resources/icons/rollover_home_icon.png")));

        // Show the "Home" card
        CardLayout cardLayout = (CardLayout) pRoot.getLayout();
        cardLayout.show(pRoot, "Loading");
        Timer timer = new Timer(500, (ActionEvent e) -> {
            cardLayout.show(pRoot, "Home");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bWStartActionPerformed

    private void bStackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bStackActionPerformed
        // Show the loading panel first
        CardLayout frameCardLayout = (CardLayout) pFrameContainer.getLayout();
        frameCardLayout.show(pFrameContainer, "FrameLoading");

        StackFrame stackFrame = new StackFrame();

        // Delay the visibility of the Arrays JFrame
        Timer showTimer = new Timer(500, (ActionEvent e) -> {
            stackFrame.setVisible(true);
        });
        showTimer.setRepeats(false);
        showTimer.start();

        // Dispose the current frame after a delay
        Timer disposeTimer = new Timer(600, (ActionEvent e) -> {
            dispose();
        });
        disposeTimer.setRepeats(false);
        disposeTimer.start();
    }//GEN-LAST:event_bStackActionPerformed

    private void bLinkedListsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLinkedListsActionPerformed
        // Show the loading panel first
        CardLayout frameCardLayout = (CardLayout) pFrameContainer.getLayout();
        frameCardLayout.show(pFrameContainer, "FrameLoading");

        LinkedListsFrame linkedListsFrame = new LinkedListsFrame();

        // Delay the visibility of the Arrays JFrame
        Timer showTimer = new Timer(500, (ActionEvent e) -> {
            linkedListsFrame.setVisible(true);
        });
        showTimer.setRepeats(false);
        showTimer.start();

        // Dispose the current frame after a delay
        Timer disposeTimer = new Timer(600, (ActionEvent e) -> {
            dispose();
        });
        disposeTimer.setRepeats(false);
        disposeTimer.start();
    }//GEN-LAST:event_bLinkedListsActionPerformed

    private void bSearchingAlgoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSearchingAlgoActionPerformed
    // Show the loading panel first
        CardLayout frameCardLayout = (CardLayout) pFrameContainer.getLayout();
        frameCardLayout.show(pFrameContainer, "FrameLoading");

        // Replace "Arrays" with the actual class name
        SearchAlgoFrame searchAlgoFrame = new SearchAlgoFrame();

        // Delay the visibility of the Arrays JFrame
        Timer showTimer = new Timer(500, (ActionEvent e) -> {
            searchAlgoFrame.setVisible(true);
        });
        showTimer.setRepeats(false);
        showTimer.start();

        // Dispose the current frame after a delay
        Timer disposeTimer = new Timer(600, (ActionEvent e) -> {
            dispose();
        });
        disposeTimer.setRepeats(false);
        disposeTimer.start();
    }//GEN-LAST:event_bSearchingAlgoActionPerformed

    private void bSortingAlgoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSortingAlgoActionPerformed
        // Show the loading panel first
        CardLayout frameCardLayout = (CardLayout) pFrameContainer.getLayout();
        frameCardLayout.show(pFrameContainer, "FrameLoading");

        // Replace "Arrays" with the actual class name
        SortingAlgoFrame sortingAlgoFrame = new SortingAlgoFrame();

        // Delay the visibility of the Arrays JFrame
        Timer showTimer = new Timer(500, (ActionEvent e) -> {
            sortingAlgoFrame.setVisible(true);
        });
        showTimer.setRepeats(false);
        showTimer.start();

        // Dispose the current frame after a delay
        Timer disposeTimer = new Timer(600, (ActionEvent e) -> {
            dispose();
        });
        disposeTimer.setRepeats(false);
        disposeTimer.start();
    }//GEN-LAST:event_bSortingAlgoActionPerformed

    private void bTreesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTreesActionPerformed
        // Show the loading panel first
        CardLayout frameCardLayout = (CardLayout) pFrameContainer.getLayout();
        frameCardLayout.show(pFrameContainer, "FrameLoading");

        // Replace "Arrays" with the actual class name
        TreesFrame treesFrame = new TreesFrame();

        // Delay the visibility of the Arrays JFrame
        Timer showTimer = new Timer(500, (ActionEvent e) -> {
            treesFrame.setVisible(true);
        });
        showTimer.setRepeats(false);
        showTimer.start();

        // Dispose the current frame after a delay
        Timer disposeTimer = new Timer(600, (ActionEvent e) -> {
            dispose();
        });
        disposeTimer.setRepeats(false);
        disposeTimer.start();
    }//GEN-LAST:event_bTreesActionPerformed

    private void bGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGraphActionPerformed
            // Show the loading panel first
        CardLayout frameCardLayout = (CardLayout) pFrameContainer.getLayout();
        frameCardLayout.show(pFrameContainer, "FrameLoading");

        // Replace "Arrays" with the actual class name
        GraphFrame graphFrame = new GraphFrame();

        // Delay the visibility of the Arrays JFrame
        Timer showTimer = new Timer(500, (ActionEvent e) -> {
            graphFrame.setVisible(true);
        });
        showTimer.setRepeats(false);
        showTimer.start();

        // Dispose the current frame after a delay
        Timer disposeTimer = new Timer(600, (ActionEvent e) -> {
            dispose();
        });
        disposeTimer.setRepeats(false);
        disposeTimer.start();
    }//GEN-LAST:event_bGraphActionPerformed

    private void bRestartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRestartActionPerformed
        try {
            Runtime.getRuntime().exec("java -jar Menu_Driven_Program.jar");
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        // Create a new thread to restart the application
        Thread restartThread = new Thread(() -> {
            try {
                // Get the absolute file path to the current running Java application
                File javaFile = new File(System.getProperty("java.home"), "bin/java");
                String classpath = System.getProperty("java.class.path");
                String className = System.getProperty("sun.java.command");

                // Construct the command-line arguments to start the application again
                List<String> command = new ArrayList<>();
                command.add(javaFile.getAbsolutePath());
                command.add("-cp");
                command.add(classpath);
                command.add(className);

                // Start the new process
                ProcessBuilder pb = new ProcessBuilder(command);
                pb.inheritIO(); // Redirects standard output and error to the console
                pb.start();
            } catch (IOException ex) {
                System.err.println("Error restarting application: " + ex.getMessage());
            }
        });
        restartThread.start();
        System.exit(0);
    }//GEN-LAST:event_bRestartActionPerformed

    private void bRestartMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bRestartMouseEntered
        setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bRestartMouseEntered

    private void bRestartMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bRestartMouseExited
        setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bRestartMouseExited

    private void bQueuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bQueuesActionPerformed
        // Show the loading panel first
        CardLayout frameCardLayout = (CardLayout) pFrameContainer.getLayout();
        frameCardLayout.show(pFrameContainer, "FrameLoading");

        QueueFrame queueFrame = new QueueFrame();

        // Delay the visibility of the Arrays JFrame
        Timer showTimer = new Timer(500, (ActionEvent e) -> {
            queueFrame.setVisible(true);
        });
        showTimer.setRepeats(false);
        showTimer.start();

        // Dispose the current frame after a delay
        Timer disposeTimer = new Timer(600, (ActionEvent e) -> {
            dispose();
        });
        disposeTimer.setRepeats(false);
        disposeTimer.start();
    }//GEN-LAST:event_bQueuesActionPerformed

    private void bArraysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bArraysActionPerformed
        // Show the loading panel first
        CardLayout frameCardLayout = (CardLayout) pFrameContainer.getLayout();
        frameCardLayout.show(pFrameContainer, "FrameLoading");

        // Replace "Arrays" with the actual class name
        ArraysFrame arraysFrame = new ArraysFrame();

        // Delay the visibility of the Arrays JFrame
        Timer showTimer = new Timer(500, (ActionEvent e) -> {
            arraysFrame.setVisible(true);
        });
        showTimer.setRepeats(false);
        showTimer.start();

        // Dispose the current frame after a delay
        Timer disposeTimer = new Timer(600, (ActionEvent e) -> {
            dispose();
        });
        disposeTimer.setRepeats(false);
        disposeTimer.start();
    }//GEN-LAST:event_bArraysActionPerformed


    private void bArraysMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArraysMouseEntered
        setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bArraysMouseEntered

    private void bArraysMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArraysMouseExited
        setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bArraysMouseExited

    private void bStackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bStackMouseEntered
        setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bStackMouseEntered

    private void bStackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bStackMouseExited
        setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bStackMouseExited

    private void bQueuesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bQueuesMouseEntered
        setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bQueuesMouseEntered

    private void bQueuesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bQueuesMouseExited
        setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bQueuesMouseExited

    private void bLinkedListsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bLinkedListsMouseEntered
        setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bLinkedListsMouseEntered

    private void bLinkedListsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bLinkedListsMouseExited
        setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bLinkedListsMouseExited

    private void bSearchingAlgoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSearchingAlgoMouseEntered
        setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bSearchingAlgoMouseEntered

    private void bSearchingAlgoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSearchingAlgoMouseExited
        setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bSearchingAlgoMouseExited

    private void bSortingAlgoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSortingAlgoMouseEntered
        setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bSortingAlgoMouseEntered

    private void bSortingAlgoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSortingAlgoMouseExited
        setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bSortingAlgoMouseExited

    private void bTreesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bTreesMouseEntered
        setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bTreesMouseEntered

    private void bTreesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bTreesMouseExited
        setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bTreesMouseExited

    private void bGraphMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bGraphMouseEntered
        setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bGraphMouseEntered

    private void bGraphMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bGraphMouseExited
        setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bGraphMouseExited

    private void bArrays1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays1MouseEntered
        setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bArrays1MouseEntered

    private void bArrays1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays1MouseExited
        setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bArrays1MouseExited

    private void bArrays1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bArrays1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bArrays1ActionPerformed

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        mousePosition = evt.getPoint();
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        int deltaX = evt.getX() - mousePosition.x;
        int deltaY = evt.getY() - mousePosition.y;
        setLocation(getLocation().x + deltaX, getLocation().y + deltaY);
    }//GEN-LAST:event_formMouseDragged

    private void bArrays2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays2MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_bArrays2MouseEntered

    private void bArrays2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays2MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_bArrays2MouseExited

    private void bArrays2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bArrays2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bArrays2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Home().setVisible(true);
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bArrays;
    private javax.swing.JButton bArrays1;
    private javax.swing.JButton bArrays2;
    private javax.swing.JButton bExit;
    private javax.swing.JButton bGraph;
    private javax.swing.JButton bHome;
    private javax.swing.JButton bInfo;
    private javax.swing.JButton bLinkedLists;
    private javax.swing.JButton bLogo;
    private javax.swing.JButton bQueues;
    private javax.swing.JButton bRestart;
    private javax.swing.JButton bSearchingAlgo;
    private javax.swing.JButton bSetting;
    private javax.swing.JButton bSortingAlgo;
    private javax.swing.JButton bStack;
    private javax.swing.JButton bTrees;
    private javax.swing.JButton bWStart;
    private javax.swing.JLabel devName;
    private javax.swing.JLabel devName1;
    private javax.swing.JLabel devName2;
    private javax.swing.JLabel devName3;
    private javax.swing.JLabel iTitle;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextArea jTextArea10;
    private javax.swing.JTextArea jTextArea9;
    private javax.swing.JLabel javaIcon19;
    private javax.swing.JLabel javaIcon20;
    private javax.swing.JLabel javaIcon21;
    private javax.swing.JLabel javaIcon22;
    private javax.swing.JPanel pContainer;
    private javax.swing.JPanel pFrameContainer;
    private javax.swing.JPanel pFrameLoading;
    private javax.swing.JPanel pHome;
    private javax.swing.JPanel pIBot;
    private javax.swing.JPanel pICenter;
    private javax.swing.JPanel pITop;
    private javax.swing.JPanel pInfo;
    private javax.swing.JPanel pLoading;
    private javax.swing.JPanel pRoot;
    private javax.swing.JPanel pSBot;
    private javax.swing.JPanel pSBot1;
    private javax.swing.JPanel pSBot11;
    private javax.swing.JPanel pSBot12;
    private javax.swing.JPanel pSCenter;
    private javax.swing.JPanel pSCenter1;
    private javax.swing.JPanel pSCenter19;
    private javax.swing.JPanel pSCenter20;
    private javax.swing.JPanel pSTop;
    private javax.swing.JPanel pSTop1;
    private javax.swing.JPanel pSTop11;
    private javax.swing.JPanel pSTop12;
    private javax.swing.JPanel pSettings;
    private javax.swing.JPanel pSideBar;
    private javax.swing.JPanel pSideGap;
    private javax.swing.JPanel pSideGap1;
    private javax.swing.JPanel pSideGap2;
    private javax.swing.JPanel pSideGap3;
    private javax.swing.JPanel pSideGap4;
    private javax.swing.JPanel pSideGap5;
    private javax.swing.JPanel pSideGap6;
    private javax.swing.JPanel pSideGap7;
    private javax.swing.JPanel pWBot;
    private javax.swing.JPanel pWCenter;
    private javax.swing.JPanel pWTop;
    private javax.swing.JPanel pWelcome;
    private javax.swing.JLabel sTitle1;
    private javax.swing.JLabel sTitle2;
    private javax.swing.JLabel wTitle;
    // End of variables declaration//GEN-END:variables
}
