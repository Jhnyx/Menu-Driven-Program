/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package dataStructures;

import handlers.DataHandler;
import handlers.FileHandler;
import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.Timer;
import main.Home;

/**
 *
 * @author jhnyx
 */


public class SearchAlgoFrame extends javax.swing.JFrame {
    private Home home;
    
    private int[] binarySearchInputValuesFromFile;
    private final JTextField[] binarySearchFields;
    
    /**
     * Creates new form SearchAlgoFrame
     */
    public SearchAlgoFrame() {
        initComponents();
        home = new Home();
        
        
        binarySearchFields = new JTextField[]{aBElement0, aBElement1, aBElement2, aBElement3, aBElement4, aBElement5};
    }
    
    private void switchLayouts(JPanel pInput, JPanel pOutput) {

        // Get a reference to the CardLayout of the pInput panel
        CardLayout InputLayout = (CardLayout) pInput.getLayout();

        // Show the "ILoading" card in the pInput panel
        InputLayout.show(pInput, "ILoading");

        // Get a reference to the CardLayout of the pOutput panel
        CardLayout OutputLayout = (CardLayout) pOutput.getLayout();

        // Show the "OLoading" card in the pOutput panel
        OutputLayout.show(pOutput, "OLoading");

        // Set up a timer to switch back to the main menus after a delay
        Timer timer = new Timer(500, (ActionEvent e) -> {
            InputLayout.show(pInput, "Menus");
            OutputLayout.show(pOutput, "OIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pContainer = new javax.swing.JPanel();
        pSearching = new javax.swing.JPanel();
        pSearchingIntro = new javax.swing.JPanel();
        pSTop6 = new javax.swing.JPanel();
        bBack4 = new javax.swing.JButton();
        sTitle7 = new javax.swing.JLabel();
        bNext4 = new javax.swing.JButton();
        pSCenter10 = new javax.swing.JPanel();
        structImg4 = new javax.swing.JLabel();
        pSCenter11 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        pSBot6 = new javax.swing.JPanel();
        pLoading = new javax.swing.JPanel();
        pSTop11 = new javax.swing.JPanel();
        pSCenter19 = new javax.swing.JPanel();
        bArrays1 = new javax.swing.JButton();
        pSBot11 = new javax.swing.JPanel();
        pSearchingOperations = new javax.swing.JPanel();
        pSTop12 = new javax.swing.JPanel();
        bBack9 = new javax.swing.JButton();
        sTitle12 = new javax.swing.JLabel();
        bHome = new javax.swing.JButton();
        pSCenter20 = new javax.swing.JPanel();
        pInput = new javax.swing.JPanel();
        pMenus = new javax.swing.JPanel();
        bBinary = new javax.swing.JButton();
        pILoading = new javax.swing.JPanel();
        bArrays3 = new javax.swing.JButton();
        pBinaryMenu = new javax.swing.JPanel();
        pSTop17 = new javax.swing.JPanel();
        bSearchBack = new javax.swing.JButton();
        pSCenter23 = new javax.swing.JPanel();
        bSearchTitle = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        bElements4 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        aBElement0 = new javax.swing.JTextField();
        aBElement1 = new javax.swing.JTextField();
        aBElement2 = new javax.swing.JTextField();
        aBElement3 = new javax.swing.JTextField();
        aBElement4 = new javax.swing.JTextField();
        aBElement5 = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        bElements5 = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        aBValue = new javax.swing.JTextField();
        pSBot15 = new javax.swing.JPanel();
        bCount = new javax.swing.JButton();
        pOutput = new javax.swing.JPanel();
        pOIntro = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTextArea12 = new javax.swing.JTextArea();
        pOLoading = new javax.swing.JPanel();
        bArrays2 = new javax.swing.JButton();
        pBinaryIntro = new javax.swing.JPanel();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTextArea18 = new javax.swing.JTextArea();
        pBinaryOutput = new javax.swing.JPanel();
        jScrollPane23 = new javax.swing.JScrollPane();
        binaryOutputArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        pContainer.setLayout(new java.awt.BorderLayout());

        pSearching.setMaximumSize(new java.awt.Dimension(1280, 720));
        pSearching.setRequestFocusEnabled(false);
        pSearching.setLayout(new java.awt.CardLayout());

        pSearchingIntro.setBackground(new java.awt.Color(35, 40, 50));
        pSearchingIntro.setMinimumSize(new java.awt.Dimension(1280, 720));
        pSearchingIntro.setPreferredSize(new java.awt.Dimension(1280, 720));
        pSearchingIntro.setLayout(new java.awt.BorderLayout());

        pSTop6.setBackground(new java.awt.Color(24, 25, 28));
        pSTop6.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 100, 0));

        bBack4.setBackground(new java.awt.Color(24, 25, 28));
        bBack4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/back_icon.png"))); // NOI18N
        bBack4.setBorder(null);
        bBack4.setBorderPainted(false);
        bBack4.setContentAreaFilled(false);
        bBack4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bBack4.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_back_icon.png"))); // NOI18N
        bBack4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bBack4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBack4ActionPerformed(evt);
            }
        });
        pSTop6.add(bBack4);

        sTitle7.setFont(new java.awt.Font("Russo One", 1, 48)); // NOI18N
        sTitle7.setForeground(new java.awt.Color(255, 255, 255));
        sTitle7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sTitle7.setText("SEARCHING ALGORITHM");
        sTitle7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sTitle7.setMaximumSize(new java.awt.Dimension(0, 0));
        sTitle7.setMinimumSize(new java.awt.Dimension(0, 0));
        sTitle7.setPreferredSize(new java.awt.Dimension(700, 100));
        sTitle7.setRequestFocusEnabled(false);
        pSTop6.add(sTitle7);

        bNext4.setBackground(new java.awt.Color(24, 25, 28));
        bNext4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/next_icon.png"))); // NOI18N
        bNext4.setBorder(null);
        bNext4.setBorderPainted(false);
        bNext4.setContentAreaFilled(false);
        bNext4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bNext4.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_next_icon.png"))); // NOI18N
        bNext4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bNext4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNext4ActionPerformed(evt);
            }
        });
        pSTop6.add(bNext4);

        pSearchingIntro.add(pSTop6, java.awt.BorderLayout.PAGE_START);

        pSCenter10.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter10.setLayout(new java.awt.BorderLayout());

        structImg4.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        structImg4.setForeground(new java.awt.Color(255, 255, 255));
        structImg4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        structImg4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/searching_gif.gif"))); // NOI18N
        structImg4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pSCenter10.add(structImg4, java.awt.BorderLayout.WEST);

        pSCenter11.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 50));

        jScrollPane5.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane5.setBorder(null);
        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane5.setHorizontalScrollBar(null);
        jScrollPane5.setOpaque(false);
        jScrollPane5.setPreferredSize(new java.awt.Dimension(750, 1000));

        jTextArea5.setEditable(false);
        jTextArea5.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea5.setColumns(20);
        jTextArea5.setFont(new java.awt.Font("Russo One", 0, 22)); // NOI18N
        jTextArea5.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea5.setLineWrap(true);
        jTextArea5.setText("A searching algorithm is a tool used to find specific data in a larger collection of data. Linear search checks each element sequentially and is best for small, unordered data. Binary search is more efficient and works well with sorted data, dividing the search interval in half until the target is found. Hashing uses a hash function to map data to an array index and is efficient for large data but can result in collisions.\n\nThese algorithms are essential in programming, used in various applications such as databases, search engines, and machine learning. The choice of algorithm depends on the size and structure of the data being searched and the efficiency and accuracy requirements. Understanding the different types of searching algorithms and their advantages and limitations is crucial for selecting the most appropriate one for the task.");
        jTextArea5.setWrapStyleWord(true);
        jTextArea5.setAutoscrolls(false);
        jTextArea5.setBorder(null);
        jTextArea5.setFocusable(false);
        jScrollPane5.setViewportView(jTextArea5);

        pSCenter11.add(jScrollPane5);

        pSCenter10.add(pSCenter11, java.awt.BorderLayout.CENTER);

        pSearchingIntro.add(pSCenter10, java.awt.BorderLayout.CENTER);

        pSBot6.setBackground(new java.awt.Color(35, 40, 50));
        pSBot6.setPreferredSize(new java.awt.Dimension(0, 100));
        pSBot6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));
        pSearchingIntro.add(pSBot6, java.awt.BorderLayout.SOUTH);

        pSearching.add(pSearchingIntro, "SearchingIntro");

        pLoading.setBackground(new java.awt.Color(35, 40, 50));
        pLoading.setMinimumSize(new java.awt.Dimension(1280, 720));
        pLoading.setPreferredSize(new java.awt.Dimension(1280, 720));
        pLoading.setLayout(new java.awt.BorderLayout());

        pSTop11.setBackground(new java.awt.Color(35, 40, 50));
        pSTop11.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 100, 25));
        pLoading.add(pSTop11, java.awt.BorderLayout.NORTH);

        pSCenter19.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter19.setLayout(new java.awt.GridLayout(1, 0));

        bArrays1.setBackground(new java.awt.Color(35, 40, 50));
        bArrays1.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bArrays1.setForeground(new java.awt.Color(255, 255, 255));
        bArrays1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/loading_gif.gif"))); // NOI18N
        bArrays1.setText("LOADING...");
        bArrays1.setBorder(null);
        bArrays1.setBorderPainted(false);
        bArrays1.setContentAreaFilled(false);
        bArrays1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bArrays1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bArrays1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bArrays1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bArrays1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bArrays1MouseExited(evt);
            }
        });
        bArrays1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bArrays1ActionPerformed(evt);
            }
        });
        pSCenter19.add(bArrays1);

        pLoading.add(pSCenter19, java.awt.BorderLayout.CENTER);

        pSBot11.setBackground(new java.awt.Color(35, 40, 50));
        pSBot11.setPreferredSize(new java.awt.Dimension(0, 100));
        pSBot11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));
        pLoading.add(pSBot11, java.awt.BorderLayout.SOUTH);

        pSearching.add(pLoading, "Loading");

        pSearchingOperations.setBackground(new java.awt.Color(35, 40, 50));
        pSearchingOperations.setMinimumSize(new java.awt.Dimension(1280, 720));
        pSearchingOperations.setPreferredSize(new java.awt.Dimension(1280, 720));
        pSearchingOperations.setLayout(new java.awt.BorderLayout());

        pSTop12.setBackground(new java.awt.Color(24, 25, 28));
        pSTop12.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 100, 0));

        bBack9.setBackground(new java.awt.Color(24, 25, 28));
        bBack9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/back_icon.png"))); // NOI18N
        bBack9.setBorder(null);
        bBack9.setBorderPainted(false);
        bBack9.setContentAreaFilled(false);
        bBack9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bBack9.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_back_icon.png"))); // NOI18N
        bBack9.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bBack9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBack9ActionPerformed(evt);
            }
        });
        pSTop12.add(bBack9);

        sTitle12.setFont(new java.awt.Font("Russo One", 1, 48)); // NOI18N
        sTitle12.setForeground(new java.awt.Color(255, 255, 255));
        sTitle12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sTitle12.setText("SEARCHING OPERATIONS");
        sTitle12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sTitle12.setMaximumSize(new java.awt.Dimension(0, 0));
        sTitle12.setMinimumSize(new java.awt.Dimension(0, 0));
        sTitle12.setPreferredSize(new java.awt.Dimension(700, 100));
        sTitle12.setRequestFocusEnabled(false);
        pSTop12.add(sTitle12);

        bHome.setBackground(new java.awt.Color(24, 25, 28));
        bHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/home_icon.png"))); // NOI18N
        bHome.setBorder(null);
        bHome.setBorderPainted(false);
        bHome.setContentAreaFilled(false);
        bHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bHome.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_home_icon.png"))); // NOI18N
        bHome.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHomeActionPerformed(evt);
            }
        });
        pSTop12.add(bHome);

        pSearchingOperations.add(pSTop12, java.awt.BorderLayout.PAGE_START);

        pSCenter20.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter20.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 25, 0));

        pInput.setBackground(new java.awt.Color(35, 40, 50));
        pInput.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INPUT", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Russo One", 2, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        pInput.setForeground(new java.awt.Color(255, 255, 255));
        pInput.setPreferredSize(new java.awt.Dimension(550, 600));
        pInput.setLayout(new java.awt.CardLayout());

        pMenus.setBackground(new java.awt.Color(35, 40, 50));
        pMenus.setLayout(new java.awt.GridLayout(1, 0));

        bBinary.setBackground(new java.awt.Color(35, 40, 50));
        bBinary.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bBinary.setForeground(new java.awt.Color(255, 255, 255));
        bBinary.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/op_search_gif.gif"))); // NOI18N
        bBinary.setText("BINARY SEARCH");
        bBinary.setBorder(null);
        bBinary.setBorderPainted(false);
        bBinary.setContentAreaFilled(false);
        bBinary.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bBinary.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bBinary.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bBinaryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bBinaryMouseExited(evt);
            }
        });
        bBinary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBinaryActionPerformed(evt);
            }
        });
        pMenus.add(bBinary);

        pInput.add(pMenus, "Menus");

        pILoading.setBackground(new java.awt.Color(35, 40, 50));
        pILoading.setLayout(new java.awt.BorderLayout());

        bArrays3.setBackground(new java.awt.Color(35, 40, 50));
        bArrays3.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bArrays3.setForeground(new java.awt.Color(255, 255, 255));
        bArrays3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_loading_gif.gif"))); // NOI18N
        bArrays3.setText("LOADING...");
        bArrays3.setBorder(null);
        bArrays3.setBorderPainted(false);
        bArrays3.setContentAreaFilled(false);
        bArrays3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bArrays3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bArrays3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bArrays3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bArrays3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bArrays3MouseExited(evt);
            }
        });
        bArrays3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bArrays3ActionPerformed(evt);
            }
        });
        pILoading.add(bArrays3, java.awt.BorderLayout.CENTER);

        pInput.add(pILoading, "ILoading");

        pBinaryMenu.setBackground(new java.awt.Color(35, 40, 50));
        pBinaryMenu.setLayout(new java.awt.BorderLayout());

        pSTop17.setBackground(new java.awt.Color(35, 40, 50));
        pSTop17.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop17.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 55, 25));

        bSearchBack.setBackground(new java.awt.Color(24, 25, 28));
        bSearchBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/go_back_icon.png"))); // NOI18N
        bSearchBack.setBorder(null);
        bSearchBack.setBorderPainted(false);
        bSearchBack.setContentAreaFilled(false);
        bSearchBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bSearchBack.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bSearchBack.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bSearchBack.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_go_back_icon.png"))); // NOI18N
        bSearchBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSearchBackActionPerformed(evt);
            }
        });
        pSTop17.add(bSearchBack);

        pBinaryMenu.add(pSTop17, java.awt.BorderLayout.NORTH);

        pSCenter23.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter23.setPreferredSize(new java.awt.Dimension(0, 0));
        pSCenter23.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 0));

        bSearchTitle.setBackground(new java.awt.Color(35, 40, 50));
        bSearchTitle.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bSearchTitle.setForeground(new java.awt.Color(255, 255, 255));
        bSearchTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_op_search_gif.gif"))); // NOI18N
        bSearchTitle.setText("BINARY SEARCH");
        bSearchTitle.setBorder(null);
        bSearchTitle.setBorderPainted(false);
        bSearchTitle.setContentAreaFilled(false);
        bSearchTitle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bSearchTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bSearchTitle.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bSearchTitle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bSearchTitleMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bSearchTitleMouseExited(evt);
            }
        });
        pSCenter23.add(bSearchTitle);

        jPanel13.setBackground(new java.awt.Color(35, 40, 50));
        jPanel13.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        pSCenter23.add(jPanel13);

        bElements4.setBackground(new java.awt.Color(35, 40, 50));
        bElements4.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bElements4.setForeground(new java.awt.Color(255, 255, 255));
        bElements4.setText("Enter Elements ");
        bElements4.setBorder(null);
        bElements4.setBorderPainted(false);
        bElements4.setContentAreaFilled(false);
        bElements4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bElements4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bElements4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bElements4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bElements4MouseExited(evt);
            }
        });
        pSCenter23.add(bElements4);

        jPanel15.setBackground(new java.awt.Color(35, 40, 50));
        jPanel15.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        pSCenter23.add(jPanel15);

        aBElement0.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aBElement0.setText("0");
        aBElement0.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pos 1", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aBElement0.setMinimumSize(new java.awt.Dimension(0, 0));
        aBElement0.setOpaque(true);
        aBElement0.setPreferredSize(new java.awt.Dimension(50, 50));
        aBElement0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aBElement0ActionPerformed(evt);
            }
        });
        pSCenter23.add(aBElement0);

        aBElement1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aBElement1.setText("0");
        aBElement1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pos 2", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aBElement1.setMinimumSize(new java.awt.Dimension(0, 0));
        aBElement1.setOpaque(true);
        aBElement1.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter23.add(aBElement1);

        aBElement2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aBElement2.setText("0");
        aBElement2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pos 3", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aBElement2.setMinimumSize(new java.awt.Dimension(0, 0));
        aBElement2.setOpaque(true);
        aBElement2.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter23.add(aBElement2);

        aBElement3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aBElement3.setText("0");
        aBElement3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pos 4", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aBElement3.setMinimumSize(new java.awt.Dimension(0, 0));
        aBElement3.setOpaque(true);
        aBElement3.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter23.add(aBElement3);

        aBElement4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aBElement4.setText("0");
        aBElement4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pos 5", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aBElement4.setMinimumSize(new java.awt.Dimension(0, 0));
        aBElement4.setOpaque(true);
        aBElement4.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter23.add(aBElement4);

        aBElement5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aBElement5.setText("0");
        aBElement5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pos 6", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aBElement5.setMinimumSize(new java.awt.Dimension(0, 0));
        aBElement5.setOpaque(true);
        aBElement5.setPreferredSize(new java.awt.Dimension(50, 50));
        aBElement5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aBElement5ActionPerformed(evt);
            }
        });
        pSCenter23.add(aBElement5);

        jPanel16.setBackground(new java.awt.Color(35, 40, 50));
        jPanel16.setPreferredSize(new java.awt.Dimension(1000, 5));

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        pSCenter23.add(jPanel16);

        jPanel17.setBackground(new java.awt.Color(35, 40, 50));
        jPanel17.setPreferredSize(new java.awt.Dimension(1000, 25));

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        pSCenter23.add(jPanel17);

        bElements5.setBackground(new java.awt.Color(35, 40, 50));
        bElements5.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bElements5.setForeground(new java.awt.Color(255, 255, 255));
        bElements5.setText("Enter element to search");
        bElements5.setBorder(null);
        bElements5.setBorderPainted(false);
        bElements5.setContentAreaFilled(false);
        bElements5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bElements5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bElements5.setPreferredSize(new java.awt.Dimension(300, 22));
        bElements5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bElements5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bElements5MouseExited(evt);
            }
        });
        pSCenter23.add(bElements5);

        jPanel18.setBackground(new java.awt.Color(35, 40, 50));
        jPanel18.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        pSCenter23.add(jPanel18);

        aBValue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aBValue.setText("0");
        aBValue.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Value", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aBValue.setMinimumSize(new java.awt.Dimension(0, 0));
        aBValue.setOpaque(true);
        aBValue.setPreferredSize(new java.awt.Dimension(50, 50));
        aBValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aBValueActionPerformed(evt);
            }
        });
        pSCenter23.add(aBValue);

        pBinaryMenu.add(pSCenter23, java.awt.BorderLayout.CENTER);

        pSBot15.setBackground(new java.awt.Color(35, 40, 50));
        pSBot15.setPreferredSize(new java.awt.Dimension(0, 100));
        pSBot15.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));

        bCount.setBackground(new java.awt.Color(24, 25, 28));
        bCount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/submit_icon.png"))); // NOI18N
        bCount.setBorder(null);
        bCount.setBorderPainted(false);
        bCount.setContentAreaFilled(false);
        bCount.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bCount.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bCount.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_submit_icon.png"))); // NOI18N
        bCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCountActionPerformed(evt);
            }
        });
        pSBot15.add(bCount);

        pBinaryMenu.add(pSBot15, java.awt.BorderLayout.SOUTH);

        pInput.add(pBinaryMenu, "BinaryMenu");

        pSCenter20.add(pInput);

        pOutput.setBackground(new java.awt.Color(35, 40, 50));
        pOutput.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "OUTPUT", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Russo One", 2, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        pOutput.setForeground(new java.awt.Color(255, 255, 255));
        pOutput.setPreferredSize(new java.awt.Dimension(550, 600));
        pOutput.setLayout(new java.awt.CardLayout());

        pOIntro.setBackground(new java.awt.Color(35, 40, 50));
        pOIntro.setLayout(new java.awt.BorderLayout());

        jScrollPane12.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane12.setBorder(null);
        jScrollPane12.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane12.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane12.setHorizontalScrollBar(null);
        jScrollPane12.setOpaque(false);
        jScrollPane12.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane12.setRequestFocusEnabled(false);
        jScrollPane12.setWheelScrollingEnabled(false);

        jTextArea12.setEditable(false);
        jTextArea12.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea12.setColumns(20);
        jTextArea12.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        jTextArea12.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea12.setLineWrap(true);
        jTextArea12.setText("Hey there, curious clicker! Want to know more about the buttons on this screen? Well, it's as easy as a single click or tap! Just pick a button on the left that piques your interest and voila! A magical description will appear before your very eyes! It's like having a button whisperer in your pocket! This nifty feature is here to help you navigate and understand this interface, so don't be shy, give those buttons a click and unlock their secrets!");
        jTextArea12.setWrapStyleWord(true);
        jTextArea12.setAutoscrolls(false);
        jTextArea12.setBorder(null);
        jTextArea12.setFocusable(false);
        jTextArea12.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane12.setViewportView(jTextArea12);

        pOIntro.add(jScrollPane12, java.awt.BorderLayout.CENTER);

        pOutput.add(pOIntro, "OIntro");

        pOLoading.setBackground(new java.awt.Color(35, 40, 50));
        pOLoading.setLayout(new java.awt.BorderLayout());

        bArrays2.setBackground(new java.awt.Color(35, 40, 50));
        bArrays2.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bArrays2.setForeground(new java.awt.Color(255, 255, 255));
        bArrays2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_loading_gif.gif"))); // NOI18N
        bArrays2.setText("LOADING...");
        bArrays2.setBorder(null);
        bArrays2.setBorderPainted(false);
        bArrays2.setContentAreaFilled(false);
        bArrays2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bArrays2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bArrays2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bArrays2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bArrays2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bArrays2MouseExited(evt);
            }
        });
        bArrays2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bArrays2ActionPerformed(evt);
            }
        });
        pOLoading.add(bArrays2, java.awt.BorderLayout.CENTER);

        pOutput.add(pOLoading, "OLoading");

        pBinaryIntro.setBackground(new java.awt.Color(35, 40, 50));
        pBinaryIntro.setFocusable(false);
        pBinaryIntro.setLayout(new java.awt.BorderLayout());

        jScrollPane21.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane21.setBorder(null);
        jScrollPane21.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane21.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane21.setHorizontalScrollBar(null);
        jScrollPane21.setOpaque(false);
        jScrollPane21.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane21.setRequestFocusEnabled(false);
        jScrollPane21.setWheelScrollingEnabled(false);

        jTextArea18.setEditable(false);
        jTextArea18.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea18.setColumns(20);
        jTextArea18.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        jTextArea18.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea18.setLineWrap(true);
        jTextArea18.setText("Binary search is a powerful searching algorithm used to find a specific value within a sorted collection of elements. It follows a divide-and-conquer approach, repeatedly dividing the search space in half until the desired element is found or determined to be absent.\n\nThe algorithm begins by comparing the target value with the middle element of the sorted array. If the target is equal to the middle element, the search is successful. If the target is smaller, the search continues in the lower half of the array, discarding the upper half. Similarly, if the target is larger, the search proceeds in the upper half, discarding the lower half.\n\nBy repeatedly dividing the search space in half, binary search efficiently narrows down the possible locations of the target value. This process continues until the target is found or the search space is reduced to zero, indicating that the target is not present in the array.\n\nBinary search has a time complexity of O(log n), making it highly efficient for large collections of data. It is widely used in various applications, such as searching in databases, finding elements in sorted arrays, and implementing data structures like binary search trees.");
        jTextArea18.setWrapStyleWord(true);
        jTextArea18.setAutoscrolls(false);
        jTextArea18.setBorder(null);
        jTextArea18.setFocusable(false);
        jTextArea18.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane21.setViewportView(jTextArea18);

        pBinaryIntro.add(jScrollPane21, java.awt.BorderLayout.CENTER);

        pOutput.add(pBinaryIntro, "BinaryIntro");

        pBinaryOutput.setBackground(new java.awt.Color(35, 40, 50));
        pBinaryOutput.setFocusable(false);
        pBinaryOutput.setLayout(new java.awt.BorderLayout());

        jScrollPane23.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane23.setBorder(null);
        jScrollPane23.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane23.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane23.setHorizontalScrollBar(null);
        jScrollPane23.setOpaque(false);
        jScrollPane23.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane23.setRequestFocusEnabled(false);
        jScrollPane23.setWheelScrollingEnabled(false);

        binaryOutputArea.setEditable(false);
        binaryOutputArea.setBackground(new java.awt.Color(35, 40, 50));
        binaryOutputArea.setColumns(20);
        binaryOutputArea.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        binaryOutputArea.setForeground(new java.awt.Color(255, 255, 255));
        binaryOutputArea.setLineWrap(true);
        binaryOutputArea.setWrapStyleWord(true);
        binaryOutputArea.setAutoscrolls(false);
        binaryOutputArea.setBorder(null);
        binaryOutputArea.setFocusable(false);
        binaryOutputArea.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane23.setViewportView(binaryOutputArea);

        pBinaryOutput.add(jScrollPane23, java.awt.BorderLayout.CENTER);

        pOutput.add(pBinaryOutput, "BinaryOutput");

        pSCenter20.add(pOutput);

        pSearchingOperations.add(pSCenter20, java.awt.BorderLayout.CENTER);

        pSearching.add(pSearchingOperations, "SearchingOperations");

        pContainer.add(pSearching, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pContainer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bBack4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBack4ActionPerformed
        // Show the loading panel first
        CardLayout cardLayout = (CardLayout) pSearching.getLayout();
        cardLayout.show(pSearching, "Loading");

        // Replace "Home" with the actual panel name in the Home JFrame
        Home homeFrame = new Home();

        // Delay the visibility of the Home JFrame
        Timer showTimer = new Timer(500, (ActionEvent e) -> {
            homeFrame.setVisible(true);
        });
        showTimer.setRepeats(false);
        showTimer.start();

        // Dispose the current frame after a delay
        Timer disposeTimer = new Timer(600, (ActionEvent e) -> {
            dispose();
        });
        disposeTimer.setRepeats(false);
        disposeTimer.start();
    }//GEN-LAST:event_bBack4ActionPerformed

    private void bNext4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNext4ActionPerformed
       CardLayout cardLayout = (CardLayout) pSearching.getLayout();
        cardLayout.show(pSearching, "Loading");
        Timer timer = new Timer(500, (ActionEvent e) -> {
            cardLayout.show(pSearching, "SearchingOperations");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bNext4ActionPerformed

    private void bArrays1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays1MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bArrays1MouseEntered

    private void bArrays1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays1MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bArrays1MouseExited

    private void bArrays1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bArrays1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bArrays1ActionPerformed

    private void bBack9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBack9ActionPerformed
        CardLayout cardLayout = (CardLayout) pSearching.getLayout();
        cardLayout.show(pSearching, "Loading");
        Timer timer = new Timer(500, (ActionEvent e) -> {
            cardLayout.show(pSearching, "SearchingIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bBack9ActionPerformed

    private void bHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHomeActionPerformed
        // Show the loading panel first
        CardLayout cardLayout = (CardLayout) pSearching.getLayout();
        cardLayout.show(pSearching, "Loading");

        // Replace "Home" with the actual panel name in the Home JFrame
        Home homeFrame = new Home();

        // Delay the visibility of the Home JFrame
        Timer showTimer = new Timer(500, (ActionEvent e) -> {
            homeFrame.setVisible(true);
        });
        showTimer.setRepeats(false);
        showTimer.start();

        // Dispose the current frame after a delay
        Timer disposeTimer = new Timer(600, (ActionEvent e) -> {
            dispose();
        });
        disposeTimer.setRepeats(false);
        disposeTimer.start();
    }//GEN-LAST:event_bHomeActionPerformed

    private void bBinaryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bBinaryMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bBinaryMouseEntered

    private void bBinaryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bBinaryMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bBinaryMouseExited

    private void bBinaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBinaryActionPerformed
        // Get a reference to the CardLayout of the pInput panel
        CardLayout inputLayout = (CardLayout) pInput.getLayout();

        // Show the "ILoading" card in the pInput panel
        inputLayout.show(pInput, "ILoading");

        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pOutput.getLayout();
        
        // Load the binary search input values from a file
        binarySearchInputValuesFromFile = FileHandler.loadBinarySearchInputValues();
        for (int i = 0; i < binarySearchFields.length; i++) {
            binarySearchFields[i].setText(Integer.toString(binarySearchInputValuesFromFile[i]));
        }
        
        // Show the "OLoading" card in the pOutput panel
        outputLayout.show(pOutput, "OLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            inputLayout.show(pInput, "BinaryMenu");
            outputLayout.show(pOutput, "BinaryIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bBinaryActionPerformed

    private void bArrays3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays3MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bArrays3MouseEntered

    private void bArrays3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays3MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bArrays3MouseExited

    private void bArrays3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bArrays3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bArrays3ActionPerformed

    private void bSearchBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSearchBackActionPerformed
        switchLayouts(pInput, pOutput);
    }//GEN-LAST:event_bSearchBackActionPerformed

    private void bSearchTitleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSearchTitleMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bSearchTitleMouseEntered

    private void bSearchTitleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSearchTitleMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bSearchTitleMouseExited

    private void bCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCountActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pOutput.getLayout();
        outputLayout.show(pOutput, "OLoading");

        // Get the input values from the text fields
        int[] numbers = new int[6];
        try {
            numbers[0] = Integer.parseInt(aBElement0.getText());
            numbers[1] = Integer.parseInt(aBElement1.getText());
            numbers[2] = Integer.parseInt(aBElement2.getText());
            numbers[3] = Integer.parseInt(aBElement3.getText());
            numbers[4] = Integer.parseInt(aBElement4.getText());
            numbers[5] = Integer.parseInt(aBElement5.getText());
        } catch (NumberFormatException e) {
            // Handle invalid input
            JOptionPane.showMessageDialog(this, "Invalid input in one of the fields.");
            return;
        }

        int value = Integer.parseInt(aBValue.getText());
        
        // Save the input values to a file
        FileHandler.saveBinarySearchInputValues(numbers);
        

         // Perform the binary search
        DataHandler ops = new DataHandler(numbers, null, null);
        String result = ops.search(value);

        binaryOutputArea.setText(result);

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pOutput, "BinaryOutput");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bCountActionPerformed

    private void bArrays2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays2MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bArrays2MouseEntered

    private void bArrays2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays2MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bArrays2MouseExited

    private void bArrays2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bArrays2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bArrays2ActionPerformed

    private void bElements4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements4MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bElements4MouseEntered

    private void bElements4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements4MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bElements4MouseExited

    private void aBElement0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aBElement0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aBElement0ActionPerformed

    private void aBElement5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aBElement5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aBElement5ActionPerformed

    private void bElements5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements5MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bElements5MouseEntered

    private void bElements5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements5MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bElements5MouseExited

    private void aBValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aBValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aBValueActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchAlgoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchAlgoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchAlgoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchAlgoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchAlgoFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField aBElement0;
    private javax.swing.JTextField aBElement1;
    private javax.swing.JTextField aBElement2;
    private javax.swing.JTextField aBElement3;
    private javax.swing.JTextField aBElement4;
    private javax.swing.JTextField aBElement5;
    private javax.swing.JTextField aBValue;
    private javax.swing.JButton bArrays1;
    private javax.swing.JButton bArrays2;
    private javax.swing.JButton bArrays3;
    private javax.swing.JButton bBack4;
    private javax.swing.JButton bBack9;
    private javax.swing.JButton bBinary;
    private javax.swing.JButton bCount;
    private javax.swing.JButton bElements4;
    private javax.swing.JButton bElements5;
    private javax.swing.JButton bHome;
    private javax.swing.JButton bNext4;
    private javax.swing.JButton bSearchBack;
    private javax.swing.JButton bSearchTitle;
    private javax.swing.JTextArea binaryOutputArea;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea jTextArea12;
    private javax.swing.JTextArea jTextArea18;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JPanel pBinaryIntro;
    private javax.swing.JPanel pBinaryMenu;
    private javax.swing.JPanel pBinaryOutput;
    private javax.swing.JPanel pContainer;
    private javax.swing.JPanel pILoading;
    private javax.swing.JPanel pInput;
    private javax.swing.JPanel pLoading;
    private javax.swing.JPanel pMenus;
    private javax.swing.JPanel pOIntro;
    private javax.swing.JPanel pOLoading;
    private javax.swing.JPanel pOutput;
    private javax.swing.JPanel pSBot11;
    private javax.swing.JPanel pSBot15;
    private javax.swing.JPanel pSBot6;
    private javax.swing.JPanel pSCenter10;
    private javax.swing.JPanel pSCenter11;
    private javax.swing.JPanel pSCenter19;
    private javax.swing.JPanel pSCenter20;
    private javax.swing.JPanel pSCenter23;
    private javax.swing.JPanel pSTop11;
    private javax.swing.JPanel pSTop12;
    private javax.swing.JPanel pSTop17;
    private javax.swing.JPanel pSTop6;
    private javax.swing.JPanel pSearching;
    private javax.swing.JPanel pSearchingIntro;
    private javax.swing.JPanel pSearchingOperations;
    private javax.swing.JLabel sTitle12;
    private javax.swing.JLabel sTitle7;
    private javax.swing.JLabel structImg4;
    // End of variables declaration//GEN-END:variables
}
