/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package dataStructures;

import java.awt.CardLayout;
import javax.swing.Timer;
import main.Home;
import java.awt.event.ActionEvent;
import javax.swing.*;
import handlers.DataHandler;
import handlers.FileHandler;
import java.util.LinkedList;

/**
 *
 * @author jhnyx
 */
public class LinkedListsFrame extends javax.swing.JFrame {

    private Home home;

    private final JTextField[] insertFields;
    private final JTextField[] deleteFields;
    private final JTextField[] searchFields;

    /**
     * Creates new form LinkedListsFrame
     */
    public LinkedListsFrame() {
        initComponents();
        home = new Home();

        //Linked list fields
        insertFields = new JTextField[]{IElement0, IElement1, IElement2, IElement3, IElement4, IElement5};
        deleteFields = new JTextField[]{DElement0, DElement1, DElement2, DElement3, DElement4, DElement5};
        searchFields = new JTextField[]{SElement0, SElement1, SElement2, SElement3, SElement4, SElement5};

    }

    private void switchLayouts(JPanel pInput, JPanel pOutput) {

        // Get a reference to the CardLayout of the pInput panel
        CardLayout InputLayout = (CardLayout) pInput.getLayout();

        // Show the "ILoading" card in the pInput panel
        InputLayout.show(pInput, "ILoading");

        // Get a reference to the CardLayout of the pOutput panel
        CardLayout OutputLayout = (CardLayout) pOutput.getLayout();

        // Show the "OLoading" card in the pOutput panel
        OutputLayout.show(pOutput, "OLoading");

        // Set up a timer to switch back to the main menus after a delay
        Timer timer = new Timer(500, (ActionEvent e) -> {
            InputLayout.show(pInput, "Menus");
            OutputLayout.show(pOutput, "OIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pContainer = new javax.swing.JPanel();
        pLinkedLists = new javax.swing.JPanel();
        pLinkedListsIntro = new javax.swing.JPanel();
        pSTop5 = new javax.swing.JPanel();
        bBack3 = new javax.swing.JButton();
        sTitle6 = new javax.swing.JLabel();
        bNext3 = new javax.swing.JButton();
        pSCenter8 = new javax.swing.JPanel();
        structImg3 = new javax.swing.JLabel();
        pSCenter9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        pSBot5 = new javax.swing.JPanel();
        pLoading = new javax.swing.JPanel();
        pSTop11 = new javax.swing.JPanel();
        pSCenter19 = new javax.swing.JPanel();
        bArrays1 = new javax.swing.JButton();
        pSBot11 = new javax.swing.JPanel();
        pLinkedListsOperations = new javax.swing.JPanel();
        pSTop12 = new javax.swing.JPanel();
        bBack9 = new javax.swing.JButton();
        sTitle12 = new javax.swing.JLabel();
        bHome = new javax.swing.JButton();
        pSCenter20 = new javax.swing.JPanel();
        pInput = new javax.swing.JPanel();
        pMenus = new javax.swing.JPanel();
        bInsertion = new javax.swing.JButton();
        bDeletion = new javax.swing.JButton();
        bLSearch = new javax.swing.JButton();
        pILoading = new javax.swing.JPanel();
        bArrays3 = new javax.swing.JButton();
        pInsertion = new javax.swing.JPanel();
        pSTop15 = new javax.swing.JPanel();
        bInsertBack = new javax.swing.JButton();
        pSCenter21 = new javax.swing.JPanel();
        bInsertionTitle = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        bElements1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        IElement0 = new javax.swing.JTextField();
        IElement1 = new javax.swing.JTextField();
        IElement2 = new javax.swing.JTextField();
        IElement3 = new javax.swing.JTextField();
        IElement4 = new javax.swing.JTextField();
        IElement5 = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        InsertIndex = new javax.swing.JSlider();
        jPanel7 = new javax.swing.JPanel();
        bEInsert = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        IValue = new javax.swing.JTextField();
        pSBot13 = new javax.swing.JPanel();
        bInsert = new javax.swing.JButton();
        pDeletion = new javax.swing.JPanel();
        pSTop16 = new javax.swing.JPanel();
        bDeleteBack = new javax.swing.JButton();
        pSCenter22 = new javax.swing.JPanel();
        bDeletionTitle = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        bElements2 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        DElement0 = new javax.swing.JTextField();
        DElement1 = new javax.swing.JTextField();
        DElement2 = new javax.swing.JTextField();
        DElement3 = new javax.swing.JTextField();
        DElement4 = new javax.swing.JTextField();
        DElement5 = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        DeleteIndex = new javax.swing.JSlider();
        jPanel14 = new javax.swing.JPanel();
        bElements3 = new javax.swing.JButton();
        pSBot14 = new javax.swing.JPanel();
        bDelete = new javax.swing.JButton();
        pSearch = new javax.swing.JPanel();
        pSTop17 = new javax.swing.JPanel();
        bSearchBack = new javax.swing.JButton();
        pSCenter23 = new javax.swing.JPanel();
        bSearchTitle = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        bElements4 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        SElement0 = new javax.swing.JTextField();
        SElement1 = new javax.swing.JTextField();
        SElement2 = new javax.swing.JTextField();
        SElement3 = new javax.swing.JTextField();
        SElement4 = new javax.swing.JTextField();
        SElement5 = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        bElements5 = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        SValue = new javax.swing.JTextField();
        pSBot15 = new javax.swing.JPanel();
        bSearch = new javax.swing.JButton();
        pOutput = new javax.swing.JPanel();
        pOIntro = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTextArea12 = new javax.swing.JTextArea();
        pOLoading = new javax.swing.JPanel();
        bArrays2 = new javax.swing.JButton();
        pInsertionIntro = new javax.swing.JPanel();
        jScrollPane15 = new javax.swing.JScrollPane();
        jTextArea14 = new javax.swing.JTextArea();
        pInsertionOutput = new javax.swing.JPanel();
        jScrollPane17 = new javax.swing.JScrollPane();
        insertionOutputArea = new javax.swing.JTextArea();
        pDeletionIntro = new javax.swing.JPanel();
        jScrollPane18 = new javax.swing.JScrollPane();
        jTextArea16 = new javax.swing.JTextArea();
        pDeletionOutput = new javax.swing.JPanel();
        jScrollPane20 = new javax.swing.JScrollPane();
        deletionOutputArea = new javax.swing.JTextArea();
        pSearchIntro = new javax.swing.JPanel();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTextArea18 = new javax.swing.JTextArea();
        pSearchOutput = new javax.swing.JPanel();
        jScrollPane23 = new javax.swing.JScrollPane();
        searchOutputArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        pContainer.setLayout(new java.awt.BorderLayout());

        pLinkedLists.setMaximumSize(new java.awt.Dimension(1280, 720));
        pLinkedLists.setRequestFocusEnabled(false);
        pLinkedLists.setLayout(new java.awt.CardLayout());

        pLinkedListsIntro.setBackground(new java.awt.Color(35, 40, 50));
        pLinkedListsIntro.setMinimumSize(new java.awt.Dimension(1280, 720));
        pLinkedListsIntro.setPreferredSize(new java.awt.Dimension(1280, 720));
        pLinkedListsIntro.setLayout(new java.awt.BorderLayout());

        pSTop5.setBackground(new java.awt.Color(24, 25, 28));
        pSTop5.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 100, 0));

        bBack3.setBackground(new java.awt.Color(24, 25, 28));
        bBack3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/back_icon.png"))); // NOI18N
        bBack3.setBorder(null);
        bBack3.setBorderPainted(false);
        bBack3.setContentAreaFilled(false);
        bBack3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bBack3.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_back_icon.png"))); // NOI18N
        bBack3.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bBack3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBack3ActionPerformed(evt);
            }
        });
        pSTop5.add(bBack3);

        sTitle6.setFont(new java.awt.Font("Russo One", 1, 48)); // NOI18N
        sTitle6.setForeground(new java.awt.Color(255, 255, 255));
        sTitle6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sTitle6.setText("LINKED LISTS");
        sTitle6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sTitle6.setMaximumSize(new java.awt.Dimension(0, 0));
        sTitle6.setMinimumSize(new java.awt.Dimension(0, 0));
        sTitle6.setPreferredSize(new java.awt.Dimension(700, 100));
        sTitle6.setRequestFocusEnabled(false);
        pSTop5.add(sTitle6);

        bNext3.setBackground(new java.awt.Color(24, 25, 28));
        bNext3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/next_icon.png"))); // NOI18N
        bNext3.setBorder(null);
        bNext3.setBorderPainted(false);
        bNext3.setContentAreaFilled(false);
        bNext3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bNext3.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_next_icon.png"))); // NOI18N
        bNext3.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bNext3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNext3ActionPerformed(evt);
            }
        });
        pSTop5.add(bNext3);

        pLinkedListsIntro.add(pSTop5, java.awt.BorderLayout.PAGE_START);

        pSCenter8.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter8.setLayout(new java.awt.BorderLayout());

        structImg3.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        structImg3.setForeground(new java.awt.Color(255, 255, 255));
        structImg3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        structImg3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/linkedlist_gif.gif"))); // NOI18N
        structImg3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pSCenter8.add(structImg3, java.awt.BorderLayout.WEST);

        pSCenter9.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 25));

        jScrollPane4.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane4.setBorder(null);
        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane4.setHorizontalScrollBar(null);
        jScrollPane4.setOpaque(false);
        jScrollPane4.setPreferredSize(new java.awt.Dimension(750, 1000));

        jTextArea4.setEditable(false);
        jTextArea4.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea4.setColumns(20);
        jTextArea4.setFont(new java.awt.Font("Russo One", 0, 22)); // NOI18N
        jTextArea4.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea4.setLineWrap(true);
        jTextArea4.setText("A linked list is a data structure that consists of a sequence of nodes, where each node contains data and a reference to the next node in the list. The first node is called the head, and the last node is called the tail. If the tail node has a null reference to the next node, the linked list ends.\n\nLinked lists are useful for applications that require frequent insertions and deletions of data, even for large lists. Unlike arrays, linked lists do not require contiguous memory allocation, so they can be easily resized or reordered. This makes them ideal for building dynamic data structures such as stacks, queues, and hash tables.\n\nOverall, linked lists are a versatile and powerful data structure widely used in programming. They provide efficient insertion and deletion operations, and are commonly used to build dynamic data structures such as stacks, queues, and hash tables.");
        jTextArea4.setWrapStyleWord(true);
        jTextArea4.setAutoscrolls(false);
        jTextArea4.setBorder(null);
        jTextArea4.setFocusable(false);
        jScrollPane4.setViewportView(jTextArea4);

        pSCenter9.add(jScrollPane4);

        pSCenter8.add(pSCenter9, java.awt.BorderLayout.CENTER);

        pLinkedListsIntro.add(pSCenter8, java.awt.BorderLayout.CENTER);

        pSBot5.setBackground(new java.awt.Color(35, 40, 50));
        pSBot5.setPreferredSize(new java.awt.Dimension(0, 100));
        pSBot5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));
        pLinkedListsIntro.add(pSBot5, java.awt.BorderLayout.SOUTH);

        pLinkedLists.add(pLinkedListsIntro, "LinkedListsIntro");

        pLoading.setBackground(new java.awt.Color(35, 40, 50));
        pLoading.setMinimumSize(new java.awt.Dimension(1280, 720));
        pLoading.setPreferredSize(new java.awt.Dimension(1280, 720));
        pLoading.setLayout(new java.awt.BorderLayout());

        pSTop11.setBackground(new java.awt.Color(35, 40, 50));
        pSTop11.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 100, 25));
        pLoading.add(pSTop11, java.awt.BorderLayout.NORTH);

        pSCenter19.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter19.setLayout(new java.awt.GridLayout(1, 0));

        bArrays1.setBackground(new java.awt.Color(35, 40, 50));
        bArrays1.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bArrays1.setForeground(new java.awt.Color(255, 255, 255));
        bArrays1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/loading_gif.gif"))); // NOI18N
        bArrays1.setText("LOADING...");
        bArrays1.setBorder(null);
        bArrays1.setBorderPainted(false);
        bArrays1.setContentAreaFilled(false);
        bArrays1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bArrays1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bArrays1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bArrays1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bArrays1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bArrays1MouseExited(evt);
            }
        });
        bArrays1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bArrays1ActionPerformed(evt);
            }
        });
        pSCenter19.add(bArrays1);

        pLoading.add(pSCenter19, java.awt.BorderLayout.CENTER);

        pSBot11.setBackground(new java.awt.Color(35, 40, 50));
        pSBot11.setPreferredSize(new java.awt.Dimension(0, 100));
        pSBot11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));
        pLoading.add(pSBot11, java.awt.BorderLayout.SOUTH);

        pLinkedLists.add(pLoading, "Loading");

        pLinkedListsOperations.setBackground(new java.awt.Color(35, 40, 50));
        pLinkedListsOperations.setMinimumSize(new java.awt.Dimension(1280, 720));
        pLinkedListsOperations.setPreferredSize(new java.awt.Dimension(1280, 720));
        pLinkedListsOperations.setLayout(new java.awt.BorderLayout());

        pSTop12.setBackground(new java.awt.Color(24, 25, 28));
        pSTop12.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 50, 0));

        bBack9.setBackground(new java.awt.Color(24, 25, 28));
        bBack9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/back_icon.png"))); // NOI18N
        bBack9.setBorder(null);
        bBack9.setBorderPainted(false);
        bBack9.setContentAreaFilled(false);
        bBack9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bBack9.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_back_icon.png"))); // NOI18N
        bBack9.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bBack9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBack9ActionPerformed(evt);
            }
        });
        pSTop12.add(bBack9);

        sTitle12.setFont(new java.awt.Font("Russo One", 1, 48)); // NOI18N
        sTitle12.setForeground(new java.awt.Color(255, 255, 255));
        sTitle12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sTitle12.setText("LINKED LISTS OPERATIONS");
        sTitle12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sTitle12.setMaximumSize(new java.awt.Dimension(0, 0));
        sTitle12.setMinimumSize(new java.awt.Dimension(0, 0));
        sTitle12.setPreferredSize(new java.awt.Dimension(800, 100));
        sTitle12.setRequestFocusEnabled(false);
        pSTop12.add(sTitle12);

        bHome.setBackground(new java.awt.Color(24, 25, 28));
        bHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/home_icon.png"))); // NOI18N
        bHome.setBorder(null);
        bHome.setBorderPainted(false);
        bHome.setContentAreaFilled(false);
        bHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bHome.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_home_icon.png"))); // NOI18N
        bHome.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHomeActionPerformed(evt);
            }
        });
        pSTop12.add(bHome);

        pLinkedListsOperations.add(pSTop12, java.awt.BorderLayout.PAGE_START);

        pSCenter20.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter20.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 25, 0));

        pInput.setBackground(new java.awt.Color(35, 40, 50));
        pInput.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INPUT", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Russo One", 2, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        pInput.setForeground(new java.awt.Color(255, 255, 255));
        pInput.setPreferredSize(new java.awt.Dimension(550, 600));
        pInput.setLayout(new java.awt.CardLayout());

        pMenus.setBackground(new java.awt.Color(35, 40, 50));
        pMenus.setLayout(new java.awt.GridLayout(3, 0));

        bInsertion.setBackground(new java.awt.Color(35, 40, 50));
        bInsertion.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bInsertion.setForeground(new java.awt.Color(255, 255, 255));
        bInsertion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_op_insertion_gif.gif"))); // NOI18N
        bInsertion.setText("INSERTION");
        bInsertion.setBorder(null);
        bInsertion.setBorderPainted(false);
        bInsertion.setContentAreaFilled(false);
        bInsertion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bInsertion.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bInsertion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bInsertionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bInsertionMouseExited(evt);
            }
        });
        bInsertion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInsertionActionPerformed(evt);
            }
        });
        pMenus.add(bInsertion);

        bDeletion.setBackground(new java.awt.Color(35, 40, 50));
        bDeletion.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bDeletion.setForeground(new java.awt.Color(255, 255, 255));
        bDeletion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_op_deletion_gif.gif"))); // NOI18N
        bDeletion.setText("DELETION");
        bDeletion.setBorder(null);
        bDeletion.setBorderPainted(false);
        bDeletion.setContentAreaFilled(false);
        bDeletion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bDeletion.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bDeletion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bDeletionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bDeletionMouseExited(evt);
            }
        });
        bDeletion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeletionActionPerformed(evt);
            }
        });
        pMenus.add(bDeletion);

        bLSearch.setBackground(new java.awt.Color(35, 40, 50));
        bLSearch.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bLSearch.setForeground(new java.awt.Color(255, 255, 255));
        bLSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_op_search_gif.gif"))); // NOI18N
        bLSearch.setText("SEARCH");
        bLSearch.setBorder(null);
        bLSearch.setBorderPainted(false);
        bLSearch.setContentAreaFilled(false);
        bLSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bLSearch.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bLSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bLSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bLSearchMouseExited(evt);
            }
        });
        bLSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLSearchActionPerformed(evt);
            }
        });
        pMenus.add(bLSearch);

        pInput.add(pMenus, "Menus");

        pILoading.setBackground(new java.awt.Color(35, 40, 50));
        pILoading.setLayout(new java.awt.BorderLayout());

        bArrays3.setBackground(new java.awt.Color(35, 40, 50));
        bArrays3.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bArrays3.setForeground(new java.awt.Color(255, 255, 255));
        bArrays3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_loading_gif.gif"))); // NOI18N
        bArrays3.setText("LOADING...");
        bArrays3.setBorder(null);
        bArrays3.setBorderPainted(false);
        bArrays3.setContentAreaFilled(false);
        bArrays3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bArrays3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bArrays3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bArrays3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bArrays3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bArrays3MouseExited(evt);
            }
        });
        bArrays3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bArrays3ActionPerformed(evt);
            }
        });
        pILoading.add(bArrays3, java.awt.BorderLayout.CENTER);

        pInput.add(pILoading, "ILoading");

        pInsertion.setBackground(new java.awt.Color(35, 40, 50));
        pInsertion.setLayout(new java.awt.BorderLayout());

        pSTop15.setBackground(new java.awt.Color(35, 40, 50));
        pSTop15.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop15.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 55, 25));

        bInsertBack.setBackground(new java.awt.Color(24, 25, 28));
        bInsertBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/go_back_icon.png"))); // NOI18N
        bInsertBack.setBorder(null);
        bInsertBack.setBorderPainted(false);
        bInsertBack.setContentAreaFilled(false);
        bInsertBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bInsertBack.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bInsertBack.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bInsertBack.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_go_back_icon.png"))); // NOI18N
        bInsertBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInsertBackActionPerformed(evt);
            }
        });
        pSTop15.add(bInsertBack);

        pInsertion.add(pSTop15, java.awt.BorderLayout.NORTH);

        pSCenter21.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter21.setPreferredSize(new java.awt.Dimension(0, 0));
        pSCenter21.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 0));

        bInsertionTitle.setBackground(new java.awt.Color(35, 40, 50));
        bInsertionTitle.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bInsertionTitle.setForeground(new java.awt.Color(255, 255, 255));
        bInsertionTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_op_insertion_gif.gif"))); // NOI18N
        bInsertionTitle.setText("INSERTION");
        bInsertionTitle.setBorder(null);
        bInsertionTitle.setBorderPainted(false);
        bInsertionTitle.setContentAreaFilled(false);
        bInsertionTitle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bInsertionTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bInsertionTitle.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bInsertionTitle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bInsertionTitleMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bInsertionTitleMouseExited(evt);
            }
        });
        bInsertionTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInsertionTitleActionPerformed(evt);
            }
        });
        pSCenter21.add(bInsertionTitle);

        jPanel6.setBackground(new java.awt.Color(35, 40, 50));
        jPanel6.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pSCenter21.add(jPanel6);

        bElements1.setBackground(new java.awt.Color(35, 40, 50));
        bElements1.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bElements1.setForeground(new java.awt.Color(255, 255, 255));
        bElements1.setText("Enter Elements ");
        bElements1.setBorder(null);
        bElements1.setBorderPainted(false);
        bElements1.setContentAreaFilled(false);
        bElements1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bElements1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bElements1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bElements1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bElements1MouseExited(evt);
            }
        });
        bElements1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bElements1ActionPerformed(evt);
            }
        });
        pSCenter21.add(bElements1);

        jPanel4.setBackground(new java.awt.Color(35, 40, 50));
        jPanel4.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pSCenter21.add(jPanel4);

        IElement0.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        IElement0.setText("0");
        IElement0.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 0", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        IElement0.setMinimumSize(new java.awt.Dimension(0, 0));
        IElement0.setOpaque(true);
        IElement0.setPreferredSize(new java.awt.Dimension(50, 50));
        IElement0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IElement0ActionPerformed(evt);
            }
        });
        pSCenter21.add(IElement0);

        IElement1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        IElement1.setText("0");
        IElement1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 1", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        IElement1.setMinimumSize(new java.awt.Dimension(0, 0));
        IElement1.setOpaque(true);
        IElement1.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter21.add(IElement1);

        IElement2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        IElement2.setText("0");
        IElement2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 2", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        IElement2.setMinimumSize(new java.awt.Dimension(0, 0));
        IElement2.setOpaque(true);
        IElement2.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter21.add(IElement2);

        IElement3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        IElement3.setText("0");
        IElement3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 3", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        IElement3.setMinimumSize(new java.awt.Dimension(0, 0));
        IElement3.setOpaque(true);
        IElement3.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter21.add(IElement3);

        IElement4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        IElement4.setText("0");
        IElement4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 4", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        IElement4.setMinimumSize(new java.awt.Dimension(0, 0));
        IElement4.setOpaque(true);
        IElement4.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter21.add(IElement4);

        IElement5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        IElement5.setText("0");
        IElement5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 5", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        IElement5.setMinimumSize(new java.awt.Dimension(0, 0));
        IElement5.setOpaque(true);
        IElement5.setPreferredSize(new java.awt.Dimension(50, 50));
        IElement5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IElement5ActionPerformed(evt);
            }
        });
        pSCenter21.add(IElement5);

        jPanel9.setBackground(new java.awt.Color(35, 40, 50));
        jPanel9.setPreferredSize(new java.awt.Dimension(1000, 5));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        pSCenter21.add(jPanel9);

        InsertIndex.setMaximum(5);
        InsertIndex.setSnapToTicks(true);
        InsertIndex.setValue(0);
        InsertIndex.setPreferredSize(new java.awt.Dimension(315, 20));
        pSCenter21.add(InsertIndex);

        jPanel7.setBackground(new java.awt.Color(35, 40, 50));
        jPanel7.setPreferredSize(new java.awt.Dimension(1000, 5));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        pSCenter21.add(jPanel7);

        bEInsert.setBackground(new java.awt.Color(35, 40, 50));
        bEInsert.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bEInsert.setForeground(new java.awt.Color(255, 255, 255));
        bEInsert.setText("Enter element To Insert");
        bEInsert.setBorder(null);
        bEInsert.setBorderPainted(false);
        bEInsert.setContentAreaFilled(false);
        bEInsert.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bEInsert.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bEInsert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bEInsertMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bEInsertMouseExited(evt);
            }
        });
        bEInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEInsertActionPerformed(evt);
            }
        });
        pSCenter21.add(bEInsert);

        jPanel8.setBackground(new java.awt.Color(35, 40, 50));
        jPanel8.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pSCenter21.add(jPanel8);

        IValue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        IValue.setText("0");
        IValue.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Value", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        IValue.setMinimumSize(new java.awt.Dimension(0, 0));
        IValue.setOpaque(true);
        IValue.setPreferredSize(new java.awt.Dimension(50, 50));
        IValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IValueActionPerformed(evt);
            }
        });
        pSCenter21.add(IValue);

        pInsertion.add(pSCenter21, java.awt.BorderLayout.CENTER);

        pSBot13.setBackground(new java.awt.Color(35, 40, 50));
        pSBot13.setPreferredSize(new java.awt.Dimension(0, 100));
        pSBot13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));

        bInsert.setBackground(new java.awt.Color(24, 25, 28));
        bInsert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/submit_icon.png"))); // NOI18N
        bInsert.setBorder(null);
        bInsert.setBorderPainted(false);
        bInsert.setContentAreaFilled(false);
        bInsert.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bInsert.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bInsert.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_submit_icon.png"))); // NOI18N
        bInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInsertActionPerformed(evt);
            }
        });
        pSBot13.add(bInsert);

        pInsertion.add(pSBot13, java.awt.BorderLayout.SOUTH);

        pInput.add(pInsertion, "InsertionMenu");

        pDeletion.setBackground(new java.awt.Color(35, 40, 50));
        pDeletion.setLayout(new java.awt.BorderLayout());

        pSTop16.setBackground(new java.awt.Color(35, 40, 50));
        pSTop16.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop16.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 55, 25));

        bDeleteBack.setBackground(new java.awt.Color(24, 25, 28));
        bDeleteBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/go_back_icon.png"))); // NOI18N
        bDeleteBack.setBorder(null);
        bDeleteBack.setBorderPainted(false);
        bDeleteBack.setContentAreaFilled(false);
        bDeleteBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bDeleteBack.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bDeleteBack.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bDeleteBack.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_go_back_icon.png"))); // NOI18N
        bDeleteBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteBackActionPerformed(evt);
            }
        });
        pSTop16.add(bDeleteBack);

        pDeletion.add(pSTop16, java.awt.BorderLayout.NORTH);

        pSCenter22.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter22.setPreferredSize(new java.awt.Dimension(0, 0));
        pSCenter22.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 0));

        bDeletionTitle.setBackground(new java.awt.Color(35, 40, 50));
        bDeletionTitle.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bDeletionTitle.setForeground(new java.awt.Color(255, 255, 255));
        bDeletionTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_op_deletion_gif.gif"))); // NOI18N
        bDeletionTitle.setText("DELETION");
        bDeletionTitle.setBorder(null);
        bDeletionTitle.setBorderPainted(false);
        bDeletionTitle.setContentAreaFilled(false);
        bDeletionTitle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bDeletionTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bDeletionTitle.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bDeletionTitle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bDeletionTitleMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bDeletionTitleMouseExited(evt);
            }
        });
        bDeletionTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeletionTitleActionPerformed(evt);
            }
        });
        pSCenter22.add(bDeletionTitle);

        jPanel10.setBackground(new java.awt.Color(35, 40, 50));
        jPanel10.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pSCenter22.add(jPanel10);

        bElements2.setBackground(new java.awt.Color(35, 40, 50));
        bElements2.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bElements2.setForeground(new java.awt.Color(255, 255, 255));
        bElements2.setText("Enter Elements ");
        bElements2.setBorder(null);
        bElements2.setBorderPainted(false);
        bElements2.setContentAreaFilled(false);
        bElements2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bElements2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bElements2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bElements2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bElements2MouseExited(evt);
            }
        });
        bElements2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bElements2ActionPerformed(evt);
            }
        });
        pSCenter22.add(bElements2);

        jPanel11.setBackground(new java.awt.Color(35, 40, 50));
        jPanel11.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pSCenter22.add(jPanel11);

        DElement0.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DElement0.setText("0");
        DElement0.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 0", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        DElement0.setMinimumSize(new java.awt.Dimension(0, 0));
        DElement0.setOpaque(true);
        DElement0.setPreferredSize(new java.awt.Dimension(50, 50));
        DElement0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DElement0ActionPerformed(evt);
            }
        });
        pSCenter22.add(DElement0);

        DElement1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DElement1.setText("0");
        DElement1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 1", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        DElement1.setMinimumSize(new java.awt.Dimension(0, 0));
        DElement1.setOpaque(true);
        DElement1.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter22.add(DElement1);

        DElement2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DElement2.setText("0");
        DElement2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 2", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        DElement2.setMinimumSize(new java.awt.Dimension(0, 0));
        DElement2.setOpaque(true);
        DElement2.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter22.add(DElement2);

        DElement3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DElement3.setText("0");
        DElement3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 3", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        DElement3.setMinimumSize(new java.awt.Dimension(0, 0));
        DElement3.setOpaque(true);
        DElement3.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter22.add(DElement3);

        DElement4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DElement4.setText("0");
        DElement4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 4", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        DElement4.setMinimumSize(new java.awt.Dimension(0, 0));
        DElement4.setOpaque(true);
        DElement4.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter22.add(DElement4);

        DElement5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DElement5.setText("0");
        DElement5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 5", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        DElement5.setMinimumSize(new java.awt.Dimension(0, 0));
        DElement5.setOpaque(true);
        DElement5.setPreferredSize(new java.awt.Dimension(50, 50));
        DElement5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DElement5ActionPerformed(evt);
            }
        });
        pSCenter22.add(DElement5);

        jPanel12.setBackground(new java.awt.Color(35, 40, 50));
        jPanel12.setPreferredSize(new java.awt.Dimension(1000, 5));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        pSCenter22.add(jPanel12);

        DeleteIndex.setMaximum(5);
        DeleteIndex.setSnapToTicks(true);
        DeleteIndex.setValue(0);
        DeleteIndex.setPreferredSize(new java.awt.Dimension(315, 20));
        pSCenter22.add(DeleteIndex);

        jPanel14.setBackground(new java.awt.Color(35, 40, 50));
        jPanel14.setPreferredSize(new java.awt.Dimension(1000, 0));

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pSCenter22.add(jPanel14);

        bElements3.setBackground(new java.awt.Color(35, 40, 50));
        bElements3.setFont(new java.awt.Font("Russo One", 2, 18)); // NOI18N
        bElements3.setForeground(new java.awt.Color(255, 255, 255));
        bElements3.setText("Slide to delete element at index");
        bElements3.setBorder(null);
        bElements3.setBorderPainted(false);
        bElements3.setContentAreaFilled(false);
        bElements3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bElements3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bElements3.setPreferredSize(new java.awt.Dimension(300, 22));
        bElements3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bElements3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bElements3MouseExited(evt);
            }
        });
        bElements3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bElements3ActionPerformed(evt);
            }
        });
        pSCenter22.add(bElements3);

        pDeletion.add(pSCenter22, java.awt.BorderLayout.CENTER);

        pSBot14.setBackground(new java.awt.Color(35, 40, 50));
        pSBot14.setPreferredSize(new java.awt.Dimension(0, 100));
        pSBot14.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));

        bDelete.setBackground(new java.awt.Color(24, 25, 28));
        bDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/submit_icon.png"))); // NOI18N
        bDelete.setBorder(null);
        bDelete.setBorderPainted(false);
        bDelete.setContentAreaFilled(false);
        bDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bDelete.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_submit_icon.png"))); // NOI18N
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });
        pSBot14.add(bDelete);

        pDeletion.add(pSBot14, java.awt.BorderLayout.SOUTH);

        pInput.add(pDeletion, "DeletionMenu");

        pSearch.setBackground(new java.awt.Color(35, 40, 50));
        pSearch.setLayout(new java.awt.BorderLayout());

        pSTop17.setBackground(new java.awt.Color(35, 40, 50));
        pSTop17.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop17.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 55, 25));

        bSearchBack.setBackground(new java.awt.Color(24, 25, 28));
        bSearchBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/go_back_icon.png"))); // NOI18N
        bSearchBack.setBorder(null);
        bSearchBack.setBorderPainted(false);
        bSearchBack.setContentAreaFilled(false);
        bSearchBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bSearchBack.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bSearchBack.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bSearchBack.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_go_back_icon.png"))); // NOI18N
        bSearchBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSearchBackActionPerformed(evt);
            }
        });
        pSTop17.add(bSearchBack);

        pSearch.add(pSTop17, java.awt.BorderLayout.NORTH);

        pSCenter23.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter23.setPreferredSize(new java.awt.Dimension(0, 0));
        pSCenter23.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 0));

        bSearchTitle.setBackground(new java.awt.Color(35, 40, 50));
        bSearchTitle.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bSearchTitle.setForeground(new java.awt.Color(255, 255, 255));
        bSearchTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_op_search_gif.gif"))); // NOI18N
        bSearchTitle.setText("SEARCH");
        bSearchTitle.setBorder(null);
        bSearchTitle.setBorderPainted(false);
        bSearchTitle.setContentAreaFilled(false);
        bSearchTitle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bSearchTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bSearchTitle.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bSearchTitle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bSearchTitleMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bSearchTitleMouseExited(evt);
            }
        });
        bSearchTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSearchTitleActionPerformed(evt);
            }
        });
        pSCenter23.add(bSearchTitle);

        jPanel13.setBackground(new java.awt.Color(35, 40, 50));
        jPanel13.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pSCenter23.add(jPanel13);

        bElements4.setBackground(new java.awt.Color(35, 40, 50));
        bElements4.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bElements4.setForeground(new java.awt.Color(255, 255, 255));
        bElements4.setText("Enter Elements ");
        bElements4.setBorder(null);
        bElements4.setBorderPainted(false);
        bElements4.setContentAreaFilled(false);
        bElements4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bElements4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bElements4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bElements4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bElements4MouseExited(evt);
            }
        });
        bElements4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bElements4ActionPerformed(evt);
            }
        });
        pSCenter23.add(bElements4);

        jPanel15.setBackground(new java.awt.Color(35, 40, 50));
        jPanel15.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pSCenter23.add(jPanel15);

        SElement0.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SElement0.setText("0");
        SElement0.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pos 1", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        SElement0.setMinimumSize(new java.awt.Dimension(0, 0));
        SElement0.setOpaque(true);
        SElement0.setPreferredSize(new java.awt.Dimension(50, 50));
        SElement0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SElement0ActionPerformed(evt);
            }
        });
        pSCenter23.add(SElement0);

        SElement1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SElement1.setText("0");
        SElement1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pos 2", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        SElement1.setMinimumSize(new java.awt.Dimension(0, 0));
        SElement1.setOpaque(true);
        SElement1.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter23.add(SElement1);

        SElement2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SElement2.setText("0");
        SElement2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pos 3", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        SElement2.setMinimumSize(new java.awt.Dimension(0, 0));
        SElement2.setOpaque(true);
        SElement2.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter23.add(SElement2);

        SElement3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SElement3.setText("0");
        SElement3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pos 4", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        SElement3.setMinimumSize(new java.awt.Dimension(0, 0));
        SElement3.setOpaque(true);
        SElement3.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter23.add(SElement3);

        SElement4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SElement4.setText("0");
        SElement4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pos 5", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        SElement4.setMinimumSize(new java.awt.Dimension(0, 0));
        SElement4.setOpaque(true);
        SElement4.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter23.add(SElement4);

        SElement5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SElement5.setText("0");
        SElement5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pos 6", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        SElement5.setMinimumSize(new java.awt.Dimension(0, 0));
        SElement5.setOpaque(true);
        SElement5.setPreferredSize(new java.awt.Dimension(50, 50));
        SElement5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SElement5ActionPerformed(evt);
            }
        });
        pSCenter23.add(SElement5);

        jPanel16.setBackground(new java.awt.Color(35, 40, 50));
        jPanel16.setPreferredSize(new java.awt.Dimension(1000, 5));

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        pSCenter23.add(jPanel16);

        jPanel17.setBackground(new java.awt.Color(35, 40, 50));
        jPanel17.setPreferredSize(new java.awt.Dimension(1000, 25));

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pSCenter23.add(jPanel17);

        bElements5.setBackground(new java.awt.Color(35, 40, 50));
        bElements5.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bElements5.setForeground(new java.awt.Color(255, 255, 255));
        bElements5.setText("Enter element to search");
        bElements5.setBorder(null);
        bElements5.setBorderPainted(false);
        bElements5.setContentAreaFilled(false);
        bElements5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bElements5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bElements5.setPreferredSize(new java.awt.Dimension(300, 22));
        bElements5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bElements5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bElements5MouseExited(evt);
            }
        });
        bElements5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bElements5ActionPerformed(evt);
            }
        });
        pSCenter23.add(bElements5);

        jPanel18.setBackground(new java.awt.Color(35, 40, 50));
        jPanel18.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pSCenter23.add(jPanel18);

        SValue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SValue.setText("0");
        SValue.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Value", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        SValue.setMinimumSize(new java.awt.Dimension(0, 0));
        SValue.setOpaque(true);
        SValue.setPreferredSize(new java.awt.Dimension(50, 50));
        SValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SValueActionPerformed(evt);
            }
        });
        pSCenter23.add(SValue);

        pSearch.add(pSCenter23, java.awt.BorderLayout.CENTER);

        pSBot15.setBackground(new java.awt.Color(35, 40, 50));
        pSBot15.setPreferredSize(new java.awt.Dimension(0, 100));
        pSBot15.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));

        bSearch.setBackground(new java.awt.Color(24, 25, 28));
        bSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/submit_icon.png"))); // NOI18N
        bSearch.setBorder(null);
        bSearch.setBorderPainted(false);
        bSearch.setContentAreaFilled(false);
        bSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bSearch.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bSearch.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_submit_icon.png"))); // NOI18N
        bSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSearchActionPerformed(evt);
            }
        });
        pSBot15.add(bSearch);

        pSearch.add(pSBot15, java.awt.BorderLayout.SOUTH);

        pInput.add(pSearch, "SearchMenu");

        pSCenter20.add(pInput);

        pOutput.setBackground(new java.awt.Color(35, 40, 50));
        pOutput.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "OUTPUT", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Russo One", 2, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        pOutput.setForeground(new java.awt.Color(255, 255, 255));
        pOutput.setPreferredSize(new java.awt.Dimension(550, 600));
        pOutput.setLayout(new java.awt.CardLayout());

        pOIntro.setBackground(new java.awt.Color(35, 40, 50));
        pOIntro.setLayout(new java.awt.BorderLayout());

        jScrollPane12.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane12.setBorder(null);
        jScrollPane12.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane12.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane12.setHorizontalScrollBar(null);
        jScrollPane12.setOpaque(false);
        jScrollPane12.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane12.setRequestFocusEnabled(false);
        jScrollPane12.setWheelScrollingEnabled(false);

        jTextArea12.setEditable(false);
        jTextArea12.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea12.setColumns(20);
        jTextArea12.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        jTextArea12.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea12.setLineWrap(true);
        jTextArea12.setText("Hey there, curious clicker! Want to know more about the buttons on this screen? Well, it's as easy as a single click or tap! Just pick a button on the left that piques your interest and voila! A magical description will appear before your very eyes! It's like having a button whisperer in your pocket! This nifty feature is here to help you navigate and understand this interface, so don't be shy, give those buttons a click and unlock their secrets!");
        jTextArea12.setWrapStyleWord(true);
        jTextArea12.setAutoscrolls(false);
        jTextArea12.setBorder(null);
        jTextArea12.setFocusable(false);
        jTextArea12.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane12.setViewportView(jTextArea12);

        pOIntro.add(jScrollPane12, java.awt.BorderLayout.CENTER);

        pOutput.add(pOIntro, "OIntro");

        pOLoading.setBackground(new java.awt.Color(35, 40, 50));
        pOLoading.setLayout(new java.awt.BorderLayout());

        bArrays2.setBackground(new java.awt.Color(35, 40, 50));
        bArrays2.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bArrays2.setForeground(new java.awt.Color(255, 255, 255));
        bArrays2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_loading_gif.gif"))); // NOI18N
        bArrays2.setText("LOADING...");
        bArrays2.setBorder(null);
        bArrays2.setBorderPainted(false);
        bArrays2.setContentAreaFilled(false);
        bArrays2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bArrays2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bArrays2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bArrays2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bArrays2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bArrays2MouseExited(evt);
            }
        });
        bArrays2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bArrays2ActionPerformed(evt);
            }
        });
        pOLoading.add(bArrays2, java.awt.BorderLayout.CENTER);

        pOutput.add(pOLoading, "OLoading");

        pInsertionIntro.setBackground(new java.awt.Color(35, 40, 50));
        pInsertionIntro.setFocusable(false);
        pInsertionIntro.setLayout(new java.awt.BorderLayout());

        jScrollPane15.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane15.setBorder(null);
        jScrollPane15.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane15.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane15.setHorizontalScrollBar(null);
        jScrollPane15.setOpaque(false);
        jScrollPane15.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane15.setRequestFocusEnabled(false);
        jScrollPane15.setWheelScrollingEnabled(false);

        jTextArea14.setEditable(false);
        jTextArea14.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea14.setColumns(20);
        jTextArea14.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        jTextArea14.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea14.setLineWrap(true);
        jTextArea14.setText("Insertion in a linked list can be performed in several ways, depending on the desired position. The common insertion scenarios include adding an element at the beginning (head) of the list, at the end (tail), or at a specific position between existing nodes.\n\nInsertion at the end involves traversing the list until reaching the last node, updating the last node's pointer to the new node, and adjusting the tail pointer accordingly. This operation typically has a time complexity of O(n) since it requires traversing the entire list.\n\nInsertion at a specific position requires finding the target position by traversing the list and updating the pointers of the adjacent nodes to link the new node correctly. The time complexity for this operation is O(n) as well, as it depends on the length of the list and the position of insertion.\n\nIn summary, the insertion operation in linked lists allows for flexible modification and expansion of the data structure. By manipulating pointers, new elements can be efficiently added at the beginning, end, or at specific positions, providing versatility and adaptability in managing data in a linked list.");
        jTextArea14.setWrapStyleWord(true);
        jTextArea14.setAutoscrolls(false);
        jTextArea14.setBorder(null);
        jTextArea14.setFocusable(false);
        jTextArea14.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane15.setViewportView(jTextArea14);

        pInsertionIntro.add(jScrollPane15, java.awt.BorderLayout.CENTER);

        pOutput.add(pInsertionIntro, "InsertionIntro");

        pInsertionOutput.setBackground(new java.awt.Color(35, 40, 50));
        pInsertionOutput.setFocusable(false);
        pInsertionOutput.setLayout(new java.awt.BorderLayout());

        jScrollPane17.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane17.setBorder(null);
        jScrollPane17.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane17.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane17.setHorizontalScrollBar(null);
        jScrollPane17.setOpaque(false);
        jScrollPane17.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane17.setRequestFocusEnabled(false);
        jScrollPane17.setWheelScrollingEnabled(false);

        insertionOutputArea.setEditable(false);
        insertionOutputArea.setBackground(new java.awt.Color(35, 40, 50));
        insertionOutputArea.setColumns(20);
        insertionOutputArea.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        insertionOutputArea.setForeground(new java.awt.Color(255, 255, 255));
        insertionOutputArea.setLineWrap(true);
        insertionOutputArea.setWrapStyleWord(true);
        insertionOutputArea.setAutoscrolls(false);
        insertionOutputArea.setBorder(null);
        insertionOutputArea.setFocusable(false);
        insertionOutputArea.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane17.setViewportView(insertionOutputArea);

        pInsertionOutput.add(jScrollPane17, java.awt.BorderLayout.CENTER);

        pOutput.add(pInsertionOutput, "InsertionOutput");

        pDeletionIntro.setBackground(new java.awt.Color(35, 40, 50));
        pDeletionIntro.setFocusable(false);
        pDeletionIntro.setLayout(new java.awt.BorderLayout());

        jScrollPane18.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane18.setBorder(null);
        jScrollPane18.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane18.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane18.setHorizontalScrollBar(null);
        jScrollPane18.setOpaque(false);
        jScrollPane18.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane18.setRequestFocusEnabled(false);
        jScrollPane18.setWheelScrollingEnabled(false);

        jTextArea16.setEditable(false);
        jTextArea16.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea16.setColumns(20);
        jTextArea16.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        jTextArea16.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea16.setLineWrap(true);
        jTextArea16.setText("Deletion in a linked list can be performed in various ways, depending on the position of the node to be deleted. The common deletion scenarios include removing the first node (head) of the list, the last node (tail), or a specific node at an arbitrary position.\n\nDeletion of the last node requires traversing the list until reaching the second-to-last node (penultimate node) and updating its pointer to null, effectively disconnecting the last node. Additionally, the tail pointer needs to be adjusted accordingly. Similar to insertion at the end, this operation has a time complexity of O(n) as it involves traversing the list.\n\nDeletion of a specific node at an arbitrary position involves finding the target node by traversing the list and updating the pointers of the adjacent nodes to bypass the node being removed. This operation typically has a time complexity of O(n) as well since it depends on the length of the list and the position of the node to be deleted.\n\nIt is worth noting that there are variations of linked lists, such as doubly linked lists, which allow for more efficient deletion of nodes by having additional backward pointers. This enables deletion of a node in O(1) time complexity, provided the node's address is known.\n\nIn conclusion, the deletion operation in linked lists provides the ability to remove elements efficiently, maintaining the structure and integrity of the data. By manipulating pointers, nodes can be deleted from the beginning, end, or at specific positions, allowing for flexible and effective management of data in a linked list.");
        jTextArea16.setWrapStyleWord(true);
        jTextArea16.setAutoscrolls(false);
        jTextArea16.setBorder(null);
        jTextArea16.setFocusable(false);
        jTextArea16.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane18.setViewportView(jTextArea16);

        pDeletionIntro.add(jScrollPane18, java.awt.BorderLayout.CENTER);

        pOutput.add(pDeletionIntro, "DeletionIntro");

        pDeletionOutput.setBackground(new java.awt.Color(35, 40, 50));
        pDeletionOutput.setFocusable(false);
        pDeletionOutput.setLayout(new java.awt.BorderLayout());

        jScrollPane20.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane20.setBorder(null);
        jScrollPane20.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane20.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane20.setHorizontalScrollBar(null);
        jScrollPane20.setOpaque(false);
        jScrollPane20.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane20.setRequestFocusEnabled(false);
        jScrollPane20.setWheelScrollingEnabled(false);

        deletionOutputArea.setEditable(false);
        deletionOutputArea.setBackground(new java.awt.Color(35, 40, 50));
        deletionOutputArea.setColumns(20);
        deletionOutputArea.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        deletionOutputArea.setForeground(new java.awt.Color(255, 255, 255));
        deletionOutputArea.setLineWrap(true);
        deletionOutputArea.setWrapStyleWord(true);
        deletionOutputArea.setAutoscrolls(false);
        deletionOutputArea.setBorder(null);
        deletionOutputArea.setFocusable(false);
        deletionOutputArea.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane20.setViewportView(deletionOutputArea);

        pDeletionOutput.add(jScrollPane20, java.awt.BorderLayout.CENTER);

        pOutput.add(pDeletionOutput, "DeletionOutput");

        pSearchIntro.setBackground(new java.awt.Color(35, 40, 50));
        pSearchIntro.setFocusable(false);
        pSearchIntro.setLayout(new java.awt.BorderLayout());

        jScrollPane21.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane21.setBorder(null);
        jScrollPane21.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane21.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane21.setHorizontalScrollBar(null);
        jScrollPane21.setOpaque(false);
        jScrollPane21.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane21.setRequestFocusEnabled(false);
        jScrollPane21.setWheelScrollingEnabled(false);

        jTextArea18.setEditable(false);
        jTextArea18.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea18.setColumns(20);
        jTextArea18.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        jTextArea18.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea18.setLineWrap(true);
        jTextArea18.setText("To search for an element in a linked list, we typically start at the head node and compare the target value with the data field of each node as we traverse the list. If the target value matches the data field of a node, we consider the element found and can return its position or perform any desired operation.\n\nHowever, if the linked list is sorted, a variation of the search operation called binary search can be employed. Binary search allows for a more efficient search process by dividing the search space in half at each step. However, to perform binary search, a different type of linked list structure, such as a sorted linked list or a self-balancing binary search tree, is usually employed.\n\nIn conclusion, the search operation in linked lists involves traversing the nodes sequentially until the desired element is found or determining its absence. While it offers a straightforward approach for unsorted linked lists, the time complexity is linear, making it less efficient compared to other data structures specifically designed for efficient searching, especially in large collections of data.");
        jTextArea18.setWrapStyleWord(true);
        jTextArea18.setAutoscrolls(false);
        jTextArea18.setBorder(null);
        jTextArea18.setFocusable(false);
        jTextArea18.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane21.setViewportView(jTextArea18);

        pSearchIntro.add(jScrollPane21, java.awt.BorderLayout.CENTER);

        pOutput.add(pSearchIntro, "SearchIntro");

        pSearchOutput.setBackground(new java.awt.Color(35, 40, 50));
        pSearchOutput.setFocusable(false);
        pSearchOutput.setLayout(new java.awt.BorderLayout());

        jScrollPane23.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane23.setBorder(null);
        jScrollPane23.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane23.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane23.setHorizontalScrollBar(null);
        jScrollPane23.setOpaque(false);
        jScrollPane23.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane23.setRequestFocusEnabled(false);
        jScrollPane23.setWheelScrollingEnabled(false);

        searchOutputArea.setEditable(false);
        searchOutputArea.setBackground(new java.awt.Color(35, 40, 50));
        searchOutputArea.setColumns(20);
        searchOutputArea.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        searchOutputArea.setForeground(new java.awt.Color(255, 255, 255));
        searchOutputArea.setLineWrap(true);
        searchOutputArea.setWrapStyleWord(true);
        searchOutputArea.setAutoscrolls(false);
        searchOutputArea.setBorder(null);
        searchOutputArea.setFocusable(false);
        searchOutputArea.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane23.setViewportView(searchOutputArea);

        pSearchOutput.add(jScrollPane23, java.awt.BorderLayout.CENTER);

        pOutput.add(pSearchOutput, "SearchOutput");

        pSCenter20.add(pOutput);

        pLinkedListsOperations.add(pSCenter20, java.awt.BorderLayout.CENTER);

        pLinkedLists.add(pLinkedListsOperations, "LinkedListsOperations");

        pContainer.add(pLinkedLists, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bArrays1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays1MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bArrays1MouseEntered

    private void bArrays1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays1MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bArrays1MouseExited

    private void bArrays1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bArrays1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bArrays1ActionPerformed

    private void bBack3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBack3ActionPerformed
        // Show the loading panel first
        CardLayout cardLayout = (CardLayout) pLinkedLists.getLayout();
        cardLayout.show(pLinkedLists, "Loading");

        // Replace "Home" with the actual panel name in the Home JFrame
        Home homeFrame = new Home();

        // Delay the visibility of the Home JFrame
        Timer showTimer = new Timer(500, (ActionEvent e) -> {
            homeFrame.setVisible(true);
        });
        showTimer.setRepeats(false);
        showTimer.start();

        // Dispose the current frame after a delay
        Timer disposeTimer = new Timer(600, (ActionEvent e) -> {
            dispose();
        });
        disposeTimer.setRepeats(false);
        disposeTimer.start();
    }//GEN-LAST:event_bBack3ActionPerformed

    private void bNext3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNext3ActionPerformed
        CardLayout cardLayout = (CardLayout) pLinkedLists.getLayout();
        cardLayout.show(pLinkedLists, "Loading");
        Timer timer = new Timer(500, (ActionEvent e) -> {
            cardLayout.show(pLinkedLists, "LinkedListsOperations");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bNext3ActionPerformed

    private void bBack9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBack9ActionPerformed
        CardLayout cardLayout = (CardLayout) pLinkedLists.getLayout();
        cardLayout.show(pLinkedLists, "Loading");
        Timer timer = new Timer(500, (ActionEvent e) -> {
            cardLayout.show(pLinkedLists, "LinkedListsIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bBack9ActionPerformed

    private void bInsertionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bInsertionMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bInsertionMouseEntered

    private void bInsertionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bInsertionMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bInsertionMouseExited

    private void bInsertionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInsertionActionPerformed
        // Get a reference to the CardLayout of the pInput panel
        CardLayout inputLayout = (CardLayout) pInput.getLayout();

        // Show the "ILoading" card in the pInput panel
        inputLayout.show(pInput, "ILoading");

        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pOutput.getLayout();

        // Load the input values from a file
        LinkedList<Integer> inputValuesFromFile = FileHandler.loadLinkedListInputValues();
        for (int i = 0; i < Math.min(insertFields.length, inputValuesFromFile.size()); i++) {
            insertFields[i].setText(Integer.toString(inputValuesFromFile.get(i)));
        }

        // Show the "OLoading" card in the pOutput panel
        outputLayout.show(pOutput, "OLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            inputLayout.show(pInput, "InsertionMenu");
            outputLayout.show(pOutput, "InsertionIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bInsertionActionPerformed

    private void bDeletionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bDeletionMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bDeletionMouseEntered

    private void bDeletionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bDeletionMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bDeletionMouseExited

    private void bDeletionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeletionActionPerformed
        // Get a reference to the CardLayout of the pInput panel
        CardLayout inputLayout = (CardLayout) pInput.getLayout();

        // Show the "ILoading" card in the pInput panel
        inputLayout.show(pInput, "ILoading");

        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pOutput.getLayout();

        // Load the input values from a file
        LinkedList<Integer> linkedListsInputValuesFromFile = FileHandler.loadLinkedListInputValues();
        for (int i = 0; i < deleteFields.length; i++) {
            deleteFields[i].setText(Integer.toString(linkedListsInputValuesFromFile.get(i)));
        }

        // Show the "OLoading" card in the pOutput panel
        outputLayout.show(pOutput, "OLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            inputLayout.show(pInput, "DeletionMenu");
            outputLayout.show(pOutput, "DeletionIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bDeletionActionPerformed

    private void bLSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bLSearchMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bLSearchMouseEntered

    private void bLSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bLSearchMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bLSearchMouseExited

    private void bLSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLSearchActionPerformed
        // Get a reference to the CardLayout of the pInput panel
        CardLayout inputLayout = (CardLayout) pInput.getLayout();

        // Show the "ILoading" card in the pInput panel
        inputLayout.show(pInput, "ILoading");

        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pOutput.getLayout();

        // Load the input values from a file
        LinkedList<Integer> linkedListsInputValuesFromFile = FileHandler.loadLinkedListInputValues();
        for (int i = 0; i < searchFields.length; i++) {
            searchFields[i].setText(Integer.toString(linkedListsInputValuesFromFile.get(i)));
        }

        // Show the "OLoading" card in the pOutput panel
        outputLayout.show(pOutput, "OLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            inputLayout.show(pInput, "SearchMenu");
            outputLayout.show(pOutput, "SearchIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bLSearchActionPerformed

    private void bArrays3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays3MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bArrays3MouseEntered

    private void bArrays3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays3MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bArrays3MouseExited

    private void bArrays3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bArrays3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bArrays3ActionPerformed

    private void bInsertBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInsertBackActionPerformed
        switchLayouts(pInput, pOutput);
    }//GEN-LAST:event_bInsertBackActionPerformed

    private void bInsertionTitleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bInsertionTitleMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bInsertionTitleMouseEntered

    private void bInsertionTitleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bInsertionTitleMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bInsertionTitleMouseExited

    private void bInsertionTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInsertionTitleActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pOutput.getLayout();
        outputLayout.show(pOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pOutput, "AInsertionIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bInsertionTitleActionPerformed

    private void bElements1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements1MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bElements1MouseEntered

    private void bElements1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements1MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bElements1MouseExited

    private void bElements1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bElements1ActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pOutput.getLayout();
        outputLayout.show(pOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pOutput, "ATraverseElements");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bElements1ActionPerformed

    private void IElement0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IElement0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IElement0ActionPerformed

    private void IElement5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IElement5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IElement5ActionPerformed

    private void bEInsertMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bEInsertMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bEInsertMouseEntered

    private void bEInsertMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bEInsertMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bEInsertMouseExited

    private void bEInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEInsertActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pOutput.getLayout();
        outputLayout.show(pOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pOutput, "AInsertionElements");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bEInsertActionPerformed

    private void IValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IValueActionPerformed

    private void bInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInsertActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pOutput.getLayout();
        outputLayout.show(pOutput, "OLoading");

        // Get the input values from the text fields
        int[] numbers = new int[6];
        try {
            numbers[0] = Integer.parseInt(IElement0.getText());
            numbers[1] = Integer.parseInt(IElement1.getText());
            numbers[2] = Integer.parseInt(IElement2.getText());
            numbers[3] = Integer.parseInt(IElement3.getText());
            numbers[4] = Integer.parseInt(IElement4.getText());
            numbers[5] = Integer.parseInt(IElement5.getText());
        } catch (NumberFormatException e) {
            // Handle invalid input
            JOptionPane.showMessageDialog(this, "Invalid input in one of the fields.");
            return;
        }

        int index = InsertIndex.getValue();
        int value = Integer.parseInt(IValue.getText());

        // Save the input values to a file
        LinkedList<Integer> inputValues = new LinkedList<>();
        for (int number : numbers) {
            inputValues.add(number);
        }
        FileHandler.saveLinkedListInputValues(inputValues); // Save the input values

        // Insert the value using the Operations class and display the results in the output area
        DataHandler ops = new DataHandler();
        for (int i = 0; i < numbers.length; i++) {
            int adjustedIndex = Math.min(index + i, ops.size()); // Adjust the index if it exceeds the size
            ops.insertLL(adjustedIndex, numbers[i]);
        }

        // Get the original linked list
        String originalList = ops.displayLL(true);

        ops.insertLL(index, value); // Perform the insertion

        // Get the updated linked list and concatenate it with the original list
        String updatedList = ops.displayLL(false);
        String result = " " + originalList + "\n\n " + updatedList;

        // Update the output area with the result
        insertionOutputArea.setText(result);

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pOutput, "InsertionOutput");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bInsertActionPerformed

    private void bDeleteBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteBackActionPerformed
        switchLayouts(pInput, pOutput);
    }//GEN-LAST:event_bDeleteBackActionPerformed

    private void bDeletionTitleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bDeletionTitleMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bDeletionTitleMouseEntered

    private void bDeletionTitleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bDeletionTitleMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bDeletionTitleMouseExited

    private void bDeletionTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeletionTitleActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pOutput.getLayout();
        outputLayout.show(pOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pOutput, "ADeletionIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bDeletionTitleActionPerformed

    private void bElements2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements2MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bElements2MouseEntered

    private void bElements2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements2MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bElements2MouseExited

    private void bElements2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bElements2ActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pOutput.getLayout();
        outputLayout.show(pOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pOutput, "ADeletionElements");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bElements2ActionPerformed

    private void DElement0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DElement0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DElement0ActionPerformed

    private void DElement5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DElement5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DElement5ActionPerformed

    private void bElements3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements3MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bElements3MouseEntered

    private void bElements3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements3MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bElements3MouseExited

    private void bElements3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bElements3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bElements3ActionPerformed

    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pOutput.getLayout();
        outputLayout.show(pOutput, "OLoading");

        // Get the input values from the text fields
        int[] numbers = new int[6];
        try {
            numbers[0] = Integer.parseInt(DElement0.getText());
            numbers[1] = Integer.parseInt(DElement1.getText());
            numbers[2] = Integer.parseInt(DElement2.getText());
            numbers[3] = Integer.parseInt(DElement3.getText());
            numbers[4] = Integer.parseInt(DElement4.getText());
            numbers[5] = Integer.parseInt(DElement5.getText());
        } catch (NumberFormatException e) {
            // Handle invalid input
            JOptionPane.showMessageDialog(this, "Invalid input in one of the fields.");
            return;
        }

        int index = DeleteIndex.getValue();

        // Save the input values to a file
        LinkedList<Integer> inputValues = new LinkedList<>();
        for (int i = 0; i < numbers.length; i++) {
            inputValues.add(numbers[i]);
        }
        FileHandler.saveLinkedListInputValues(inputValues);

        // Create a new DataHandler object with the linked list
        DataHandler ops = new DataHandler();
        for (int i = 0; i < numbers.length; i++) {
            ops.insertLL(i, numbers[i]);
        }

        // Delete the element using the DataHandler object and display the results in the output area
        String result = ops.deleteLL(index);

        // Update the output area with the result
        deletionOutputArea.setText(result);

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pOutput, "DeletionOutput");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bDeleteActionPerformed

    private void bSearchBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSearchBackActionPerformed
        switchLayouts(pInput, pOutput);
    }//GEN-LAST:event_bSearchBackActionPerformed

    private void bSearchTitleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSearchTitleMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bSearchTitleMouseEntered

    private void bSearchTitleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSearchTitleMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bSearchTitleMouseExited

    private void bSearchTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSearchTitleActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pOutput.getLayout();
        outputLayout.show(pOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pOutput, "ASearchIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bSearchTitleActionPerformed

    private void bElements4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements4MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bElements4MouseEntered

    private void bElements4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements4MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bElements4MouseExited

    private void bElements4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bElements4ActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pOutput.getLayout();
        outputLayout.show(pOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pOutput, "ASearchElements");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bElements4ActionPerformed

    private void SElement0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SElement0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SElement0ActionPerformed

    private void SElement5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SElement5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SElement5ActionPerformed

    private void bElements5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements5MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bElements5MouseEntered

    private void bElements5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements5MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bElements5MouseExited

    private void bElements5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bElements5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bElements5ActionPerformed

    private void SValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SValueActionPerformed

    private void bSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSearchActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pOutput.getLayout();
        outputLayout.show(pOutput, "OLoading");

        // Get the input values from the text fields
        int[] numbers = new int[6];
        try {
            numbers[0] = Integer.parseInt(SElement0.getText());
            numbers[1] = Integer.parseInt(SElement1.getText());
            numbers[2] = Integer.parseInt(SElement2.getText());
            numbers[3] = Integer.parseInt(SElement3.getText());
            numbers[4] = Integer.parseInt(SElement4.getText());
            numbers[5] = Integer.parseInt(SElement5.getText());
        } catch (NumberFormatException e) {
            // Handle invalid input
            JOptionPane.showMessageDialog(this, "Invalid input in one of the fields.");
            return;
        }

        int value = Integer.parseInt(SValue.getText());

        // Save the input values to a file
        FileHandler.saveArrayInputValues(numbers);

        // Search for the element using the Operations class and display the results in the output area
        DataHandler ops = new DataHandler(numbers, null, null);
        String result = ops.search(value);
        searchOutputArea.setText(result);

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pOutput, "SearchOutput");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bSearchActionPerformed

    private void bArrays2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays2MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bArrays2MouseEntered

    private void bArrays2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays2MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bArrays2MouseExited

    private void bArrays2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bArrays2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bArrays2ActionPerformed

    private void bHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHomeActionPerformed
        // Show the loading panel first
        CardLayout cardLayout = (CardLayout) pLinkedLists.getLayout();
        cardLayout.show(pLinkedLists, "Loading");

        // Replace "Home" with the actual panel name in the Home JFrame
        Home homeFrame = new Home();

        // Delay the visibility of the Home JFrame
        Timer showTimer = new Timer(500, (ActionEvent e) -> {
            homeFrame.setVisible(true);
        });
        showTimer.setRepeats(false);
        showTimer.start();

        // Dispose the current frame after a delay
        Timer disposeTimer = new Timer(600, (ActionEvent e) -> {
            dispose();
        });
        disposeTimer.setRepeats(false);
        disposeTimer.start();
    }//GEN-LAST:event_bHomeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LinkedListsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LinkedListsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LinkedListsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LinkedListsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LinkedListsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DElement0;
    private javax.swing.JTextField DElement1;
    private javax.swing.JTextField DElement2;
    private javax.swing.JTextField DElement3;
    private javax.swing.JTextField DElement4;
    private javax.swing.JTextField DElement5;
    private javax.swing.JSlider DeleteIndex;
    private javax.swing.JTextField IElement0;
    private javax.swing.JTextField IElement1;
    private javax.swing.JTextField IElement2;
    private javax.swing.JTextField IElement3;
    private javax.swing.JTextField IElement4;
    private javax.swing.JTextField IElement5;
    private javax.swing.JTextField IValue;
    private javax.swing.JSlider InsertIndex;
    private javax.swing.JTextField SElement0;
    private javax.swing.JTextField SElement1;
    private javax.swing.JTextField SElement2;
    private javax.swing.JTextField SElement3;
    private javax.swing.JTextField SElement4;
    private javax.swing.JTextField SElement5;
    private javax.swing.JTextField SValue;
    private javax.swing.JButton bArrays1;
    private javax.swing.JButton bArrays2;
    private javax.swing.JButton bArrays3;
    private javax.swing.JButton bBack3;
    private javax.swing.JButton bBack9;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bDeleteBack;
    private javax.swing.JButton bDeletion;
    private javax.swing.JButton bDeletionTitle;
    private javax.swing.JButton bEInsert;
    private javax.swing.JButton bElements1;
    private javax.swing.JButton bElements2;
    private javax.swing.JButton bElements3;
    private javax.swing.JButton bElements4;
    private javax.swing.JButton bElements5;
    private javax.swing.JButton bHome;
    private javax.swing.JButton bInsert;
    private javax.swing.JButton bInsertBack;
    private javax.swing.JButton bInsertion;
    private javax.swing.JButton bInsertionTitle;
    private javax.swing.JButton bLSearch;
    private javax.swing.JButton bNext3;
    private javax.swing.JButton bSearch;
    private javax.swing.JButton bSearchBack;
    private javax.swing.JButton bSearchTitle;
    private javax.swing.JTextArea deletionOutputArea;
    private javax.swing.JTextArea insertionOutputArea;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea12;
    private javax.swing.JTextArea jTextArea14;
    private javax.swing.JTextArea jTextArea16;
    private javax.swing.JTextArea jTextArea18;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JPanel pContainer;
    private javax.swing.JPanel pDeletion;
    private javax.swing.JPanel pDeletionIntro;
    private javax.swing.JPanel pDeletionOutput;
    private javax.swing.JPanel pILoading;
    private javax.swing.JPanel pInput;
    private javax.swing.JPanel pInsertion;
    private javax.swing.JPanel pInsertionIntro;
    private javax.swing.JPanel pInsertionOutput;
    private javax.swing.JPanel pLinkedLists;
    private javax.swing.JPanel pLinkedListsIntro;
    private javax.swing.JPanel pLinkedListsOperations;
    private javax.swing.JPanel pLoading;
    private javax.swing.JPanel pMenus;
    private javax.swing.JPanel pOIntro;
    private javax.swing.JPanel pOLoading;
    private javax.swing.JPanel pOutput;
    private javax.swing.JPanel pSBot11;
    private javax.swing.JPanel pSBot13;
    private javax.swing.JPanel pSBot14;
    private javax.swing.JPanel pSBot15;
    private javax.swing.JPanel pSBot5;
    private javax.swing.JPanel pSCenter19;
    private javax.swing.JPanel pSCenter20;
    private javax.swing.JPanel pSCenter21;
    private javax.swing.JPanel pSCenter22;
    private javax.swing.JPanel pSCenter23;
    private javax.swing.JPanel pSCenter8;
    private javax.swing.JPanel pSCenter9;
    private javax.swing.JPanel pSTop11;
    private javax.swing.JPanel pSTop12;
    private javax.swing.JPanel pSTop15;
    private javax.swing.JPanel pSTop16;
    private javax.swing.JPanel pSTop17;
    private javax.swing.JPanel pSTop5;
    private javax.swing.JPanel pSearch;
    private javax.swing.JPanel pSearchIntro;
    private javax.swing.JPanel pSearchOutput;
    private javax.swing.JLabel sTitle12;
    private javax.swing.JLabel sTitle6;
    private javax.swing.JTextArea searchOutputArea;
    private javax.swing.JLabel structImg3;
    // End of variables declaration//GEN-END:variables
}
