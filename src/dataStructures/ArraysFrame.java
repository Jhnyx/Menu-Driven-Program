/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package dataStructures;

import java.awt.*;
import java.awt.event.ActionEvent;
import javax.swing.*;
import handlers.DataHandler;
import handlers.FileHandler;
import main.Home;

/**
 *
 * @author jhnyx
 */
public class ArraysFrame extends javax.swing.JFrame {

    private Home home;

    //Array
    private int[] arrayInputValuesFromFile;
    private final JTextField[] traverseFields;
    private final JTextField[] insertFields;
    private final JTextField[] deleteFields;
    private final JTextField[] searchFields;
    private final JTextField[] updateFields;

    /**
     * Creates new form Arrays
     */
    public ArraysFrame() {
        initComponents();

        home = new Home();

        //Array Fields
        traverseFields = new JTextField[]{aTElement0, aTElement1, aTElement2, aTElement3, aTElement4, aTElement5};
        insertFields = new JTextField[]{aIElement0, aIElement1, aIElement2, aIElement3, aIElement4, aIElement5};
        deleteFields = new JTextField[]{aDElement0, aDElement1, aDElement2, aDElement3, aDElement4, aDElement5};
        searchFields = new JTextField[]{aSElement0, aSElement1, aSElement2, aSElement3, aSElement4, aSElement5};
        updateFields = new JTextField[]{aUElement0, aUElement1, aUElement2, aUElement3, aUElement4, aUElement5};
    }

    private void switchArrayLayouts(JPanel pAInput, JPanel pAOutput) {
        /* Array Operations Panels */
        // Get a reference to the CardLayout of the pInput panel
        CardLayout InputLayout = (CardLayout) pAInput.getLayout();

        // Show the "ILoading" card in the pInput panel
        InputLayout.show(pAInput, "AILoading");

        // Get a reference to the CardLayout of the pOutput panel
        CardLayout OutputLayout = (CardLayout) pAOutput.getLayout();

        // Show the "OLoading" card in the pOutput panel
        OutputLayout.show(pAOutput, "AOLoading");

        // Set up a timer to switch back to the main menus after a delay
        Timer timer = new Timer(500, (ActionEvent e) -> {
            InputLayout.show(pAInput, "AMenus");
            OutputLayout.show(pAOutput, "AOIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pContainer = new javax.swing.JPanel();
        pArrays = new javax.swing.JPanel();
        pArraysIntro = new javax.swing.JPanel();
        pSTop2 = new javax.swing.JPanel();
        bBack = new javax.swing.JButton();
        sTitle3 = new javax.swing.JLabel();
        bArrayNext = new javax.swing.JButton();
        pSCenter2 = new javax.swing.JPanel();
        structImg = new javax.swing.JLabel();
        pSCenter3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        pSBot2 = new javax.swing.JPanel();
        pLoading = new javax.swing.JPanel();
        pSTop11 = new javax.swing.JPanel();
        pSCenter19 = new javax.swing.JPanel();
        bArrays1 = new javax.swing.JButton();
        pSBot11 = new javax.swing.JPanel();
        pArrayOperations = new javax.swing.JPanel();
        pSTop12 = new javax.swing.JPanel();
        bBack9 = new javax.swing.JButton();
        sTitle12 = new javax.swing.JLabel();
        bHome = new javax.swing.JButton();
        pSCenter20 = new javax.swing.JPanel();
        pAInput = new javax.swing.JPanel();
        pAMenus = new javax.swing.JPanel();
        bArrayTraverse = new javax.swing.JButton();
        bArrayInsertion = new javax.swing.JButton();
        bArrayDeletion = new javax.swing.JButton();
        bArraySearch = new javax.swing.JButton();
        bArrayUpdate = new javax.swing.JButton();
        pAILoading = new javax.swing.JPanel();
        bArrays3 = new javax.swing.JButton();
        pATraverse = new javax.swing.JPanel();
        pSTop14 = new javax.swing.JPanel();
        bTraverseBack = new javax.swing.JButton();
        pSCenter18 = new javax.swing.JPanel();
        bTraverseTitle = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        bElements = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        aTElement0 = new javax.swing.JTextField();
        aTElement1 = new javax.swing.JTextField();
        aTElement2 = new javax.swing.JTextField();
        aTElement3 = new javax.swing.JTextField();
        aTElement4 = new javax.swing.JTextField();
        aTElement5 = new javax.swing.JTextField();
        pSBot10 = new javax.swing.JPanel();
        bTraverse = new javax.swing.JButton();
        pAInsertion = new javax.swing.JPanel();
        pSTop15 = new javax.swing.JPanel();
        bInsertBack = new javax.swing.JButton();
        pSCenter21 = new javax.swing.JPanel();
        bInsertionTitle = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        bElements1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        aIElement0 = new javax.swing.JTextField();
        aIElement1 = new javax.swing.JTextField();
        aIElement2 = new javax.swing.JTextField();
        aIElement3 = new javax.swing.JTextField();
        aIElement4 = new javax.swing.JTextField();
        aIElement5 = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        InsertIndex = new javax.swing.JSlider();
        jPanel7 = new javax.swing.JPanel();
        bEInsert = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        aIValue = new javax.swing.JTextField();
        pSBot13 = new javax.swing.JPanel();
        bInsert = new javax.swing.JButton();
        pADeletion = new javax.swing.JPanel();
        pSTop16 = new javax.swing.JPanel();
        bDeleteBack = new javax.swing.JButton();
        pSCenter22 = new javax.swing.JPanel();
        bDeletionTitle = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        bElements2 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        aDElement0 = new javax.swing.JTextField();
        aDElement1 = new javax.swing.JTextField();
        aDElement2 = new javax.swing.JTextField();
        aDElement3 = new javax.swing.JTextField();
        aDElement4 = new javax.swing.JTextField();
        aDElement5 = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        DeleteIndex = new javax.swing.JSlider();
        jPanel14 = new javax.swing.JPanel();
        bElements3 = new javax.swing.JButton();
        pSBot14 = new javax.swing.JPanel();
        bDelete = new javax.swing.JButton();
        pASearch = new javax.swing.JPanel();
        pSTop17 = new javax.swing.JPanel();
        bSearchBack = new javax.swing.JButton();
        pSCenter23 = new javax.swing.JPanel();
        bSearchTitle = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        bElements4 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        aSElement0 = new javax.swing.JTextField();
        aSElement1 = new javax.swing.JTextField();
        aSElement2 = new javax.swing.JTextField();
        aSElement3 = new javax.swing.JTextField();
        aSElement4 = new javax.swing.JTextField();
        aSElement5 = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        bElements5 = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        aSValue = new javax.swing.JTextField();
        pSBot15 = new javax.swing.JPanel();
        bSearch = new javax.swing.JButton();
        pAUpdate = new javax.swing.JPanel();
        pSTop18 = new javax.swing.JPanel();
        bUpdateBack = new javax.swing.JButton();
        pSCenter24 = new javax.swing.JPanel();
        bUpdateTitle = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        bElements6 = new javax.swing.JButton();
        jPanel20 = new javax.swing.JPanel();
        aUElement0 = new javax.swing.JTextField();
        aUElement1 = new javax.swing.JTextField();
        aUElement2 = new javax.swing.JTextField();
        aUElement3 = new javax.swing.JTextField();
        aUElement4 = new javax.swing.JTextField();
        aUElement5 = new javax.swing.JTextField();
        jPanel21 = new javax.swing.JPanel();
        UpdateIndex = new javax.swing.JSlider();
        jPanel22 = new javax.swing.JPanel();
        bEInsert1 = new javax.swing.JButton();
        jPanel23 = new javax.swing.JPanel();
        aUValue = new javax.swing.JTextField();
        pSBot16 = new javax.swing.JPanel();
        bUpdate = new javax.swing.JButton();
        pAOutput = new javax.swing.JPanel();
        pAOIntro = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTextArea12 = new javax.swing.JTextArea();
        pAOLoading = new javax.swing.JPanel();
        bArrays2 = new javax.swing.JButton();
        pATraverseIntro = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTextArea11 = new javax.swing.JTextArea();
        pATraverseElements = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTextArea13 = new javax.swing.JTextArea();
        pATraverseOutput = new javax.swing.JPanel();
        jScrollPane14 = new javax.swing.JScrollPane();
        traverseOutputArea = new javax.swing.JTextArea();
        pAInsertionIntro = new javax.swing.JPanel();
        jScrollPane15 = new javax.swing.JScrollPane();
        jTextArea14 = new javax.swing.JTextArea();
        pAInsertionElements = new javax.swing.JPanel();
        jScrollPane16 = new javax.swing.JScrollPane();
        jTextArea15 = new javax.swing.JTextArea();
        pAInsertionOutput = new javax.swing.JPanel();
        jScrollPane17 = new javax.swing.JScrollPane();
        insertionOutputArea = new javax.swing.JTextArea();
        pADeletionIntro = new javax.swing.JPanel();
        jScrollPane18 = new javax.swing.JScrollPane();
        jTextArea16 = new javax.swing.JTextArea();
        pADeletionElements = new javax.swing.JPanel();
        jScrollPane19 = new javax.swing.JScrollPane();
        jTextArea17 = new javax.swing.JTextArea();
        pADeletionOutput = new javax.swing.JPanel();
        jScrollPane20 = new javax.swing.JScrollPane();
        deletionOutputArea = new javax.swing.JTextArea();
        pASearchIntro = new javax.swing.JPanel();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTextArea18 = new javax.swing.JTextArea();
        pASearchElements = new javax.swing.JPanel();
        jScrollPane22 = new javax.swing.JScrollPane();
        jTextArea19 = new javax.swing.JTextArea();
        pASearchOutput = new javax.swing.JPanel();
        jScrollPane23 = new javax.swing.JScrollPane();
        searchOutputArea = new javax.swing.JTextArea();
        pAUpdateIntro = new javax.swing.JPanel();
        jScrollPane24 = new javax.swing.JScrollPane();
        jTextArea20 = new javax.swing.JTextArea();
        pAUpdateElements = new javax.swing.JPanel();
        jScrollPane25 = new javax.swing.JScrollPane();
        jTextArea21 = new javax.swing.JTextArea();
        pAUpdateOutput = new javax.swing.JPanel();
        jScrollPane26 = new javax.swing.JScrollPane();
        updateOutputArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        pContainer.setMinimumSize(new java.awt.Dimension(1280, 720));
        pContainer.setPreferredSize(new java.awt.Dimension(1280, 720));
        pContainer.setLayout(new java.awt.BorderLayout());

        pArrays.setMaximumSize(new java.awt.Dimension(1280, 720));
        pArrays.setRequestFocusEnabled(false);
        pArrays.setLayout(new java.awt.CardLayout());

        pArraysIntro.setBackground(new java.awt.Color(35, 40, 50));
        pArraysIntro.setMinimumSize(new java.awt.Dimension(1280, 720));
        pArraysIntro.setPreferredSize(new java.awt.Dimension(1280, 720));
        pArraysIntro.setLayout(new java.awt.BorderLayout());

        pSTop2.setBackground(new java.awt.Color(24, 25, 28));
        pSTop2.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 100, 0));

        bBack.setBackground(new java.awt.Color(24, 25, 28));
        bBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/back_icon.png"))); // NOI18N
        bBack.setBorder(null);
        bBack.setBorderPainted(false);
        bBack.setContentAreaFilled(false);
        bBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bBack.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bBack.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_back_icon.png"))); // NOI18N
        bBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBackActionPerformed(evt);
            }
        });
        pSTop2.add(bBack);

        sTitle3.setFont(new java.awt.Font("Russo One", 1, 48)); // NOI18N
        sTitle3.setForeground(new java.awt.Color(255, 255, 255));
        sTitle3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sTitle3.setText("ARRAYS");
        sTitle3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sTitle3.setMaximumSize(new java.awt.Dimension(0, 0));
        sTitle3.setMinimumSize(new java.awt.Dimension(0, 0));
        sTitle3.setPreferredSize(new java.awt.Dimension(700, 100));
        sTitle3.setRequestFocusEnabled(false);
        pSTop2.add(sTitle3);

        bArrayNext.setBackground(new java.awt.Color(24, 25, 28));
        bArrayNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/next_icon.png"))); // NOI18N
        bArrayNext.setBorder(null);
        bArrayNext.setBorderPainted(false);
        bArrayNext.setContentAreaFilled(false);
        bArrayNext.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bArrayNext.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_next_icon.png"))); // NOI18N
        bArrayNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bArrayNextActionPerformed(evt);
            }
        });
        pSTop2.add(bArrayNext);

        pArraysIntro.add(pSTop2, java.awt.BorderLayout.PAGE_START);

        pSCenter2.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter2.setLayout(new java.awt.BorderLayout());

        structImg.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        structImg.setForeground(new java.awt.Color(255, 255, 255));
        structImg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        structImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/array_gif.gif"))); // NOI18N
        structImg.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pSCenter2.add(structImg, java.awt.BorderLayout.WEST);

        pSCenter3.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 25));

        jScrollPane1.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.setHorizontalScrollBar(null);
        jScrollPane1.setOpaque(false);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane1.setRequestFocusEnabled(false);
        jScrollPane1.setWheelScrollingEnabled(false);

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Russo One", 0, 22)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setLineWrap(true);
        jTextArea1.setText("An array is a data structure used in programming to store a collection of elements of the same type. The elements can be anything that can be represented in the computer's memory, such as integers, floating-point numbers, characters, or complex objects.\n\nArrays are useful for representing lists, tables, and matrices, and they are supported by programming languages and used extensively in various applications. They allow you to access and manipulate individual elements by their unique index, which is typically an integer value.\n\nArrays can be static or dynamic, and their size can be fixed at compile time or changed during runtime using dynamic memory allocation. Overall, arrays are a simple, efficient, and essential tool in programming.");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setAutoscrolls(false);
        jTextArea1.setBorder(null);
        jTextArea1.setFocusable(false);
        jTextArea1.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane1.setViewportView(jTextArea1);

        pSCenter3.add(jScrollPane1);

        pSCenter2.add(pSCenter3, java.awt.BorderLayout.CENTER);

        pArraysIntro.add(pSCenter2, java.awt.BorderLayout.CENTER);

        pSBot2.setBackground(new java.awt.Color(35, 40, 50));
        pSBot2.setPreferredSize(new java.awt.Dimension(0, 100));
        pSBot2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 600, 0));
        pArraysIntro.add(pSBot2, java.awt.BorderLayout.SOUTH);

        pArrays.add(pArraysIntro, "ArraysIntro");

        pLoading.setBackground(new java.awt.Color(35, 40, 50));
        pLoading.setMinimumSize(new java.awt.Dimension(1280, 720));
        pLoading.setPreferredSize(new java.awt.Dimension(1280, 720));
        pLoading.setLayout(new java.awt.BorderLayout());

        pSTop11.setBackground(new java.awt.Color(35, 40, 50));
        pSTop11.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 100, 25));
        pLoading.add(pSTop11, java.awt.BorderLayout.NORTH);

        pSCenter19.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter19.setLayout(new java.awt.GridLayout(1, 0));

        bArrays1.setBackground(new java.awt.Color(35, 40, 50));
        bArrays1.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bArrays1.setForeground(new java.awt.Color(255, 255, 255));
        bArrays1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/loading_gif.gif"))); // NOI18N
        bArrays1.setText("LOADING...");
        bArrays1.setBorder(null);
        bArrays1.setBorderPainted(false);
        bArrays1.setContentAreaFilled(false);
        bArrays1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bArrays1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bArrays1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bArrays1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bArrays1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bArrays1MouseExited(evt);
            }
        });
        bArrays1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bArrays1ActionPerformed(evt);
            }
        });
        pSCenter19.add(bArrays1);

        pLoading.add(pSCenter19, java.awt.BorderLayout.CENTER);

        pSBot11.setBackground(new java.awt.Color(35, 40, 50));
        pSBot11.setPreferredSize(new java.awt.Dimension(0, 100));
        pSBot11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));
        pLoading.add(pSBot11, java.awt.BorderLayout.SOUTH);

        pArrays.add(pLoading, "Loading");

        pArrayOperations.setBackground(new java.awt.Color(35, 40, 50));
        pArrayOperations.setMinimumSize(new java.awt.Dimension(1280, 720));
        pArrayOperations.setPreferredSize(new java.awt.Dimension(1280, 720));
        pArrayOperations.setLayout(new java.awt.BorderLayout());

        pSTop12.setBackground(new java.awt.Color(24, 25, 28));
        pSTop12.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 100, 0));

        bBack9.setBackground(new java.awt.Color(24, 25, 28));
        bBack9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/back_icon.png"))); // NOI18N
        bBack9.setBorder(null);
        bBack9.setBorderPainted(false);
        bBack9.setContentAreaFilled(false);
        bBack9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bBack9.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_back_icon.png"))); // NOI18N
        bBack9.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bBack9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBack9ActionPerformed(evt);
            }
        });
        pSTop12.add(bBack9);

        sTitle12.setFont(new java.awt.Font("Russo One", 1, 48)); // NOI18N
        sTitle12.setForeground(new java.awt.Color(255, 255, 255));
        sTitle12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sTitle12.setText("ARRAY OPERATIONS");
        sTitle12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sTitle12.setMaximumSize(new java.awt.Dimension(0, 0));
        sTitle12.setMinimumSize(new java.awt.Dimension(0, 0));
        sTitle12.setPreferredSize(new java.awt.Dimension(700, 100));
        sTitle12.setRequestFocusEnabled(false);
        pSTop12.add(sTitle12);

        bHome.setBackground(new java.awt.Color(24, 25, 28));
        bHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/home_icon.png"))); // NOI18N
        bHome.setBorder(null);
        bHome.setBorderPainted(false);
        bHome.setContentAreaFilled(false);
        bHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bHome.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_home_icon.png"))); // NOI18N
        bHome.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHomeActionPerformed(evt);
            }
        });
        pSTop12.add(bHome);

        pArrayOperations.add(pSTop12, java.awt.BorderLayout.PAGE_START);

        pSCenter20.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter20.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 25, 0));

        pAInput.setBackground(new java.awt.Color(35, 40, 50));
        pAInput.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INPUT", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Russo One", 2, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        pAInput.setForeground(new java.awt.Color(255, 255, 255));
        pAInput.setPreferredSize(new java.awt.Dimension(550, 600));
        pAInput.setLayout(new java.awt.CardLayout());

        pAMenus.setBackground(new java.awt.Color(35, 40, 50));
        pAMenus.setLayout(new java.awt.GridLayout(5, 0));

        bArrayTraverse.setBackground(new java.awt.Color(35, 40, 50));
        bArrayTraverse.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bArrayTraverse.setForeground(new java.awt.Color(255, 255, 255));
        bArrayTraverse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_op_traversal_gif.gif"))); // NOI18N
        bArrayTraverse.setText("TRAVERSE");
        bArrayTraverse.setBorder(null);
        bArrayTraverse.setBorderPainted(false);
        bArrayTraverse.setContentAreaFilled(false);
        bArrayTraverse.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bArrayTraverse.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bArrayTraverse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bArrayTraverseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bArrayTraverseMouseExited(evt);
            }
        });
        bArrayTraverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bArrayTraverseActionPerformed(evt);
            }
        });
        pAMenus.add(bArrayTraverse);

        bArrayInsertion.setBackground(new java.awt.Color(35, 40, 50));
        bArrayInsertion.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bArrayInsertion.setForeground(new java.awt.Color(255, 255, 255));
        bArrayInsertion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_op_insertion_gif.gif"))); // NOI18N
        bArrayInsertion.setText("INSERTION");
        bArrayInsertion.setBorder(null);
        bArrayInsertion.setBorderPainted(false);
        bArrayInsertion.setContentAreaFilled(false);
        bArrayInsertion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bArrayInsertion.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bArrayInsertion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bArrayInsertionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bArrayInsertionMouseExited(evt);
            }
        });
        bArrayInsertion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bArrayInsertionActionPerformed(evt);
            }
        });
        pAMenus.add(bArrayInsertion);

        bArrayDeletion.setBackground(new java.awt.Color(35, 40, 50));
        bArrayDeletion.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bArrayDeletion.setForeground(new java.awt.Color(255, 255, 255));
        bArrayDeletion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_op_deletion_gif.gif"))); // NOI18N
        bArrayDeletion.setText("DELETION");
        bArrayDeletion.setBorder(null);
        bArrayDeletion.setBorderPainted(false);
        bArrayDeletion.setContentAreaFilled(false);
        bArrayDeletion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bArrayDeletion.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bArrayDeletion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bArrayDeletionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bArrayDeletionMouseExited(evt);
            }
        });
        bArrayDeletion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bArrayDeletionActionPerformed(evt);
            }
        });
        pAMenus.add(bArrayDeletion);

        bArraySearch.setBackground(new java.awt.Color(35, 40, 50));
        bArraySearch.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bArraySearch.setForeground(new java.awt.Color(255, 255, 255));
        bArraySearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_op_search_gif.gif"))); // NOI18N
        bArraySearch.setText("SEARCH");
        bArraySearch.setBorder(null);
        bArraySearch.setBorderPainted(false);
        bArraySearch.setContentAreaFilled(false);
        bArraySearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bArraySearch.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bArraySearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bArraySearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bArraySearchMouseExited(evt);
            }
        });
        bArraySearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bArraySearchActionPerformed(evt);
            }
        });
        pAMenus.add(bArraySearch);

        bArrayUpdate.setBackground(new java.awt.Color(35, 40, 50));
        bArrayUpdate.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bArrayUpdate.setForeground(new java.awt.Color(255, 255, 255));
        bArrayUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_op_updation_gif.gif"))); // NOI18N
        bArrayUpdate.setText("UPDATE");
        bArrayUpdate.setBorder(null);
        bArrayUpdate.setBorderPainted(false);
        bArrayUpdate.setContentAreaFilled(false);
        bArrayUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bArrayUpdate.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bArrayUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bArrayUpdateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bArrayUpdateMouseExited(evt);
            }
        });
        bArrayUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bArrayUpdateActionPerformed(evt);
            }
        });
        pAMenus.add(bArrayUpdate);

        pAInput.add(pAMenus, "AMenus");

        pAILoading.setBackground(new java.awt.Color(35, 40, 50));
        pAILoading.setLayout(new java.awt.BorderLayout());

        bArrays3.setBackground(new java.awt.Color(35, 40, 50));
        bArrays3.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bArrays3.setForeground(new java.awt.Color(255, 255, 255));
        bArrays3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_loading_gif.gif"))); // NOI18N
        bArrays3.setText("LOADING...");
        bArrays3.setBorder(null);
        bArrays3.setBorderPainted(false);
        bArrays3.setContentAreaFilled(false);
        bArrays3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bArrays3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bArrays3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bArrays3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bArrays3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bArrays3MouseExited(evt);
            }
        });
        bArrays3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bArrays3ActionPerformed(evt);
            }
        });
        pAILoading.add(bArrays3, java.awt.BorderLayout.CENTER);

        pAInput.add(pAILoading, "AILoading");

        pATraverse.setBackground(new java.awt.Color(35, 40, 50));
        pATraverse.setLayout(new java.awt.BorderLayout());

        pSTop14.setBackground(new java.awt.Color(35, 40, 50));
        pSTop14.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop14.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 55, 25));

        bTraverseBack.setBackground(new java.awt.Color(24, 25, 28));
        bTraverseBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/go_back_icon.png"))); // NOI18N
        bTraverseBack.setBorder(null);
        bTraverseBack.setBorderPainted(false);
        bTraverseBack.setContentAreaFilled(false);
        bTraverseBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bTraverseBack.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bTraverseBack.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_go_back_icon.png"))); // NOI18N
        bTraverseBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bTraverseBackActionPerformed(evt);
            }
        });
        pSTop14.add(bTraverseBack);

        pATraverse.add(pSTop14, java.awt.BorderLayout.NORTH);

        pSCenter18.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter18.setPreferredSize(new java.awt.Dimension(0, 0));
        pSCenter18.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 0));

        bTraverseTitle.setBackground(new java.awt.Color(35, 40, 50));
        bTraverseTitle.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bTraverseTitle.setForeground(new java.awt.Color(255, 255, 255));
        bTraverseTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_op_traversal_gif.gif"))); // NOI18N
        bTraverseTitle.setText("TRAVERSE");
        bTraverseTitle.setBorder(null);
        bTraverseTitle.setBorderPainted(false);
        bTraverseTitle.setContentAreaFilled(false);
        bTraverseTitle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bTraverseTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bTraverseTitle.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bTraverseTitle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bTraverseTitleMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bTraverseTitleMouseExited(evt);
            }
        });
        bTraverseTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bTraverseTitleActionPerformed(evt);
            }
        });
        pSCenter18.add(bTraverseTitle);

        jPanel5.setBackground(new java.awt.Color(35, 40, 50));
        jPanel5.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        pSCenter18.add(jPanel5);

        bElements.setBackground(new java.awt.Color(35, 40, 50));
        bElements.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bElements.setForeground(new java.awt.Color(255, 255, 255));
        bElements.setText("Enter Elements");
        bElements.setBorder(null);
        bElements.setBorderPainted(false);
        bElements.setContentAreaFilled(false);
        bElements.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bElements.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bElements.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bElementsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bElementsMouseExited(evt);
            }
        });
        bElements.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bElementsActionPerformed(evt);
            }
        });
        pSCenter18.add(bElements);

        jPanel2.setBackground(new java.awt.Color(35, 40, 50));
        jPanel2.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        pSCenter18.add(jPanel2);

        aTElement0.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aTElement0.setText("0");
        aTElement0.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 0", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aTElement0.setMinimumSize(new java.awt.Dimension(0, 0));
        aTElement0.setOpaque(true);
        aTElement0.setPreferredSize(new java.awt.Dimension(50, 50));
        aTElement0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aTElement0ActionPerformed(evt);
            }
        });
        pSCenter18.add(aTElement0);

        aTElement1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aTElement1.setText("0");
        aTElement1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 1", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aTElement1.setMinimumSize(new java.awt.Dimension(0, 0));
        aTElement1.setOpaque(true);
        aTElement1.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter18.add(aTElement1);

        aTElement2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aTElement2.setText("0");
        aTElement2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 2", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aTElement2.setMinimumSize(new java.awt.Dimension(0, 0));
        aTElement2.setOpaque(true);
        aTElement2.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter18.add(aTElement2);

        aTElement3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aTElement3.setText("0");
        aTElement3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 3", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aTElement3.setMinimumSize(new java.awt.Dimension(0, 0));
        aTElement3.setOpaque(true);
        aTElement3.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter18.add(aTElement3);

        aTElement4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aTElement4.setText("0");
        aTElement4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 4", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aTElement4.setMinimumSize(new java.awt.Dimension(0, 0));
        aTElement4.setOpaque(true);
        aTElement4.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter18.add(aTElement4);

        aTElement5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aTElement5.setText("0");
        aTElement5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 5", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aTElement5.setMinimumSize(new java.awt.Dimension(0, 0));
        aTElement5.setOpaque(true);
        aTElement5.setPreferredSize(new java.awt.Dimension(50, 50));
        aTElement5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aTElement5ActionPerformed(evt);
            }
        });
        pSCenter18.add(aTElement5);

        pATraverse.add(pSCenter18, java.awt.BorderLayout.CENTER);

        pSBot10.setBackground(new java.awt.Color(35, 40, 50));
        pSBot10.setPreferredSize(new java.awt.Dimension(0, 100));
        pSBot10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));

        bTraverse.setBackground(new java.awt.Color(24, 25, 28));
        bTraverse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/submit_icon.png"))); // NOI18N
        bTraverse.setBorder(null);
        bTraverse.setBorderPainted(false);
        bTraverse.setContentAreaFilled(false);
        bTraverse.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bTraverse.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bTraverse.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_submit_icon.png"))); // NOI18N
        bTraverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bTraverseActionPerformed(evt);
            }
        });
        pSBot10.add(bTraverse);

        pATraverse.add(pSBot10, java.awt.BorderLayout.SOUTH);

        pAInput.add(pATraverse, "ATraverseMenu");

        pAInsertion.setBackground(new java.awt.Color(35, 40, 50));
        pAInsertion.setLayout(new java.awt.BorderLayout());

        pSTop15.setBackground(new java.awt.Color(35, 40, 50));
        pSTop15.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop15.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 55, 25));

        bInsertBack.setBackground(new java.awt.Color(24, 25, 28));
        bInsertBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/go_back_icon.png"))); // NOI18N
        bInsertBack.setBorder(null);
        bInsertBack.setBorderPainted(false);
        bInsertBack.setContentAreaFilled(false);
        bInsertBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bInsertBack.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bInsertBack.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bInsertBack.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_go_back_icon.png"))); // NOI18N
        bInsertBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInsertBackActionPerformed(evt);
            }
        });
        pSTop15.add(bInsertBack);

        pAInsertion.add(pSTop15, java.awt.BorderLayout.NORTH);

        pSCenter21.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter21.setPreferredSize(new java.awt.Dimension(0, 0));
        pSCenter21.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 0));

        bInsertionTitle.setBackground(new java.awt.Color(35, 40, 50));
        bInsertionTitle.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bInsertionTitle.setForeground(new java.awt.Color(255, 255, 255));
        bInsertionTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_op_insertion_gif.gif"))); // NOI18N
        bInsertionTitle.setText("INSERTION");
        bInsertionTitle.setBorder(null);
        bInsertionTitle.setBorderPainted(false);
        bInsertionTitle.setContentAreaFilled(false);
        bInsertionTitle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bInsertionTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bInsertionTitle.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bInsertionTitle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bInsertionTitleMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bInsertionTitleMouseExited(evt);
            }
        });
        bInsertionTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInsertionTitleActionPerformed(evt);
            }
        });
        pSCenter21.add(bInsertionTitle);

        jPanel6.setBackground(new java.awt.Color(35, 40, 50));
        jPanel6.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        pSCenter21.add(jPanel6);

        bElements1.setBackground(new java.awt.Color(35, 40, 50));
        bElements1.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bElements1.setForeground(new java.awt.Color(255, 255, 255));
        bElements1.setText("Enter Elements ");
        bElements1.setBorder(null);
        bElements1.setBorderPainted(false);
        bElements1.setContentAreaFilled(false);
        bElements1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bElements1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bElements1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bElements1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bElements1MouseExited(evt);
            }
        });
        bElements1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bElements1ActionPerformed(evt);
            }
        });
        pSCenter21.add(bElements1);

        jPanel4.setBackground(new java.awt.Color(35, 40, 50));
        jPanel4.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        pSCenter21.add(jPanel4);

        aIElement0.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aIElement0.setText("0");
        aIElement0.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 0", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aIElement0.setMinimumSize(new java.awt.Dimension(0, 0));
        aIElement0.setOpaque(true);
        aIElement0.setPreferredSize(new java.awt.Dimension(50, 50));
        aIElement0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aIElement0ActionPerformed(evt);
            }
        });
        pSCenter21.add(aIElement0);

        aIElement1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aIElement1.setText("0");
        aIElement1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 1", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aIElement1.setMinimumSize(new java.awt.Dimension(0, 0));
        aIElement1.setOpaque(true);
        aIElement1.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter21.add(aIElement1);

        aIElement2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aIElement2.setText("0");
        aIElement2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 2", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aIElement2.setMinimumSize(new java.awt.Dimension(0, 0));
        aIElement2.setOpaque(true);
        aIElement2.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter21.add(aIElement2);

        aIElement3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aIElement3.setText("0");
        aIElement3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 3", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aIElement3.setMinimumSize(new java.awt.Dimension(0, 0));
        aIElement3.setOpaque(true);
        aIElement3.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter21.add(aIElement3);

        aIElement4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aIElement4.setText("0");
        aIElement4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 4", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aIElement4.setMinimumSize(new java.awt.Dimension(0, 0));
        aIElement4.setOpaque(true);
        aIElement4.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter21.add(aIElement4);

        aIElement5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aIElement5.setText("0");
        aIElement5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 5", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aIElement5.setMinimumSize(new java.awt.Dimension(0, 0));
        aIElement5.setOpaque(true);
        aIElement5.setPreferredSize(new java.awt.Dimension(50, 50));
        aIElement5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aIElement5ActionPerformed(evt);
            }
        });
        pSCenter21.add(aIElement5);

        jPanel9.setBackground(new java.awt.Color(35, 40, 50));
        jPanel9.setPreferredSize(new java.awt.Dimension(1000, 5));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        pSCenter21.add(jPanel9);

        InsertIndex.setMaximum(5);
        InsertIndex.setSnapToTicks(true);
        InsertIndex.setValue(0);
        InsertIndex.setPreferredSize(new java.awt.Dimension(315, 20));
        pSCenter21.add(InsertIndex);

        jPanel7.setBackground(new java.awt.Color(35, 40, 50));
        jPanel7.setPreferredSize(new java.awt.Dimension(1000, 5));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        pSCenter21.add(jPanel7);

        bEInsert.setBackground(new java.awt.Color(35, 40, 50));
        bEInsert.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bEInsert.setForeground(new java.awt.Color(255, 255, 255));
        bEInsert.setText("Enter element To Insert");
        bEInsert.setBorder(null);
        bEInsert.setBorderPainted(false);
        bEInsert.setContentAreaFilled(false);
        bEInsert.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bEInsert.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bEInsert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bEInsertMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bEInsertMouseExited(evt);
            }
        });
        bEInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEInsertActionPerformed(evt);
            }
        });
        pSCenter21.add(bEInsert);

        jPanel8.setBackground(new java.awt.Color(35, 40, 50));
        jPanel8.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        pSCenter21.add(jPanel8);

        aIValue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aIValue.setText("0");
        aIValue.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Value", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aIValue.setMinimumSize(new java.awt.Dimension(0, 0));
        aIValue.setOpaque(true);
        aIValue.setPreferredSize(new java.awt.Dimension(50, 50));
        aIValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aIValueActionPerformed(evt);
            }
        });
        pSCenter21.add(aIValue);

        pAInsertion.add(pSCenter21, java.awt.BorderLayout.CENTER);

        pSBot13.setBackground(new java.awt.Color(35, 40, 50));
        pSBot13.setPreferredSize(new java.awt.Dimension(0, 100));
        pSBot13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));

        bInsert.setBackground(new java.awt.Color(24, 25, 28));
        bInsert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/submit_icon.png"))); // NOI18N
        bInsert.setBorder(null);
        bInsert.setBorderPainted(false);
        bInsert.setContentAreaFilled(false);
        bInsert.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bInsert.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bInsert.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_submit_icon.png"))); // NOI18N
        bInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInsertActionPerformed(evt);
            }
        });
        pSBot13.add(bInsert);

        pAInsertion.add(pSBot13, java.awt.BorderLayout.SOUTH);

        pAInput.add(pAInsertion, "AInsertionMenu");

        pADeletion.setBackground(new java.awt.Color(35, 40, 50));
        pADeletion.setLayout(new java.awt.BorderLayout());

        pSTop16.setBackground(new java.awt.Color(35, 40, 50));
        pSTop16.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop16.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 55, 25));

        bDeleteBack.setBackground(new java.awt.Color(24, 25, 28));
        bDeleteBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/go_back_icon.png"))); // NOI18N
        bDeleteBack.setBorder(null);
        bDeleteBack.setBorderPainted(false);
        bDeleteBack.setContentAreaFilled(false);
        bDeleteBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bDeleteBack.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bDeleteBack.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bDeleteBack.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_go_back_icon.png"))); // NOI18N
        bDeleteBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteBackActionPerformed(evt);
            }
        });
        pSTop16.add(bDeleteBack);

        pADeletion.add(pSTop16, java.awt.BorderLayout.NORTH);

        pSCenter22.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter22.setPreferredSize(new java.awt.Dimension(0, 0));
        pSCenter22.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 0));

        bDeletionTitle.setBackground(new java.awt.Color(35, 40, 50));
        bDeletionTitle.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bDeletionTitle.setForeground(new java.awt.Color(255, 255, 255));
        bDeletionTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_op_deletion_gif.gif"))); // NOI18N
        bDeletionTitle.setText("DELETION");
        bDeletionTitle.setBorder(null);
        bDeletionTitle.setBorderPainted(false);
        bDeletionTitle.setContentAreaFilled(false);
        bDeletionTitle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bDeletionTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bDeletionTitle.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bDeletionTitle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bDeletionTitleMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bDeletionTitleMouseExited(evt);
            }
        });
        bDeletionTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeletionTitleActionPerformed(evt);
            }
        });
        pSCenter22.add(bDeletionTitle);

        jPanel10.setBackground(new java.awt.Color(35, 40, 50));
        jPanel10.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        pSCenter22.add(jPanel10);

        bElements2.setBackground(new java.awt.Color(35, 40, 50));
        bElements2.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bElements2.setForeground(new java.awt.Color(255, 255, 255));
        bElements2.setText("Enter Elements ");
        bElements2.setBorder(null);
        bElements2.setBorderPainted(false);
        bElements2.setContentAreaFilled(false);
        bElements2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bElements2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bElements2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bElements2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bElements2MouseExited(evt);
            }
        });
        bElements2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bElements2ActionPerformed(evt);
            }
        });
        pSCenter22.add(bElements2);

        jPanel11.setBackground(new java.awt.Color(35, 40, 50));
        jPanel11.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        pSCenter22.add(jPanel11);

        aDElement0.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aDElement0.setText("0");
        aDElement0.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 0", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aDElement0.setMinimumSize(new java.awt.Dimension(0, 0));
        aDElement0.setOpaque(true);
        aDElement0.setPreferredSize(new java.awt.Dimension(50, 50));
        aDElement0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aDElement0ActionPerformed(evt);
            }
        });
        pSCenter22.add(aDElement0);

        aDElement1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aDElement1.setText("0");
        aDElement1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 1", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aDElement1.setMinimumSize(new java.awt.Dimension(0, 0));
        aDElement1.setOpaque(true);
        aDElement1.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter22.add(aDElement1);

        aDElement2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aDElement2.setText("0");
        aDElement2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 2", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aDElement2.setMinimumSize(new java.awt.Dimension(0, 0));
        aDElement2.setOpaque(true);
        aDElement2.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter22.add(aDElement2);

        aDElement3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aDElement3.setText("0");
        aDElement3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 3", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aDElement3.setMinimumSize(new java.awt.Dimension(0, 0));
        aDElement3.setOpaque(true);
        aDElement3.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter22.add(aDElement3);

        aDElement4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aDElement4.setText("0");
        aDElement4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 4", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aDElement4.setMinimumSize(new java.awt.Dimension(0, 0));
        aDElement4.setOpaque(true);
        aDElement4.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter22.add(aDElement4);

        aDElement5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aDElement5.setText("0");
        aDElement5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 5", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aDElement5.setMinimumSize(new java.awt.Dimension(0, 0));
        aDElement5.setOpaque(true);
        aDElement5.setPreferredSize(new java.awt.Dimension(50, 50));
        aDElement5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aDElement5ActionPerformed(evt);
            }
        });
        pSCenter22.add(aDElement5);

        jPanel12.setBackground(new java.awt.Color(35, 40, 50));
        jPanel12.setPreferredSize(new java.awt.Dimension(1000, 5));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        pSCenter22.add(jPanel12);

        DeleteIndex.setMaximum(5);
        DeleteIndex.setSnapToTicks(true);
        DeleteIndex.setValue(0);
        DeleteIndex.setPreferredSize(new java.awt.Dimension(315, 20));
        pSCenter22.add(DeleteIndex);

        jPanel14.setBackground(new java.awt.Color(35, 40, 50));
        jPanel14.setPreferredSize(new java.awt.Dimension(1000, 0));

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pSCenter22.add(jPanel14);

        bElements3.setBackground(new java.awt.Color(35, 40, 50));
        bElements3.setFont(new java.awt.Font("Russo One", 2, 18)); // NOI18N
        bElements3.setForeground(new java.awt.Color(255, 255, 255));
        bElements3.setText("Slide to delete element at index");
        bElements3.setBorder(null);
        bElements3.setBorderPainted(false);
        bElements3.setContentAreaFilled(false);
        bElements3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bElements3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bElements3.setPreferredSize(new java.awt.Dimension(300, 22));
        bElements3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bElements3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bElements3MouseExited(evt);
            }
        });
        bElements3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bElements3ActionPerformed(evt);
            }
        });
        pSCenter22.add(bElements3);

        pADeletion.add(pSCenter22, java.awt.BorderLayout.CENTER);

        pSBot14.setBackground(new java.awt.Color(35, 40, 50));
        pSBot14.setPreferredSize(new java.awt.Dimension(0, 100));
        pSBot14.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));

        bDelete.setBackground(new java.awt.Color(24, 25, 28));
        bDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/submit_icon.png"))); // NOI18N
        bDelete.setBorder(null);
        bDelete.setBorderPainted(false);
        bDelete.setContentAreaFilled(false);
        bDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bDelete.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_submit_icon.png"))); // NOI18N
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });
        pSBot14.add(bDelete);

        pADeletion.add(pSBot14, java.awt.BorderLayout.SOUTH);

        pAInput.add(pADeletion, "ADeletionMenu");

        pASearch.setBackground(new java.awt.Color(35, 40, 50));
        pASearch.setLayout(new java.awt.BorderLayout());

        pSTop17.setBackground(new java.awt.Color(35, 40, 50));
        pSTop17.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop17.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 55, 25));

        bSearchBack.setBackground(new java.awt.Color(24, 25, 28));
        bSearchBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/go_back_icon.png"))); // NOI18N
        bSearchBack.setBorder(null);
        bSearchBack.setBorderPainted(false);
        bSearchBack.setContentAreaFilled(false);
        bSearchBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bSearchBack.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bSearchBack.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bSearchBack.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_go_back_icon.png"))); // NOI18N
        bSearchBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSearchBackActionPerformed(evt);
            }
        });
        pSTop17.add(bSearchBack);

        pASearch.add(pSTop17, java.awt.BorderLayout.NORTH);

        pSCenter23.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter23.setPreferredSize(new java.awt.Dimension(0, 0));
        pSCenter23.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 0));

        bSearchTitle.setBackground(new java.awt.Color(35, 40, 50));
        bSearchTitle.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bSearchTitle.setForeground(new java.awt.Color(255, 255, 255));
        bSearchTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_op_search_gif.gif"))); // NOI18N
        bSearchTitle.setText("SEARCH");
        bSearchTitle.setBorder(null);
        bSearchTitle.setBorderPainted(false);
        bSearchTitle.setContentAreaFilled(false);
        bSearchTitle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bSearchTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bSearchTitle.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bSearchTitle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bSearchTitleMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bSearchTitleMouseExited(evt);
            }
        });
        bSearchTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSearchTitleActionPerformed(evt);
            }
        });
        pSCenter23.add(bSearchTitle);

        jPanel13.setBackground(new java.awt.Color(35, 40, 50));
        jPanel13.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        pSCenter23.add(jPanel13);

        bElements4.setBackground(new java.awt.Color(35, 40, 50));
        bElements4.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bElements4.setForeground(new java.awt.Color(255, 255, 255));
        bElements4.setText("Enter Elements ");
        bElements4.setBorder(null);
        bElements4.setBorderPainted(false);
        bElements4.setContentAreaFilled(false);
        bElements4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bElements4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bElements4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bElements4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bElements4MouseExited(evt);
            }
        });
        bElements4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bElements4ActionPerformed(evt);
            }
        });
        pSCenter23.add(bElements4);

        jPanel15.setBackground(new java.awt.Color(35, 40, 50));
        jPanel15.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        pSCenter23.add(jPanel15);

        aSElement0.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aSElement0.setText("0");
        aSElement0.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pos 1", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aSElement0.setMinimumSize(new java.awt.Dimension(0, 0));
        aSElement0.setOpaque(true);
        aSElement0.setPreferredSize(new java.awt.Dimension(50, 50));
        aSElement0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aSElement0ActionPerformed(evt);
            }
        });
        pSCenter23.add(aSElement0);

        aSElement1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aSElement1.setText("0");
        aSElement1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pos 2", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aSElement1.setMinimumSize(new java.awt.Dimension(0, 0));
        aSElement1.setOpaque(true);
        aSElement1.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter23.add(aSElement1);

        aSElement2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aSElement2.setText("0");
        aSElement2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pos 3", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aSElement2.setMinimumSize(new java.awt.Dimension(0, 0));
        aSElement2.setOpaque(true);
        aSElement2.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter23.add(aSElement2);

        aSElement3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aSElement3.setText("0");
        aSElement3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pos 4", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aSElement3.setMinimumSize(new java.awt.Dimension(0, 0));
        aSElement3.setOpaque(true);
        aSElement3.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter23.add(aSElement3);

        aSElement4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aSElement4.setText("0");
        aSElement4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pos 5", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aSElement4.setMinimumSize(new java.awt.Dimension(0, 0));
        aSElement4.setOpaque(true);
        aSElement4.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter23.add(aSElement4);

        aSElement5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aSElement5.setText("0");
        aSElement5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pos 6", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aSElement5.setMinimumSize(new java.awt.Dimension(0, 0));
        aSElement5.setOpaque(true);
        aSElement5.setPreferredSize(new java.awt.Dimension(50, 50));
        aSElement5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aSElement5ActionPerformed(evt);
            }
        });
        pSCenter23.add(aSElement5);

        jPanel16.setBackground(new java.awt.Color(35, 40, 50));
        jPanel16.setPreferredSize(new java.awt.Dimension(1000, 5));

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        pSCenter23.add(jPanel16);

        jPanel17.setBackground(new java.awt.Color(35, 40, 50));
        jPanel17.setPreferredSize(new java.awt.Dimension(1000, 25));

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        pSCenter23.add(jPanel17);

        bElements5.setBackground(new java.awt.Color(35, 40, 50));
        bElements5.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bElements5.setForeground(new java.awt.Color(255, 255, 255));
        bElements5.setText("Enter element to search");
        bElements5.setBorder(null);
        bElements5.setBorderPainted(false);
        bElements5.setContentAreaFilled(false);
        bElements5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bElements5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bElements5.setPreferredSize(new java.awt.Dimension(300, 22));
        bElements5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bElements5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bElements5MouseExited(evt);
            }
        });
        bElements5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bElements5ActionPerformed(evt);
            }
        });
        pSCenter23.add(bElements5);

        jPanel18.setBackground(new java.awt.Color(35, 40, 50));
        jPanel18.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        pSCenter23.add(jPanel18);

        aSValue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aSValue.setText("0");
        aSValue.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Value", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aSValue.setMinimumSize(new java.awt.Dimension(0, 0));
        aSValue.setOpaque(true);
        aSValue.setPreferredSize(new java.awt.Dimension(50, 50));
        aSValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aSValueActionPerformed(evt);
            }
        });
        pSCenter23.add(aSValue);

        pASearch.add(pSCenter23, java.awt.BorderLayout.CENTER);

        pSBot15.setBackground(new java.awt.Color(35, 40, 50));
        pSBot15.setPreferredSize(new java.awt.Dimension(0, 100));
        pSBot15.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));

        bSearch.setBackground(new java.awt.Color(24, 25, 28));
        bSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/submit_icon.png"))); // NOI18N
        bSearch.setBorder(null);
        bSearch.setBorderPainted(false);
        bSearch.setContentAreaFilled(false);
        bSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bSearch.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bSearch.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_submit_icon.png"))); // NOI18N
        bSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSearchActionPerformed(evt);
            }
        });
        pSBot15.add(bSearch);

        pASearch.add(pSBot15, java.awt.BorderLayout.SOUTH);

        pAInput.add(pASearch, "ASearchMenu");

        pAUpdate.setBackground(new java.awt.Color(35, 40, 50));
        pAUpdate.setLayout(new java.awt.BorderLayout());

        pSTop18.setBackground(new java.awt.Color(35, 40, 50));
        pSTop18.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop18.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 55, 25));

        bUpdateBack.setBackground(new java.awt.Color(24, 25, 28));
        bUpdateBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/go_back_icon.png"))); // NOI18N
        bUpdateBack.setBorder(null);
        bUpdateBack.setBorderPainted(false);
        bUpdateBack.setContentAreaFilled(false);
        bUpdateBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bUpdateBack.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bUpdateBack.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bUpdateBack.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_go_back_icon.png"))); // NOI18N
        bUpdateBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdateBackActionPerformed(evt);
            }
        });
        pSTop18.add(bUpdateBack);

        pAUpdate.add(pSTop18, java.awt.BorderLayout.NORTH);

        pSCenter24.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter24.setPreferredSize(new java.awt.Dimension(0, 0));
        pSCenter24.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 0));

        bUpdateTitle.setBackground(new java.awt.Color(35, 40, 50));
        bUpdateTitle.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bUpdateTitle.setForeground(new java.awt.Color(255, 255, 255));
        bUpdateTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_op_updation_gif.gif"))); // NOI18N
        bUpdateTitle.setText("UPDATE");
        bUpdateTitle.setBorder(null);
        bUpdateTitle.setBorderPainted(false);
        bUpdateTitle.setContentAreaFilled(false);
        bUpdateTitle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bUpdateTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bUpdateTitle.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bUpdateTitle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bUpdateTitleMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bUpdateTitleMouseExited(evt);
            }
        });
        bUpdateTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdateTitleActionPerformed(evt);
            }
        });
        pSCenter24.add(bUpdateTitle);

        jPanel19.setBackground(new java.awt.Color(35, 40, 50));
        jPanel19.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        pSCenter24.add(jPanel19);

        bElements6.setBackground(new java.awt.Color(35, 40, 50));
        bElements6.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bElements6.setForeground(new java.awt.Color(255, 255, 255));
        bElements6.setText("Enter Elements ");
        bElements6.setBorder(null);
        bElements6.setBorderPainted(false);
        bElements6.setContentAreaFilled(false);
        bElements6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bElements6.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bElements6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bElements6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bElements6MouseExited(evt);
            }
        });
        bElements6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bElements6ActionPerformed(evt);
            }
        });
        pSCenter24.add(bElements6);

        jPanel20.setBackground(new java.awt.Color(35, 40, 50));
        jPanel20.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        pSCenter24.add(jPanel20);

        aUElement0.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aUElement0.setText("0");
        aUElement0.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 0", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aUElement0.setMinimumSize(new java.awt.Dimension(0, 0));
        aUElement0.setOpaque(true);
        aUElement0.setPreferredSize(new java.awt.Dimension(50, 50));
        aUElement0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aUElement0ActionPerformed(evt);
            }
        });
        pSCenter24.add(aUElement0);

        aUElement1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aUElement1.setText("0");
        aUElement1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 1", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aUElement1.setMinimumSize(new java.awt.Dimension(0, 0));
        aUElement1.setOpaque(true);
        aUElement1.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter24.add(aUElement1);

        aUElement2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aUElement2.setText("0");
        aUElement2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 2", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aUElement2.setMinimumSize(new java.awt.Dimension(0, 0));
        aUElement2.setOpaque(true);
        aUElement2.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter24.add(aUElement2);

        aUElement3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aUElement3.setText("0");
        aUElement3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 3", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aUElement3.setMinimumSize(new java.awt.Dimension(0, 0));
        aUElement3.setOpaque(true);
        aUElement3.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter24.add(aUElement3);

        aUElement4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aUElement4.setText("0");
        aUElement4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 4", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aUElement4.setMinimumSize(new java.awt.Dimension(0, 0));
        aUElement4.setOpaque(true);
        aUElement4.setPreferredSize(new java.awt.Dimension(50, 50));
        pSCenter24.add(aUElement4);

        aUElement5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aUElement5.setText("0");
        aUElement5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Index 5", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aUElement5.setMinimumSize(new java.awt.Dimension(0, 0));
        aUElement5.setOpaque(true);
        aUElement5.setPreferredSize(new java.awt.Dimension(50, 50));
        aUElement5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aUElement5ActionPerformed(evt);
            }
        });
        pSCenter24.add(aUElement5);

        jPanel21.setBackground(new java.awt.Color(35, 40, 50));
        jPanel21.setPreferredSize(new java.awt.Dimension(1000, 5));

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        pSCenter24.add(jPanel21);

        UpdateIndex.setMaximum(5);
        UpdateIndex.setSnapToTicks(true);
        UpdateIndex.setValue(0);
        UpdateIndex.setPreferredSize(new java.awt.Dimension(315, 20));
        pSCenter24.add(UpdateIndex);

        jPanel22.setBackground(new java.awt.Color(35, 40, 50));
        jPanel22.setPreferredSize(new java.awt.Dimension(1000, 5));

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        pSCenter24.add(jPanel22);

        bEInsert1.setBackground(new java.awt.Color(35, 40, 50));
        bEInsert1.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bEInsert1.setForeground(new java.awt.Color(255, 255, 255));
        bEInsert1.setText("Enter element To Update");
        bEInsert1.setBorder(null);
        bEInsert1.setBorderPainted(false);
        bEInsert1.setContentAreaFilled(false);
        bEInsert1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bEInsert1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bEInsert1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bEInsert1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bEInsert1MouseExited(evt);
            }
        });
        bEInsert1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEInsert1ActionPerformed(evt);
            }
        });
        pSCenter24.add(bEInsert1);

        jPanel23.setBackground(new java.awt.Color(35, 40, 50));
        jPanel23.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        pSCenter24.add(jPanel23);

        aUValue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        aUValue.setText("0");
        aUValue.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Value", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N
        aUValue.setMinimumSize(new java.awt.Dimension(0, 0));
        aUValue.setOpaque(true);
        aUValue.setPreferredSize(new java.awt.Dimension(50, 50));
        aUValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aUValueActionPerformed(evt);
            }
        });
        pSCenter24.add(aUValue);

        pAUpdate.add(pSCenter24, java.awt.BorderLayout.CENTER);

        pSBot16.setBackground(new java.awt.Color(35, 40, 50));
        pSBot16.setPreferredSize(new java.awt.Dimension(0, 100));
        pSBot16.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));

        bUpdate.setBackground(new java.awt.Color(24, 25, 28));
        bUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/submit_icon.png"))); // NOI18N
        bUpdate.setBorder(null);
        bUpdate.setBorderPainted(false);
        bUpdate.setContentAreaFilled(false);
        bUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bUpdate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bUpdate.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_submit_icon.png"))); // NOI18N
        bUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdateActionPerformed(evt);
            }
        });
        pSBot16.add(bUpdate);

        pAUpdate.add(pSBot16, java.awt.BorderLayout.SOUTH);

        pAInput.add(pAUpdate, "AUpdateMenu");

        pSCenter20.add(pAInput);

        pAOutput.setBackground(new java.awt.Color(35, 40, 50));
        pAOutput.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "OUTPUT", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Russo One", 2, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        pAOutput.setForeground(new java.awt.Color(255, 255, 255));
        pAOutput.setPreferredSize(new java.awt.Dimension(550, 600));
        pAOutput.setLayout(new java.awt.CardLayout());

        pAOIntro.setBackground(new java.awt.Color(35, 40, 50));
        pAOIntro.setLayout(new java.awt.BorderLayout());

        jScrollPane12.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane12.setBorder(null);
        jScrollPane12.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane12.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane12.setHorizontalScrollBar(null);
        jScrollPane12.setOpaque(false);
        jScrollPane12.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane12.setRequestFocusEnabled(false);
        jScrollPane12.setWheelScrollingEnabled(false);

        jTextArea12.setEditable(false);
        jTextArea12.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea12.setColumns(20);
        jTextArea12.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        jTextArea12.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea12.setLineWrap(true);
        jTextArea12.setText("Hey there, curious clicker! Want to know more about the buttons on this screen? Well, it's as easy as a single click or tap! Just pick a button on the left that piques your interest and voila! A magical description will appear before your very eyes! It's like having a button whisperer in your pocket! This nifty feature is here to help you navigate and understand this interface, so don't be shy, give those buttons a click and unlock their secrets!");
        jTextArea12.setWrapStyleWord(true);
        jTextArea12.setAutoscrolls(false);
        jTextArea12.setBorder(null);
        jTextArea12.setFocusable(false);
        jTextArea12.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane12.setViewportView(jTextArea12);

        pAOIntro.add(jScrollPane12, java.awt.BorderLayout.CENTER);

        pAOutput.add(pAOIntro, "AOIntro");

        pAOLoading.setBackground(new java.awt.Color(35, 40, 50));
        pAOLoading.setLayout(new java.awt.BorderLayout());

        bArrays2.setBackground(new java.awt.Color(35, 40, 50));
        bArrays2.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bArrays2.setForeground(new java.awt.Color(255, 255, 255));
        bArrays2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_loading_gif.gif"))); // NOI18N
        bArrays2.setText("LOADING...");
        bArrays2.setBorder(null);
        bArrays2.setBorderPainted(false);
        bArrays2.setContentAreaFilled(false);
        bArrays2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bArrays2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bArrays2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bArrays2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bArrays2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bArrays2MouseExited(evt);
            }
        });
        bArrays2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bArrays2ActionPerformed(evt);
            }
        });
        pAOLoading.add(bArrays2, java.awt.BorderLayout.CENTER);

        pAOutput.add(pAOLoading, "AOLoading");

        pATraverseIntro.setBackground(new java.awt.Color(35, 40, 50));
        pATraverseIntro.setLayout(new java.awt.BorderLayout());

        jScrollPane11.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane11.setBorder(null);
        jScrollPane11.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane11.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane11.setHorizontalScrollBar(null);
        jScrollPane11.setOpaque(false);
        jScrollPane11.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane11.setRequestFocusEnabled(false);
        jScrollPane11.setWheelScrollingEnabled(false);

        jTextArea11.setEditable(false);
        jTextArea11.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea11.setColumns(20);
        jTextArea11.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        jTextArea11.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea11.setLineWrap(true);
        jTextArea11.setText("A traverse operation in an array involves iterating through each element of the array and performing a particular action or operation on each element. This can be done using a loop, such as a for loop or while loop, that starts at the first element and continues until the last element is reached. Traversing an array is a common operation in many programming languages and is useful for performing calculations, searching for specific values, or modifying the elements of the array.");
        jTextArea11.setWrapStyleWord(true);
        jTextArea11.setAutoscrolls(false);
        jTextArea11.setBorder(null);
        jTextArea11.setFocusable(false);
        jTextArea11.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane11.setViewportView(jTextArea11);

        pATraverseIntro.add(jScrollPane11, java.awt.BorderLayout.CENTER);

        pAOutput.add(pATraverseIntro, "ATraverseIntro");

        pATraverseElements.setBackground(new java.awt.Color(35, 40, 50));
        pATraverseElements.setFocusable(false);
        pATraverseElements.setLayout(new java.awt.BorderLayout());

        jScrollPane13.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane13.setBorder(null);
        jScrollPane13.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane13.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane13.setHorizontalScrollBar(null);
        jScrollPane13.setOpaque(false);
        jScrollPane13.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane13.setRequestFocusEnabled(false);
        jScrollPane13.setWheelScrollingEnabled(false);

        jTextArea13.setEditable(false);
        jTextArea13.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea13.setColumns(20);
        jTextArea13.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        jTextArea13.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea13.setLineWrap(true);
        jTextArea13.setText("Alrighty then, let's get ready to rumble! We're gonna need your brain power for this one! Get your fingers ready to tap-tap-tap on those keyboard keys. We need you to enter some integer elements on the indexes, and don't worry if you mess up, we won't judge (too much). Once you've got all your numbers lined up, hit that next button like you're a pro-gamer and watch the magic happen! The output will be revealed, and you'll feel like a wizard who just cast a spell. So what are you waiting for? Let's get cracking!");
        jTextArea13.setWrapStyleWord(true);
        jTextArea13.setAutoscrolls(false);
        jTextArea13.setBorder(null);
        jTextArea13.setFocusable(false);
        jTextArea13.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane13.setViewportView(jTextArea13);

        pATraverseElements.add(jScrollPane13, java.awt.BorderLayout.CENTER);

        pAOutput.add(pATraverseElements, "ATraverseElements");

        pATraverseOutput.setBackground(new java.awt.Color(35, 40, 50));
        pATraverseOutput.setFocusable(false);
        pATraverseOutput.setLayout(new java.awt.BorderLayout());

        jScrollPane14.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane14.setBorder(null);
        jScrollPane14.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane14.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane14.setHorizontalScrollBar(null);
        jScrollPane14.setOpaque(false);
        jScrollPane14.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane14.setRequestFocusEnabled(false);
        jScrollPane14.setWheelScrollingEnabled(false);

        traverseOutputArea.setEditable(false);
        traverseOutputArea.setBackground(new java.awt.Color(35, 40, 50));
        traverseOutputArea.setColumns(20);
        traverseOutputArea.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        traverseOutputArea.setForeground(new java.awt.Color(255, 255, 255));
        traverseOutputArea.setLineWrap(true);
        traverseOutputArea.setText("\n");
        traverseOutputArea.setWrapStyleWord(true);
        traverseOutputArea.setAutoscrolls(false);
        traverseOutputArea.setBorder(null);
        traverseOutputArea.setFocusable(false);
        traverseOutputArea.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane14.setViewportView(traverseOutputArea);

        pATraverseOutput.add(jScrollPane14, java.awt.BorderLayout.CENTER);

        pAOutput.add(pATraverseOutput, "ATraverseOutput");

        pAInsertionIntro.setBackground(new java.awt.Color(35, 40, 50));
        pAInsertionIntro.setFocusable(false);
        pAInsertionIntro.setLayout(new java.awt.BorderLayout());

        jScrollPane15.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane15.setBorder(null);
        jScrollPane15.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane15.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane15.setHorizontalScrollBar(null);
        jScrollPane15.setOpaque(false);
        jScrollPane15.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane15.setRequestFocusEnabled(false);
        jScrollPane15.setWheelScrollingEnabled(false);

        jTextArea14.setEditable(false);
        jTextArea14.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea14.setColumns(20);
        jTextArea14.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        jTextArea14.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea14.setLineWrap(true);
        jTextArea14.setText("An insertion operation in an array involves adding a new element to the existing array. The element can be added at the beginning, middle, or end of the array. Inserting an element in an array requires shifting all the elements from the insertion point to the right by one index to make space for the new element. This shifting process can be time-consuming, especially for large arrays.");
        jTextArea14.setWrapStyleWord(true);
        jTextArea14.setAutoscrolls(false);
        jTextArea14.setBorder(null);
        jTextArea14.setFocusable(false);
        jTextArea14.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane15.setViewportView(jTextArea14);

        pAInsertionIntro.add(jScrollPane15, java.awt.BorderLayout.CENTER);

        pAOutput.add(pAInsertionIntro, "AInsertionIntro");

        pAInsertionElements.setBackground(new java.awt.Color(35, 40, 50));
        pAInsertionElements.setFocusable(false);
        pAInsertionElements.setLayout(new java.awt.BorderLayout());

        jScrollPane16.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane16.setBorder(null);
        jScrollPane16.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane16.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane16.setHorizontalScrollBar(null);
        jScrollPane16.setOpaque(false);
        jScrollPane16.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane16.setRequestFocusEnabled(false);
        jScrollPane16.setWheelScrollingEnabled(false);

        jTextArea15.setEditable(false);
        jTextArea15.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea15.setColumns(20);
        jTextArea15.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        jTextArea15.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea15.setLineWrap(true);
        jTextArea15.setText("Hey there! Are you ready to add some magic to your array? All you need to do is enter your integer elements on the indexes where you want to insert them. It's like planting seeds in a garden - you get to choose where to plant each flower! Once you're happy with your array, just hit that 'next' button to see the results. You'll be amazed at how your array will grow and flourish right before your very eyes. So what are you waiting for? Let's get planting and see what beautiful array we can grow!");
        jTextArea15.setWrapStyleWord(true);
        jTextArea15.setAutoscrolls(false);
        jTextArea15.setBorder(null);
        jTextArea15.setFocusable(false);
        jTextArea15.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane16.setViewportView(jTextArea15);

        pAInsertionElements.add(jScrollPane16, java.awt.BorderLayout.CENTER);

        pAOutput.add(pAInsertionElements, "AInsertionElements");

        pAInsertionOutput.setBackground(new java.awt.Color(35, 40, 50));
        pAInsertionOutput.setFocusable(false);
        pAInsertionOutput.setLayout(new java.awt.BorderLayout());

        jScrollPane17.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane17.setBorder(null);
        jScrollPane17.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane17.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane17.setHorizontalScrollBar(null);
        jScrollPane17.setOpaque(false);
        jScrollPane17.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane17.setRequestFocusEnabled(false);
        jScrollPane17.setWheelScrollingEnabled(false);

        insertionOutputArea.setEditable(false);
        insertionOutputArea.setBackground(new java.awt.Color(35, 40, 50));
        insertionOutputArea.setColumns(20);
        insertionOutputArea.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        insertionOutputArea.setForeground(new java.awt.Color(255, 255, 255));
        insertionOutputArea.setLineWrap(true);
        insertionOutputArea.setWrapStyleWord(true);
        insertionOutputArea.setAutoscrolls(false);
        insertionOutputArea.setBorder(null);
        insertionOutputArea.setFocusable(false);
        insertionOutputArea.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane17.setViewportView(insertionOutputArea);

        pAInsertionOutput.add(jScrollPane17, java.awt.BorderLayout.CENTER);

        pAOutput.add(pAInsertionOutput, "AInsertionOutput");

        pADeletionIntro.setBackground(new java.awt.Color(35, 40, 50));
        pADeletionIntro.setFocusable(false);
        pADeletionIntro.setLayout(new java.awt.BorderLayout());

        jScrollPane18.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane18.setBorder(null);
        jScrollPane18.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane18.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane18.setHorizontalScrollBar(null);
        jScrollPane18.setOpaque(false);
        jScrollPane18.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane18.setRequestFocusEnabled(false);
        jScrollPane18.setWheelScrollingEnabled(false);

        jTextArea16.setEditable(false);
        jTextArea16.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea16.setColumns(20);
        jTextArea16.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        jTextArea16.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea16.setLineWrap(true);
        jTextArea16.setText("Deletion in array refers to the process of removing an element or a group of elements from an array data structure. Arrays are a fundamental data structure in computer programming and are used to store a collection of elements of the same data type in contiguous memory locations. There are several methods for deleting elements from an array, including shifting elements to fill the gap left by the deleted element or using a marker or flag value to indicate that an element has been deleted. The deletion operation in an array can be performed using various programming languages and can have different time and space complexities depending on the approach used. Effective deletion operations in arrays require careful consideration of the location of the element to be deleted and the impact of the deletion on the remaining elements in the array.");
        jTextArea16.setWrapStyleWord(true);
        jTextArea16.setAutoscrolls(false);
        jTextArea16.setBorder(null);
        jTextArea16.setFocusable(false);
        jTextArea16.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane18.setViewportView(jTextArea16);

        pADeletionIntro.add(jScrollPane18, java.awt.BorderLayout.CENTER);

        pAOutput.add(pADeletionIntro, "ADeletionIntro");

        pADeletionElements.setBackground(new java.awt.Color(35, 40, 50));
        pADeletionElements.setFocusable(false);
        pADeletionElements.setLayout(new java.awt.BorderLayout());

        jScrollPane19.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane19.setBorder(null);
        jScrollPane19.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane19.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane19.setHorizontalScrollBar(null);
        jScrollPane19.setOpaque(false);
        jScrollPane19.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane19.setRequestFocusEnabled(false);
        jScrollPane19.setWheelScrollingEnabled(false);

        jTextArea17.setEditable(false);
        jTextArea17.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea17.setColumns(20);
        jTextArea17.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        jTextArea17.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea17.setLineWrap(true);
        jTextArea17.setText("Hey there, are you feeling mischievous today? Well, if you want to delete an index in an array, just move that slide with a swish! That's right, it's like playing a game of 'whack-a-mole', but instead of hitting a mole, you're removing an element from the array. So go ahead, grab that slide, and with a flick of your wrist, wave goodbye to that index. Just be careful not to delete the wrong one, or you might end up with some unexpected bugs in your code. Happy deleting!\n");
        jTextArea17.setWrapStyleWord(true);
        jTextArea17.setAutoscrolls(false);
        jTextArea17.setBorder(null);
        jTextArea17.setFocusable(false);
        jTextArea17.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane19.setViewportView(jTextArea17);

        pADeletionElements.add(jScrollPane19, java.awt.BorderLayout.CENTER);

        pAOutput.add(pADeletionElements, "ADeletionElements");

        pADeletionOutput.setBackground(new java.awt.Color(35, 40, 50));
        pADeletionOutput.setFocusable(false);
        pADeletionOutput.setLayout(new java.awt.BorderLayout());

        jScrollPane20.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane20.setBorder(null);
        jScrollPane20.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane20.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane20.setHorizontalScrollBar(null);
        jScrollPane20.setOpaque(false);
        jScrollPane20.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane20.setRequestFocusEnabled(false);
        jScrollPane20.setWheelScrollingEnabled(false);

        deletionOutputArea.setEditable(false);
        deletionOutputArea.setBackground(new java.awt.Color(35, 40, 50));
        deletionOutputArea.setColumns(20);
        deletionOutputArea.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        deletionOutputArea.setForeground(new java.awt.Color(255, 255, 255));
        deletionOutputArea.setLineWrap(true);
        deletionOutputArea.setWrapStyleWord(true);
        deletionOutputArea.setAutoscrolls(false);
        deletionOutputArea.setBorder(null);
        deletionOutputArea.setFocusable(false);
        deletionOutputArea.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane20.setViewportView(deletionOutputArea);

        pADeletionOutput.add(jScrollPane20, java.awt.BorderLayout.CENTER);

        pAOutput.add(pADeletionOutput, "ADeletionOutput");

        pASearchIntro.setBackground(new java.awt.Color(35, 40, 50));
        pASearchIntro.setFocusable(false);
        pASearchIntro.setLayout(new java.awt.BorderLayout());

        jScrollPane21.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane21.setBorder(null);
        jScrollPane21.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane21.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane21.setHorizontalScrollBar(null);
        jScrollPane21.setOpaque(false);
        jScrollPane21.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane21.setRequestFocusEnabled(false);
        jScrollPane21.setWheelScrollingEnabled(false);

        jTextArea18.setEditable(false);
        jTextArea18.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea18.setColumns(20);
        jTextArea18.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        jTextArea18.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea18.setLineWrap(true);
        jTextArea18.setText("Searching in an array is the process of finding a specific value within a collection of elements stored in an array data structure. The search operation involves examining each element in the array, one by one, until the desired value is found or until all elements have been checked.\n\nThere are several algorithms that can be used to search an array, including linear search, binary search, and interpolation search, among others. The choice of algorithm depends on various factors, such as the size of the array, the distribution of values, and the performance requirements.\n");
        jTextArea18.setWrapStyleWord(true);
        jTextArea18.setAutoscrolls(false);
        jTextArea18.setBorder(null);
        jTextArea18.setFocusable(false);
        jTextArea18.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane21.setViewportView(jTextArea18);

        pASearchIntro.add(jScrollPane21, java.awt.BorderLayout.CENTER);

        pAOutput.add(pASearchIntro, "ASearchIntro");

        pASearchElements.setBackground(new java.awt.Color(35, 40, 50));
        pASearchElements.setFocusable(false);
        pASearchElements.setLayout(new java.awt.BorderLayout());

        jScrollPane22.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane22.setBorder(null);
        jScrollPane22.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane22.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane22.setHorizontalScrollBar(null);
        jScrollPane22.setOpaque(false);
        jScrollPane22.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane22.setRequestFocusEnabled(false);
        jScrollPane22.setWheelScrollingEnabled(false);

        jTextArea19.setEditable(false);
        jTextArea19.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea19.setColumns(20);
        jTextArea19.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        jTextArea19.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea19.setLineWrap(true);
        jTextArea19.setText("Hey there, are you feeling mischievous today? Well, if you want to delete an index in an array, just move that slide with a swish! That's right, it's like playing a game of 'whack-a-mole', but instead of hitting a mole, you're removing an element from the array. So go ahead, grab that slide, and with a flick of your wrist, wave goodbye to that index. Just be careful not to delete the wrong one, or you might end up with some unexpected bugs in your code. Happy deleting!\n");
        jTextArea19.setWrapStyleWord(true);
        jTextArea19.setAutoscrolls(false);
        jTextArea19.setBorder(null);
        jTextArea19.setFocusable(false);
        jTextArea19.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane22.setViewportView(jTextArea19);

        pASearchElements.add(jScrollPane22, java.awt.BorderLayout.CENTER);

        pAOutput.add(pASearchElements, "ASearchElements");

        pASearchOutput.setBackground(new java.awt.Color(35, 40, 50));
        pASearchOutput.setFocusable(false);
        pASearchOutput.setLayout(new java.awt.BorderLayout());

        jScrollPane23.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane23.setBorder(null);
        jScrollPane23.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane23.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane23.setHorizontalScrollBar(null);
        jScrollPane23.setOpaque(false);
        jScrollPane23.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane23.setRequestFocusEnabled(false);
        jScrollPane23.setWheelScrollingEnabled(false);

        searchOutputArea.setEditable(false);
        searchOutputArea.setBackground(new java.awt.Color(35, 40, 50));
        searchOutputArea.setColumns(20);
        searchOutputArea.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        searchOutputArea.setForeground(new java.awt.Color(255, 255, 255));
        searchOutputArea.setLineWrap(true);
        searchOutputArea.setWrapStyleWord(true);
        searchOutputArea.setAutoscrolls(false);
        searchOutputArea.setBorder(null);
        searchOutputArea.setFocusable(false);
        searchOutputArea.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane23.setViewportView(searchOutputArea);

        pASearchOutput.add(jScrollPane23, java.awt.BorderLayout.CENTER);

        pAOutput.add(pASearchOutput, "ASearchOutput");

        pAUpdateIntro.setBackground(new java.awt.Color(35, 40, 50));
        pAUpdateIntro.setFocusable(false);
        pAUpdateIntro.setLayout(new java.awt.BorderLayout());

        jScrollPane24.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane24.setBorder(null);
        jScrollPane24.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane24.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane24.setHorizontalScrollBar(null);
        jScrollPane24.setOpaque(false);
        jScrollPane24.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane24.setRequestFocusEnabled(false);
        jScrollPane24.setWheelScrollingEnabled(false);

        jTextArea20.setEditable(false);
        jTextArea20.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea20.setColumns(20);
        jTextArea20.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        jTextArea20.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea20.setLineWrap(true);
        jTextArea20.setText("Update operation is used to modify the value of an existing element in an array at a particular index. When an update operation is performed on an array, the value of the specified element is changed to a new value. This operation modifies the state of the array, and any subsequent operations on the array will reflect this change.\n\nThe update operation is useful in situations where you need to modify the values of elements in an array. For example, you may want to change the value of an element in an array based on user input or as part of an algorithmic computation. With the update operation, you can modify the contents of an array efficiently and without having to create a new array.\n\nIt is important to note that in some programming languages or situations, arrays may be immutable, meaning that once an array is created, its contents cannot be modified. In such cases, to simulate the update operation, a new array may need to be created with the updated values.");
        jTextArea20.setWrapStyleWord(true);
        jTextArea20.setAutoscrolls(false);
        jTextArea20.setBorder(null);
        jTextArea20.setFocusable(false);
        jTextArea20.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane24.setViewportView(jTextArea20);

        pAUpdateIntro.add(jScrollPane24, java.awt.BorderLayout.CENTER);

        pAOutput.add(pAUpdateIntro, "AUpdateIntro");

        pAUpdateElements.setBackground(new java.awt.Color(35, 40, 50));
        pAUpdateElements.setFocusable(false);
        pAUpdateElements.setLayout(new java.awt.BorderLayout());

        jScrollPane25.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane25.setBorder(null);
        jScrollPane25.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane25.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane25.setHorizontalScrollBar(null);
        jScrollPane25.setOpaque(false);
        jScrollPane25.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane25.setRequestFocusEnabled(false);
        jScrollPane25.setWheelScrollingEnabled(false);

        jTextArea21.setEditable(false);
        jTextArea21.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea21.setColumns(20);
        jTextArea21.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        jTextArea21.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea21.setLineWrap(true);
        jTextArea21.setText("Hey there, dear user! Are you ready to update your array and give it a fresh new look? Well, get ready to slide and glide that slider like a DJ scratching on a turntable! Move that slider left and right until you find the perfect index you want to update. Once you've found the lucky number, it's time to enter the value field and unleash your creative genius! Type in the value you want to update that index with and let your fingers do the talking. It's like painting a masterpiece, but instead of a canvas, you've got an array. So, let's get those fingers typing and update that array like a boss!\n");
        jTextArea21.setWrapStyleWord(true);
        jTextArea21.setAutoscrolls(false);
        jTextArea21.setBorder(null);
        jTextArea21.setFocusable(false);
        jTextArea21.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane25.setViewportView(jTextArea21);

        pAUpdateElements.add(jScrollPane25, java.awt.BorderLayout.CENTER);

        pAOutput.add(pAUpdateElements, "AUpdateElements");

        pAUpdateOutput.setBackground(new java.awt.Color(35, 40, 50));
        pAUpdateOutput.setFocusable(false);
        pAUpdateOutput.setLayout(new java.awt.BorderLayout());

        jScrollPane26.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane26.setBorder(null);
        jScrollPane26.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane26.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane26.setHorizontalScrollBar(null);
        jScrollPane26.setOpaque(false);
        jScrollPane26.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane26.setRequestFocusEnabled(false);
        jScrollPane26.setWheelScrollingEnabled(false);

        updateOutputArea.setEditable(false);
        updateOutputArea.setBackground(new java.awt.Color(35, 40, 50));
        updateOutputArea.setColumns(20);
        updateOutputArea.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        updateOutputArea.setForeground(new java.awt.Color(255, 255, 255));
        updateOutputArea.setLineWrap(true);
        updateOutputArea.setWrapStyleWord(true);
        updateOutputArea.setAutoscrolls(false);
        updateOutputArea.setBorder(null);
        updateOutputArea.setFocusable(false);
        updateOutputArea.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane26.setViewportView(updateOutputArea);

        pAUpdateOutput.add(jScrollPane26, java.awt.BorderLayout.CENTER);

        pAOutput.add(pAUpdateOutput, "AUpdateOutput");

        pSCenter20.add(pAOutput);

        pArrayOperations.add(pSCenter20, java.awt.BorderLayout.CENTER);

        pArrays.add(pArrayOperations, "ArrayOperations");

        pContainer.add(pArrays, java.awt.BorderLayout.CENTER);

        getContentPane().add(pContainer, java.awt.BorderLayout.PAGE_START);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBackActionPerformed
        // Show the loading panel first
        CardLayout cardLayout = (CardLayout) pArrays.getLayout();
        cardLayout.show(pArrays, "Loading");

        // Replace "Home" with the actual panel name in the Home JFrame
        Home homeFrame = new Home();

        // Delay the visibility of the Home JFrame
        Timer showTimer = new Timer(500, (ActionEvent e) -> {
            homeFrame.setVisible(true);
        });
        showTimer.setRepeats(false);
        showTimer.start();

        // Dispose the current frame after a delay
        Timer disposeTimer = new Timer(600, (ActionEvent e) -> {
            dispose();
        });
        disposeTimer.setRepeats(false);
        disposeTimer.start();
    }//GEN-LAST:event_bBackActionPerformed

    private void bArrayNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bArrayNextActionPerformed
        CardLayout cardLayout = (CardLayout) pArrays.getLayout();
        cardLayout.show(pArrays, "Loading");
        Timer timer = new Timer(500, (ActionEvent e) -> {
            cardLayout.show(pArrays, "ArrayOperations");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bArrayNextActionPerformed

    private void bBack9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBack9ActionPerformed
        CardLayout cardLayout = (CardLayout) pArrays.getLayout();
        cardLayout.show(pArrays, "Loading");
        Timer timer = new Timer(500, (ActionEvent e) -> {
            cardLayout.show(pArrays, "ArraysIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bBack9ActionPerformed

    private void bArrayTraverseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrayTraverseMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bArrayTraverseMouseEntered

    private void bArrayTraverseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrayTraverseMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bArrayTraverseMouseExited

    private void bArrayTraverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bArrayTraverseActionPerformed
        // Get a reference to the CardLayout of the pInput panel
        CardLayout inputLayout = (CardLayout) pAInput.getLayout();

        // Show the "ILoading" card in the pInput panel
        inputLayout.show(pAInput, "AILoading");

        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pAOutput.getLayout();

        // Load the input values from a file
        arrayInputValuesFromFile = FileHandler.loadArrayInputValues();
        for (int i = 0; i < traverseFields.length; i++) {
            traverseFields[i].setText(Integer.toString(arrayInputValuesFromFile[i]));
        }

        // Show the "OLoading" card in the pOutput panel
        outputLayout.show(pAOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            inputLayout.show(pAInput, "ATraverseMenu");
            outputLayout.show(pAOutput, "ATraverseIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bArrayTraverseActionPerformed

    private void bArrayInsertionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrayInsertionMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bArrayInsertionMouseEntered

    private void bArrayInsertionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrayInsertionMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bArrayInsertionMouseExited

    private void bArrayInsertionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bArrayInsertionActionPerformed
        // Get a reference to the CardLayout of the pInput panel
        CardLayout inputLayout = (CardLayout) pAInput.getLayout();

        // Show the "ILoading" card in the pInput panel
        inputLayout.show(pAInput, "AILoading");

        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pAOutput.getLayout();

        // Load the input values from a file
        arrayInputValuesFromFile = FileHandler.loadArrayInputValues();
        for (int i = 0; i < insertFields.length; i++) {
            insertFields[i].setText(Integer.toString(arrayInputValuesFromFile[i]));
        }

        // Show the "OLoading" card in the pOutput panel
        outputLayout.show(pAOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            inputLayout.show(pAInput, "AInsertionMenu");
            outputLayout.show(pAOutput, "AInsertionIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bArrayInsertionActionPerformed

    private void bArrayDeletionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrayDeletionMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bArrayDeletionMouseEntered

    private void bArrayDeletionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrayDeletionMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bArrayDeletionMouseExited

    private void bArrayDeletionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bArrayDeletionActionPerformed
        // Get a reference to the CardLayout of the pInput panel
        CardLayout inputLayout = (CardLayout) pAInput.getLayout();

        // Show the "ILoading" card in the pInput panel
        inputLayout.show(pAInput, "AILoading");

        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pAOutput.getLayout();

        // Load the input values from a file
        arrayInputValuesFromFile = FileHandler.loadArrayInputValues();
        for (int i = 0; i < deleteFields.length; i++) {
            deleteFields[i].setText(Integer.toString(arrayInputValuesFromFile[i]));
        }

        // Show the "OLoading" card in the pOutput panel
        outputLayout.show(pAOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            inputLayout.show(pAInput, "ADeletionMenu");
            outputLayout.show(pAOutput, "ADeletionIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bArrayDeletionActionPerformed

    private void bArraySearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArraySearchMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bArraySearchMouseEntered

    private void bArraySearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArraySearchMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bArraySearchMouseExited

    private void bArraySearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bArraySearchActionPerformed
        // Get a reference to the CardLayout of the pInput panel
        CardLayout inputLayout = (CardLayout) pAInput.getLayout();

        // Show the "ILoading" card in the pInput panel
        inputLayout.show(pAInput, "AILoading");

        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pAOutput.getLayout();

        // Load the input values from a file
        arrayInputValuesFromFile = FileHandler.loadArrayInputValues();
        for (int i = 0; i < searchFields.length; i++) {
            searchFields[i].setText(Integer.toString(arrayInputValuesFromFile[i]));
        }

        // Show the "OLoading" card in the pOutput panel
        outputLayout.show(pAOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            inputLayout.show(pAInput, "ASearchMenu");
            outputLayout.show(pAOutput, "ASearchIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bArraySearchActionPerformed

    private void bArrayUpdateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrayUpdateMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bArrayUpdateMouseEntered

    private void bArrayUpdateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrayUpdateMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bArrayUpdateMouseExited

    private void bArrayUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bArrayUpdateActionPerformed
        // Get a reference to the CardLayout of the pInput panel
        CardLayout inputLayout = (CardLayout) pAInput.getLayout();

        // Show the "ILoading" card in the pInput panel
        inputLayout.show(pAInput, "AILoading");

        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pAOutput.getLayout();

        // Load the input values from a file
        arrayInputValuesFromFile = FileHandler.loadArrayInputValues();
        for (int i = 0; i < updateFields.length; i++) {
            updateFields[i].setText(Integer.toString(arrayInputValuesFromFile[i]));
        }

        // Show the "OLoading" card in the pOutput panel
        outputLayout.show(pAOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            inputLayout.show(pAInput, "AUpdateMenu");
            outputLayout.show(pAOutput, "AUpdateIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bArrayUpdateActionPerformed

    private void bArrays3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays3MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bArrays3MouseEntered

    private void bArrays3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays3MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bArrays3MouseExited

    private void bArrays3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bArrays3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bArrays3ActionPerformed

    private void bTraverseBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTraverseBackActionPerformed
        switchArrayLayouts(pAInput, pAOutput);
    }//GEN-LAST:event_bTraverseBackActionPerformed

    private void bTraverseTitleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bTraverseTitleMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bTraverseTitleMouseEntered

    private void bTraverseTitleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bTraverseTitleMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bTraverseTitleMouseExited

    private void bTraverseTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTraverseTitleActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pAOutput.getLayout();
        outputLayout.show(pAOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pAOutput, "ATraverseIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bTraverseTitleActionPerformed

    private void bElementsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElementsMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bElementsMouseEntered

    private void bElementsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElementsMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bElementsMouseExited

    private void bElementsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bElementsActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pAOutput.getLayout();
        outputLayout.show(pAOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pAOutput, "ATraverseElements");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bElementsActionPerformed

    private void aTElement0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aTElement0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aTElement0ActionPerformed

    private void aTElement5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aTElement5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aTElement5ActionPerformed

    private void bTraverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTraverseActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pAOutput.getLayout();
        outputLayout.show(pAOutput, "AOLoading");

        // Get the input values from the text fields
        int[] numbers = new int[6];
        try {
            numbers[0] = Integer.parseInt(aTElement0.getText());
            numbers[1] = Integer.parseInt(aTElement1.getText());
            numbers[2] = Integer.parseInt(aTElement2.getText());
            numbers[3] = Integer.parseInt(aTElement3.getText());
            numbers[4] = Integer.parseInt(aTElement4.getText());
            numbers[5] = Integer.parseInt(aTElement5.getText());
        } catch (NumberFormatException e) {
            // Handle invalid input
            JOptionPane.showMessageDialog(this, "Invalid input in one of the fields.");
            return;
        }

        // Save the input values to a file
        FileHandler.saveArrayInputValues(numbers);

        // Traverse the array using the Operations class and display the results in the output area
        DataHandler ops = new DataHandler(numbers, null, null);
        String result = ops.traverse();
        traverseOutputArea.setText(result);

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pAOutput, "ATraverseOutput");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bTraverseActionPerformed

    private void bInsertBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInsertBackActionPerformed
        switchArrayLayouts(pAInput, pAOutput);
    }//GEN-LAST:event_bInsertBackActionPerformed

    private void bInsertionTitleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bInsertionTitleMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bInsertionTitleMouseEntered

    private void bInsertionTitleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bInsertionTitleMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bInsertionTitleMouseExited

    private void bInsertionTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInsertionTitleActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pAOutput.getLayout();
        outputLayout.show(pAOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pAOutput, "AInsertionIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bInsertionTitleActionPerformed

    private void bElements1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements1MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bElements1MouseEntered

    private void bElements1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements1MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bElements1MouseExited

    private void bElements1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bElements1ActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pAOutput.getLayout();
        outputLayout.show(pAOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pAOutput, "ATraverseElements");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bElements1ActionPerformed

    private void aIElement0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aIElement0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aIElement0ActionPerformed

    private void aIElement5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aIElement5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aIElement5ActionPerformed

    private void bEInsertMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bEInsertMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bEInsertMouseEntered

    private void bEInsertMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bEInsertMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bEInsertMouseExited

    private void bEInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEInsertActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pAOutput.getLayout();
        outputLayout.show(pAOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pAOutput, "AInsertionElements");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bEInsertActionPerformed

    private void aIValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aIValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aIValueActionPerformed

    private void bInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInsertActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pAOutput.getLayout();
        outputLayout.show(pAOutput, "AOLoading");

        // Get the input values from the text fields
        int[] numbers = new int[6];
        try {
            numbers[0] = Integer.parseInt(aIElement0.getText());
            numbers[1] = Integer.parseInt(aIElement1.getText());
            numbers[2] = Integer.parseInt(aIElement2.getText());
            numbers[3] = Integer.parseInt(aIElement3.getText());
            numbers[4] = Integer.parseInt(aIElement4.getText());
            numbers[5] = Integer.parseInt(aIElement5.getText());
        } catch (NumberFormatException e) {
            // Handle invalid input
            JOptionPane.showMessageDialog(this, "Invalid input in one of the fields.");
            return;
        }

        int index = InsertIndex.getValue();
        int value = Integer.parseInt(aIValue.getText());

        // Save the input values to a file
        FileHandler.saveArrayInputValues(numbers);

        // Insert the value using the Operations class and display the results in the output area
        DataHandler ops = new DataHandler(numbers, null, null);
        String result = ops.insertion(index, value);
        insertionOutputArea.setText(result);

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pAOutput, "AInsertionOutput");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bInsertActionPerformed

    private void bDeleteBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteBackActionPerformed
        switchArrayLayouts(pAInput, pAOutput);
    }//GEN-LAST:event_bDeleteBackActionPerformed

    private void bDeletionTitleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bDeletionTitleMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bDeletionTitleMouseEntered

    private void bDeletionTitleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bDeletionTitleMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bDeletionTitleMouseExited

    private void bDeletionTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeletionTitleActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pAOutput.getLayout();
        outputLayout.show(pAOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pAOutput, "ADeletionIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bDeletionTitleActionPerformed

    private void bElements2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements2MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bElements2MouseEntered

    private void bElements2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements2MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bElements2MouseExited

    private void bElements2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bElements2ActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pAOutput.getLayout();
        outputLayout.show(pAOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pAOutput, "ADeletionElements");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bElements2ActionPerformed

    private void aDElement0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aDElement0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aDElement0ActionPerformed

    private void aDElement5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aDElement5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aDElement5ActionPerformed

    private void bElements3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements3MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bElements3MouseEntered

    private void bElements3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements3MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bElements3MouseExited

    private void bElements3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bElements3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bElements3ActionPerformed

    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pAOutput.getLayout();
        outputLayout.show(pAOutput, "AOLoading");

        // Get the input values from the text fields
        int[] numbers = new int[6];
        try {
            numbers[0] = Integer.parseInt(aDElement0.getText());
            numbers[1] = Integer.parseInt(aDElement1.getText());
            numbers[2] = Integer.parseInt(aDElement2.getText());
            numbers[3] = Integer.parseInt(aDElement3.getText());
            numbers[4] = Integer.parseInt(aDElement4.getText());
            numbers[5] = Integer.parseInt(aDElement5.getText());
        } catch (NumberFormatException e) {
            // Handle invalid input
            JOptionPane.showMessageDialog(this, "Invalid input in one of the fields.");
            return;
        }

        int index = DeleteIndex.getValue();

        // Save the input values to a file
        FileHandler.saveArrayInputValues(numbers);

        // Delete the element using the Operations class and display the results in the output area
        DataHandler ops = new DataHandler(numbers, null, null);
        String result = ops.deletion(index);
        deletionOutputArea.setText(result);

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pAOutput, "ADeletionOutput");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bDeleteActionPerformed

    private void bSearchBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSearchBackActionPerformed
        switchArrayLayouts(pAInput, pAOutput);
    }//GEN-LAST:event_bSearchBackActionPerformed

    private void bSearchTitleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSearchTitleMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bSearchTitleMouseEntered

    private void bSearchTitleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSearchTitleMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bSearchTitleMouseExited

    private void bSearchTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSearchTitleActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pAOutput.getLayout();
        outputLayout.show(pAOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pAOutput, "ASearchIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bSearchTitleActionPerformed

    private void bElements4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements4MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bElements4MouseEntered

    private void bElements4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements4MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bElements4MouseExited

    private void bElements4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bElements4ActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pAOutput.getLayout();
        outputLayout.show(pAOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pAOutput, "ASearchElements");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bElements4ActionPerformed

    private void aSElement0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aSElement0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aSElement0ActionPerformed

    private void aSElement5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aSElement5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aSElement5ActionPerformed

    private void bElements5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements5MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bElements5MouseEntered

    private void bElements5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements5MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bElements5MouseExited

    private void bElements5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bElements5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bElements5ActionPerformed

    private void aSValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aSValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aSValueActionPerformed

    private void bSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSearchActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pAOutput.getLayout();
        outputLayout.show(pAOutput, "AOLoading");

        // Get the input values from the text fields
        int[] numbers = new int[6];
        try {
            numbers[0] = Integer.parseInt(aSElement0.getText());
            numbers[1] = Integer.parseInt(aSElement1.getText());
            numbers[2] = Integer.parseInt(aSElement2.getText());
            numbers[3] = Integer.parseInt(aSElement3.getText());
            numbers[4] = Integer.parseInt(aSElement4.getText());
            numbers[5] = Integer.parseInt(aSElement5.getText());
        } catch (NumberFormatException e) {
            // Handle invalid input
            JOptionPane.showMessageDialog(this, "Invalid input in one of the fields.");
            return;
        }

        int value = Integer.parseInt(aSValue.getText());

        // Save the input values to a file
        FileHandler.saveArrayInputValues(numbers);

        // Search for the element using the Operations class and display the results in the output area
        DataHandler ops = new DataHandler(numbers, null, null);
        String result = ops.search(value);
        searchOutputArea.setText(result);

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pAOutput, "ASearchOutput");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bSearchActionPerformed

    private void bUpdateBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdateBackActionPerformed
        switchArrayLayouts(pAInput, pAOutput);
    }//GEN-LAST:event_bUpdateBackActionPerformed

    private void bUpdateTitleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bUpdateTitleMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bUpdateTitleMouseEntered

    private void bUpdateTitleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bUpdateTitleMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bUpdateTitleMouseExited

    private void bUpdateTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdateTitleActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pAOutput.getLayout();
        outputLayout.show(pAOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pAOutput, "AUpdateIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bUpdateTitleActionPerformed

    private void bElements6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements6MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bElements6MouseEntered

    private void bElements6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bElements6MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bElements6MouseExited

    private void bElements6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bElements6ActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pAOutput.getLayout();
        outputLayout.show(pAOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pAOutput, "AUpdateElements");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bElements6ActionPerformed

    private void aUElement0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aUElement0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aUElement0ActionPerformed

    private void aUElement5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aUElement5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aUElement5ActionPerformed

    private void bEInsert1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bEInsert1MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bEInsert1MouseEntered

    private void bEInsert1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bEInsert1MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bEInsert1MouseExited

    private void bEInsert1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEInsert1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bEInsert1ActionPerformed

    private void aUValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aUValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aUValueActionPerformed

    private void bUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdateActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pAOutput.getLayout();
        outputLayout.show(pAOutput, "AOLoading");

        // Get the input values from the text fields
        int[] numbers = new int[6];
        try {
            numbers[0] = Integer.parseInt(aUElement0.getText());
            numbers[1] = Integer.parseInt(aUElement1.getText());
            numbers[2] = Integer.parseInt(aUElement2.getText());
            numbers[3] = Integer.parseInt(aUElement3.getText());
            numbers[4] = Integer.parseInt(aUElement4.getText());
            numbers[5] = Integer.parseInt(aUElement5.getText());
        } catch (NumberFormatException e) {
            // Handle invalid input
            JOptionPane.showMessageDialog(this, "Invalid input in one of the fields.");
            return;
        }

        int index = UpdateIndex.getValue();
        int value = Integer.parseInt(aUValue.getText());

        // Save the input values to a file
        FileHandler.saveArrayInputValues(numbers);

        // Update the element using the Operations class and display the results in the output area
        DataHandler ops = new DataHandler(numbers, null, null);
        String result = ops.update(index, value);
        updateOutputArea.setText(result);

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pAOutput, "AUpdateOutput");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bUpdateActionPerformed

    private void bArrays2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays2MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bArrays2MouseEntered

    private void bArrays2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays2MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bArrays2MouseExited

    private void bArrays2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bArrays2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bArrays2ActionPerformed

    private void bArrays1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays1MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bArrays1MouseEntered

    private void bArrays1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays1MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bArrays1MouseExited

    private void bArrays1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bArrays1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bArrays1ActionPerformed

    private void bHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHomeActionPerformed
        // Show the loading panel first
        CardLayout cardLayout = (CardLayout) pArrays.getLayout();
        cardLayout.show(pArrays, "Loading");

        // Replace "Home" with the actual panel name in the Home JFrame
        Home homeFrame = new Home();

        // Delay the visibility of the Home JFrame
        Timer showTimer = new Timer(500, (ActionEvent e) -> {
            homeFrame.setVisible(true);
        });
        showTimer.setRepeats(false);
        showTimer.start();

        // Dispose the current frame after a delay
        Timer disposeTimer = new Timer(600, (ActionEvent e) -> {
            dispose();
        });
        disposeTimer.setRepeats(false);
        disposeTimer.start();

    }//GEN-LAST:event_bHomeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ArraysFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ArraysFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ArraysFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ArraysFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ArraysFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider DeleteIndex;
    private javax.swing.JSlider InsertIndex;
    private javax.swing.JSlider UpdateIndex;
    private javax.swing.JTextField aDElement0;
    private javax.swing.JTextField aDElement1;
    private javax.swing.JTextField aDElement2;
    private javax.swing.JTextField aDElement3;
    private javax.swing.JTextField aDElement4;
    private javax.swing.JTextField aDElement5;
    private javax.swing.JTextField aIElement0;
    private javax.swing.JTextField aIElement1;
    private javax.swing.JTextField aIElement2;
    private javax.swing.JTextField aIElement3;
    private javax.swing.JTextField aIElement4;
    private javax.swing.JTextField aIElement5;
    private javax.swing.JTextField aIValue;
    private javax.swing.JTextField aSElement0;
    private javax.swing.JTextField aSElement1;
    private javax.swing.JTextField aSElement2;
    private javax.swing.JTextField aSElement3;
    private javax.swing.JTextField aSElement4;
    private javax.swing.JTextField aSElement5;
    private javax.swing.JTextField aSValue;
    private javax.swing.JTextField aTElement0;
    private javax.swing.JTextField aTElement1;
    private javax.swing.JTextField aTElement2;
    private javax.swing.JTextField aTElement3;
    private javax.swing.JTextField aTElement4;
    private javax.swing.JTextField aTElement5;
    private javax.swing.JTextField aUElement0;
    private javax.swing.JTextField aUElement1;
    private javax.swing.JTextField aUElement2;
    private javax.swing.JTextField aUElement3;
    private javax.swing.JTextField aUElement4;
    private javax.swing.JTextField aUElement5;
    private javax.swing.JTextField aUValue;
    private javax.swing.JButton bArrayDeletion;
    private javax.swing.JButton bArrayInsertion;
    private javax.swing.JButton bArrayNext;
    private javax.swing.JButton bArraySearch;
    private javax.swing.JButton bArrayTraverse;
    private javax.swing.JButton bArrayUpdate;
    private javax.swing.JButton bArrays1;
    private javax.swing.JButton bArrays2;
    private javax.swing.JButton bArrays3;
    private javax.swing.JButton bBack;
    private javax.swing.JButton bBack9;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bDeleteBack;
    private javax.swing.JButton bDeletionTitle;
    private javax.swing.JButton bEInsert;
    private javax.swing.JButton bEInsert1;
    private javax.swing.JButton bElements;
    private javax.swing.JButton bElements1;
    private javax.swing.JButton bElements2;
    private javax.swing.JButton bElements3;
    private javax.swing.JButton bElements4;
    private javax.swing.JButton bElements5;
    private javax.swing.JButton bElements6;
    private javax.swing.JButton bHome;
    private javax.swing.JButton bInsert;
    private javax.swing.JButton bInsertBack;
    private javax.swing.JButton bInsertionTitle;
    private javax.swing.JButton bSearch;
    private javax.swing.JButton bSearchBack;
    private javax.swing.JButton bSearchTitle;
    private javax.swing.JButton bTraverse;
    private javax.swing.JButton bTraverseBack;
    private javax.swing.JButton bTraverseTitle;
    private javax.swing.JButton bUpdate;
    private javax.swing.JButton bUpdateBack;
    private javax.swing.JButton bUpdateTitle;
    private javax.swing.JTextArea deletionOutputArea;
    private javax.swing.JTextArea insertionOutputArea;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane24;
    private javax.swing.JScrollPane jScrollPane25;
    private javax.swing.JScrollPane jScrollPane26;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea11;
    private javax.swing.JTextArea jTextArea12;
    private javax.swing.JTextArea jTextArea13;
    private javax.swing.JTextArea jTextArea14;
    private javax.swing.JTextArea jTextArea15;
    private javax.swing.JTextArea jTextArea16;
    private javax.swing.JTextArea jTextArea17;
    private javax.swing.JTextArea jTextArea18;
    private javax.swing.JTextArea jTextArea19;
    private javax.swing.JTextArea jTextArea20;
    private javax.swing.JTextArea jTextArea21;
    private javax.swing.JPanel pADeletion;
    private javax.swing.JPanel pADeletionElements;
    private javax.swing.JPanel pADeletionIntro;
    private javax.swing.JPanel pADeletionOutput;
    private javax.swing.JPanel pAILoading;
    private javax.swing.JPanel pAInput;
    private javax.swing.JPanel pAInsertion;
    private javax.swing.JPanel pAInsertionElements;
    private javax.swing.JPanel pAInsertionIntro;
    private javax.swing.JPanel pAInsertionOutput;
    private javax.swing.JPanel pAMenus;
    private javax.swing.JPanel pAOIntro;
    private javax.swing.JPanel pAOLoading;
    private javax.swing.JPanel pAOutput;
    private javax.swing.JPanel pASearch;
    private javax.swing.JPanel pASearchElements;
    private javax.swing.JPanel pASearchIntro;
    private javax.swing.JPanel pASearchOutput;
    private javax.swing.JPanel pATraverse;
    private javax.swing.JPanel pATraverseElements;
    private javax.swing.JPanel pATraverseIntro;
    private javax.swing.JPanel pATraverseOutput;
    private javax.swing.JPanel pAUpdate;
    private javax.swing.JPanel pAUpdateElements;
    private javax.swing.JPanel pAUpdateIntro;
    private javax.swing.JPanel pAUpdateOutput;
    private javax.swing.JPanel pArrayOperations;
    private javax.swing.JPanel pArrays;
    private javax.swing.JPanel pArraysIntro;
    private javax.swing.JPanel pContainer;
    private javax.swing.JPanel pLoading;
    private javax.swing.JPanel pSBot10;
    private javax.swing.JPanel pSBot11;
    private javax.swing.JPanel pSBot13;
    private javax.swing.JPanel pSBot14;
    private javax.swing.JPanel pSBot15;
    private javax.swing.JPanel pSBot16;
    private javax.swing.JPanel pSBot2;
    private javax.swing.JPanel pSCenter18;
    private javax.swing.JPanel pSCenter19;
    private javax.swing.JPanel pSCenter2;
    private javax.swing.JPanel pSCenter20;
    private javax.swing.JPanel pSCenter21;
    private javax.swing.JPanel pSCenter22;
    private javax.swing.JPanel pSCenter23;
    private javax.swing.JPanel pSCenter24;
    private javax.swing.JPanel pSCenter3;
    private javax.swing.JPanel pSTop11;
    private javax.swing.JPanel pSTop12;
    private javax.swing.JPanel pSTop14;
    private javax.swing.JPanel pSTop15;
    private javax.swing.JPanel pSTop16;
    private javax.swing.JPanel pSTop17;
    private javax.swing.JPanel pSTop18;
    private javax.swing.JPanel pSTop2;
    private javax.swing.JLabel sTitle12;
    private javax.swing.JLabel sTitle3;
    private javax.swing.JTextArea searchOutputArea;
    private javax.swing.JLabel structImg;
    private javax.swing.JTextArea traverseOutputArea;
    private javax.swing.JTextArea updateOutputArea;
    // End of variables declaration//GEN-END:variables
}
