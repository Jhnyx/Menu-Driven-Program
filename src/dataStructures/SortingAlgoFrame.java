/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package dataStructures;

import handlers.DataHandler;
import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.util.Arrays;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.Timer;
import main.Home;

/**
 *
 * @author jhnyx
 */
public class SortingAlgoFrame extends javax.swing.JFrame {
    private Home home;
    /**
     * Creates new form SortingAlgoFrame
     */
    public SortingAlgoFrame() {
        initComponents();
        home = new Home();
    }
    
    private void switchLayouts(JPanel pInput, JPanel pOutput) {

        // Get a reference to the CardLayout of the pInput panel
        CardLayout InputLayout = (CardLayout) pInput.getLayout();

        // Show the "ILoading" card in the pInput panel
        InputLayout.show(pInput, "ILoading");

        // Get a reference to the CardLayout of the pOutput panel
        CardLayout OutputLayout = (CardLayout) pOutput.getLayout();

        // Show the "OLoading" card in the pOutput panel
        OutputLayout.show(pOutput, "OLoading");

        // Set up a timer to switch back to the main menus after a delay
        Timer timer = new Timer(500, (ActionEvent e) -> {
            InputLayout.show(pInput, "Menus");
            OutputLayout.show(pOutput, "OIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pContainer = new javax.swing.JPanel();
        pSorting = new javax.swing.JPanel();
        pSortingIntro = new javax.swing.JPanel();
        pSTop7 = new javax.swing.JPanel();
        bBack5 = new javax.swing.JButton();
        sTitle8 = new javax.swing.JLabel();
        bNext5 = new javax.swing.JButton();
        pSCenter12 = new javax.swing.JPanel();
        structImg5 = new javax.swing.JLabel();
        pSCenter13 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea6 = new javax.swing.JTextArea();
        pSBot7 = new javax.swing.JPanel();
        pLoading = new javax.swing.JPanel();
        pSTop11 = new javax.swing.JPanel();
        pSCenter19 = new javax.swing.JPanel();
        bArrays1 = new javax.swing.JButton();
        pSBot11 = new javax.swing.JPanel();
        pSortingOperations = new javax.swing.JPanel();
        pSTop12 = new javax.swing.JPanel();
        bBack9 = new javax.swing.JButton();
        sTitle12 = new javax.swing.JLabel();
        bHome = new javax.swing.JButton();
        pSCenter20 = new javax.swing.JPanel();
        pInput = new javax.swing.JPanel();
        pMenus = new javax.swing.JPanel();
        bCounting = new javax.swing.JButton();
        pILoading = new javax.swing.JPanel();
        bArrays3 = new javax.swing.JButton();
        pCountingMenu = new javax.swing.JPanel();
        pSTop17 = new javax.swing.JPanel();
        bSearchBack = new javax.swing.JButton();
        pSCenter23 = new javax.swing.JPanel();
        bSearchTitle = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        pSBot15 = new javax.swing.JPanel();
        bCount = new javax.swing.JButton();
        pOutput = new javax.swing.JPanel();
        pOIntro = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTextArea12 = new javax.swing.JTextArea();
        pOLoading = new javax.swing.JPanel();
        bArrays2 = new javax.swing.JButton();
        pCountingIntro = new javax.swing.JPanel();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTextArea18 = new javax.swing.JTextArea();
        pCountingOutput = new javax.swing.JPanel();
        jScrollPane23 = new javax.swing.JScrollPane();
        countingOutputArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1280, 720));
        setResizable(false);

        pContainer.setLayout(new java.awt.BorderLayout());

        pSorting.setMaximumSize(new java.awt.Dimension(1280, 720));
        pSorting.setRequestFocusEnabled(false);
        pSorting.setLayout(new java.awt.CardLayout());

        pSortingIntro.setBackground(new java.awt.Color(35, 40, 50));
        pSortingIntro.setMinimumSize(new java.awt.Dimension(1280, 720));
        pSortingIntro.setPreferredSize(new java.awt.Dimension(1280, 720));
        pSortingIntro.setLayout(new java.awt.BorderLayout());

        pSTop7.setBackground(new java.awt.Color(24, 25, 28));
        pSTop7.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 100, 0));

        bBack5.setBackground(new java.awt.Color(24, 25, 28));
        bBack5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/back_icon.png"))); // NOI18N
        bBack5.setBorder(null);
        bBack5.setBorderPainted(false);
        bBack5.setContentAreaFilled(false);
        bBack5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bBack5.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_back_icon.png"))); // NOI18N
        bBack5.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bBack5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBack5ActionPerformed(evt);
            }
        });
        pSTop7.add(bBack5);

        sTitle8.setFont(new java.awt.Font("Russo One", 1, 48)); // NOI18N
        sTitle8.setForeground(new java.awt.Color(255, 255, 255));
        sTitle8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sTitle8.setText("SORTING ALGORITHM");
        sTitle8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sTitle8.setMaximumSize(new java.awt.Dimension(0, 0));
        sTitle8.setMinimumSize(new java.awt.Dimension(0, 0));
        sTitle8.setPreferredSize(new java.awt.Dimension(700, 100));
        sTitle8.setRequestFocusEnabled(false);
        pSTop7.add(sTitle8);

        bNext5.setBackground(new java.awt.Color(24, 25, 28));
        bNext5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/next_icon.png"))); // NOI18N
        bNext5.setBorder(null);
        bNext5.setBorderPainted(false);
        bNext5.setContentAreaFilled(false);
        bNext5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bNext5.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_next_icon.png"))); // NOI18N
        bNext5.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bNext5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNext5ActionPerformed(evt);
            }
        });
        pSTop7.add(bNext5);

        pSortingIntro.add(pSTop7, java.awt.BorderLayout.PAGE_START);

        pSCenter12.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter12.setLayout(new java.awt.BorderLayout());

        structImg5.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        structImg5.setForeground(new java.awt.Color(255, 255, 255));
        structImg5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        structImg5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/sorting_gif.gif"))); // NOI18N
        structImg5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pSCenter12.add(structImg5, java.awt.BorderLayout.WEST);

        pSCenter13.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        jScrollPane6.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane6.setBorder(null);
        jScrollPane6.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane6.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane6.setHorizontalScrollBar(null);
        jScrollPane6.setOpaque(false);
        jScrollPane6.setPreferredSize(new java.awt.Dimension(750, 1000));

        jTextArea6.setEditable(false);
        jTextArea6.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea6.setColumns(20);
        jTextArea6.setFont(new java.awt.Font("Russo One", 0, 22)); // NOI18N
        jTextArea6.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea6.setLineWrap(true);
        jTextArea6.setText("Sorting algorithms are essential tools in programming, used to arrange a collection of data in a specific order. They are used in various applications, such as databases, search engines, and machine learning. There are many types of sorting algorithms, each with its own strengths and weaknesses, making it important to choose the right one for the specific task.\n\nThe choice of sorting algorithm depends on the size and structure of the data being sorted, as well as the efficiency and stability requirements of the sort. Understanding the different types of sorting algorithms and their advantages and limitations is crucial for selecting the most appropriate one for the task at hand.\n\nOverall, sorting algorithms are fundamental tools in programming and are widely used in many fields. Choosing the right sorting algorithm can significantly improve the performance and efficiency of a program.");
        jTextArea6.setWrapStyleWord(true);
        jTextArea6.setAutoscrolls(false);
        jTextArea6.setBorder(null);
        jTextArea6.setFocusable(false);
        jScrollPane6.setViewportView(jTextArea6);

        pSCenter13.add(jScrollPane6);

        pSCenter12.add(pSCenter13, java.awt.BorderLayout.CENTER);

        pSortingIntro.add(pSCenter12, java.awt.BorderLayout.CENTER);

        pSBot7.setBackground(new java.awt.Color(35, 40, 50));
        pSBot7.setPreferredSize(new java.awt.Dimension(0, 100));
        pSBot7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));
        pSortingIntro.add(pSBot7, java.awt.BorderLayout.SOUTH);

        pSorting.add(pSortingIntro, "SortingIntro");

        pLoading.setBackground(new java.awt.Color(35, 40, 50));
        pLoading.setMinimumSize(new java.awt.Dimension(1280, 720));
        pLoading.setPreferredSize(new java.awt.Dimension(1280, 720));
        pLoading.setLayout(new java.awt.BorderLayout());

        pSTop11.setBackground(new java.awt.Color(35, 40, 50));
        pSTop11.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 100, 25));
        pLoading.add(pSTop11, java.awt.BorderLayout.NORTH);

        pSCenter19.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter19.setLayout(new java.awt.GridLayout());

        bArrays1.setBackground(new java.awt.Color(35, 40, 50));
        bArrays1.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bArrays1.setForeground(new java.awt.Color(255, 255, 255));
        bArrays1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/loading_gif.gif"))); // NOI18N
        bArrays1.setText("LOADING...");
        bArrays1.setBorder(null);
        bArrays1.setBorderPainted(false);
        bArrays1.setContentAreaFilled(false);
        bArrays1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bArrays1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bArrays1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bArrays1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bArrays1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bArrays1MouseExited(evt);
            }
        });
        bArrays1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bArrays1ActionPerformed(evt);
            }
        });
        pSCenter19.add(bArrays1);

        pLoading.add(pSCenter19, java.awt.BorderLayout.CENTER);

        pSBot11.setBackground(new java.awt.Color(35, 40, 50));
        pSBot11.setPreferredSize(new java.awt.Dimension(0, 100));
        pSBot11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));
        pLoading.add(pSBot11, java.awt.BorderLayout.SOUTH);

        pSorting.add(pLoading, "Loading");

        pSortingOperations.setBackground(new java.awt.Color(35, 40, 50));
        pSortingOperations.setMinimumSize(new java.awt.Dimension(1280, 720));
        pSortingOperations.setPreferredSize(new java.awt.Dimension(1280, 720));
        pSortingOperations.setLayout(new java.awt.BorderLayout());

        pSTop12.setBackground(new java.awt.Color(24, 25, 28));
        pSTop12.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 100, 0));

        bBack9.setBackground(new java.awt.Color(24, 25, 28));
        bBack9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/back_icon.png"))); // NOI18N
        bBack9.setBorder(null);
        bBack9.setBorderPainted(false);
        bBack9.setContentAreaFilled(false);
        bBack9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bBack9.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_back_icon.png"))); // NOI18N
        bBack9.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bBack9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBack9ActionPerformed(evt);
            }
        });
        pSTop12.add(bBack9);

        sTitle12.setFont(new java.awt.Font("Russo One", 1, 48)); // NOI18N
        sTitle12.setForeground(new java.awt.Color(255, 255, 255));
        sTitle12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sTitle12.setText("SORTING OPERATIONS");
        sTitle12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sTitle12.setMaximumSize(new java.awt.Dimension(0, 0));
        sTitle12.setMinimumSize(new java.awt.Dimension(0, 0));
        sTitle12.setPreferredSize(new java.awt.Dimension(700, 100));
        sTitle12.setRequestFocusEnabled(false);
        pSTop12.add(sTitle12);

        bHome.setBackground(new java.awt.Color(24, 25, 28));
        bHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/home_icon.png"))); // NOI18N
        bHome.setBorder(null);
        bHome.setBorderPainted(false);
        bHome.setContentAreaFilled(false);
        bHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bHome.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_home_icon.png"))); // NOI18N
        bHome.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHomeActionPerformed(evt);
            }
        });
        pSTop12.add(bHome);

        pSortingOperations.add(pSTop12, java.awt.BorderLayout.PAGE_START);

        pSCenter20.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter20.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 25, 0));

        pInput.setBackground(new java.awt.Color(35, 40, 50));
        pInput.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INPUT", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Russo One", 2, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        pInput.setForeground(new java.awt.Color(255, 255, 255));
        pInput.setPreferredSize(new java.awt.Dimension(550, 600));
        pInput.setLayout(new java.awt.CardLayout());

        pMenus.setBackground(new java.awt.Color(35, 40, 50));
        pMenus.setLayout(new java.awt.GridLayout());

        bCounting.setBackground(new java.awt.Color(35, 40, 50));
        bCounting.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bCounting.setForeground(new java.awt.Color(255, 255, 255));
        bCounting.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/op_insertion_gif.gif"))); // NOI18N
        bCounting.setText("COUNTING SORT");
        bCounting.setBorder(null);
        bCounting.setBorderPainted(false);
        bCounting.setContentAreaFilled(false);
        bCounting.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bCounting.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bCounting.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bCountingMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bCountingMouseExited(evt);
            }
        });
        bCounting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCountingActionPerformed(evt);
            }
        });
        pMenus.add(bCounting);

        pInput.add(pMenus, "Menus");

        pILoading.setBackground(new java.awt.Color(35, 40, 50));
        pILoading.setLayout(new java.awt.BorderLayout());

        bArrays3.setBackground(new java.awt.Color(35, 40, 50));
        bArrays3.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bArrays3.setForeground(new java.awt.Color(255, 255, 255));
        bArrays3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_loading_gif.gif"))); // NOI18N
        bArrays3.setText("LOADING...");
        bArrays3.setBorder(null);
        bArrays3.setBorderPainted(false);
        bArrays3.setContentAreaFilled(false);
        bArrays3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bArrays3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bArrays3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bArrays3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bArrays3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bArrays3MouseExited(evt);
            }
        });
        bArrays3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bArrays3ActionPerformed(evt);
            }
        });
        pILoading.add(bArrays3, java.awt.BorderLayout.CENTER);

        pInput.add(pILoading, "ILoading");

        pCountingMenu.setBackground(new java.awt.Color(35, 40, 50));
        pCountingMenu.setLayout(new java.awt.BorderLayout());

        pSTop17.setBackground(new java.awt.Color(35, 40, 50));
        pSTop17.setPreferredSize(new java.awt.Dimension(0, 100));
        pSTop17.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 55, 25));

        bSearchBack.setBackground(new java.awt.Color(24, 25, 28));
        bSearchBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/go_back_icon.png"))); // NOI18N
        bSearchBack.setBorder(null);
        bSearchBack.setBorderPainted(false);
        bSearchBack.setContentAreaFilled(false);
        bSearchBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bSearchBack.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bSearchBack.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bSearchBack.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_go_back_icon.png"))); // NOI18N
        bSearchBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSearchBackActionPerformed(evt);
            }
        });
        pSTop17.add(bSearchBack);

        pCountingMenu.add(pSTop17, java.awt.BorderLayout.NORTH);

        pSCenter23.setBackground(new java.awt.Color(35, 40, 50));
        pSCenter23.setPreferredSize(new java.awt.Dimension(0, 0));
        pSCenter23.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 0));

        bSearchTitle.setBackground(new java.awt.Color(35, 40, 50));
        bSearchTitle.setFont(new java.awt.Font("Russo One", 0, 24)); // NOI18N
        bSearchTitle.setForeground(new java.awt.Color(255, 255, 255));
        bSearchTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/op_insertion_gif.gif"))); // NOI18N
        bSearchTitle.setText("COUNTING SORT");
        bSearchTitle.setBorder(null);
        bSearchTitle.setBorderPainted(false);
        bSearchTitle.setContentAreaFilled(false);
        bSearchTitle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bSearchTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bSearchTitle.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bSearchTitle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bSearchTitleMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bSearchTitleMouseExited(evt);
            }
        });
        bSearchTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSearchTitleActionPerformed(evt);
            }
        });
        pSCenter23.add(bSearchTitle);

        jPanel15.setBackground(new java.awt.Color(35, 40, 50));
        jPanel15.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        pSCenter23.add(jPanel15);

        jPanel16.setBackground(new java.awt.Color(35, 40, 50));
        jPanel16.setPreferredSize(new java.awt.Dimension(1000, 5));

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        pSCenter23.add(jPanel16);

        jPanel18.setBackground(new java.awt.Color(35, 40, 50));
        jPanel18.setPreferredSize(new java.awt.Dimension(1000, 10));

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        pSCenter23.add(jPanel18);

        pCountingMenu.add(pSCenter23, java.awt.BorderLayout.CENTER);

        pSBot15.setBackground(new java.awt.Color(35, 40, 50));
        pSBot15.setPreferredSize(new java.awt.Dimension(0, 100));
        pSBot15.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 500, 0));

        bCount.setBackground(new java.awt.Color(24, 25, 28));
        bCount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/submit_icon.png"))); // NOI18N
        bCount.setBorder(null);
        bCount.setBorderPainted(false);
        bCount.setContentAreaFilled(false);
        bCount.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bCount.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bCount.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/rollover_submit_icon.png"))); // NOI18N
        bCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCountActionPerformed(evt);
            }
        });
        pSBot15.add(bCount);

        pCountingMenu.add(pSBot15, java.awt.BorderLayout.SOUTH);

        pInput.add(pCountingMenu, "CountingMenu");

        pSCenter20.add(pInput);

        pOutput.setBackground(new java.awt.Color(35, 40, 50));
        pOutput.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "OUTPUT", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Russo One", 2, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        pOutput.setForeground(new java.awt.Color(255, 255, 255));
        pOutput.setPreferredSize(new java.awt.Dimension(550, 600));
        pOutput.setLayout(new java.awt.CardLayout());

        pOIntro.setBackground(new java.awt.Color(35, 40, 50));
        pOIntro.setLayout(new java.awt.BorderLayout());

        jScrollPane12.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane12.setBorder(null);
        jScrollPane12.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane12.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane12.setHorizontalScrollBar(null);
        jScrollPane12.setOpaque(false);
        jScrollPane12.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane12.setRequestFocusEnabled(false);
        jScrollPane12.setWheelScrollingEnabled(false);

        jTextArea12.setEditable(false);
        jTextArea12.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea12.setColumns(20);
        jTextArea12.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        jTextArea12.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea12.setLineWrap(true);
        jTextArea12.setText("Hey there, curious clicker! Want to know more about the buttons on this screen? Well, it's as easy as a single click or tap! Just pick a button on the left that piques your interest and voila! A magical description will appear before your very eyes! It's like having a button whisperer in your pocket! This nifty feature is here to help you navigate and understand this interface, so don't be shy, give those buttons a click and unlock their secrets!");
        jTextArea12.setWrapStyleWord(true);
        jTextArea12.setAutoscrolls(false);
        jTextArea12.setBorder(null);
        jTextArea12.setFocusable(false);
        jTextArea12.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane12.setViewportView(jTextArea12);

        pOIntro.add(jScrollPane12, java.awt.BorderLayout.CENTER);

        pOutput.add(pOIntro, "OIntro");

        pOLoading.setBackground(new java.awt.Color(35, 40, 50));
        pOLoading.setLayout(new java.awt.BorderLayout());

        bArrays2.setBackground(new java.awt.Color(35, 40, 50));
        bArrays2.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        bArrays2.setForeground(new java.awt.Color(255, 255, 255));
        bArrays2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/animations/small_loading_gif.gif"))); // NOI18N
        bArrays2.setText("LOADING...");
        bArrays2.setBorder(null);
        bArrays2.setBorderPainted(false);
        bArrays2.setContentAreaFilled(false);
        bArrays2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bArrays2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bArrays2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bArrays2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bArrays2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bArrays2MouseExited(evt);
            }
        });
        bArrays2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bArrays2ActionPerformed(evt);
            }
        });
        pOLoading.add(bArrays2, java.awt.BorderLayout.CENTER);

        pOutput.add(pOLoading, "OLoading");

        pCountingIntro.setBackground(new java.awt.Color(35, 40, 50));
        pCountingIntro.setFocusable(false);
        pCountingIntro.setLayout(new java.awt.BorderLayout());

        jScrollPane21.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane21.setBorder(null);
        jScrollPane21.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane21.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane21.setHorizontalScrollBar(null);
        jScrollPane21.setOpaque(false);
        jScrollPane21.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane21.setRequestFocusEnabled(false);
        jScrollPane21.setWheelScrollingEnabled(false);

        jTextArea18.setEditable(false);
        jTextArea18.setBackground(new java.awt.Color(35, 40, 50));
        jTextArea18.setColumns(20);
        jTextArea18.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        jTextArea18.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea18.setLineWrap(true);
        jTextArea18.setText("Counting Sort is a linear sorting algorithm that works well for a specific range of input elements. It is particularly efficient when the range of input elements is small compared to the size of the input array. Counting Sort doesn't rely on comparisons between elements, making it faster than comparison-based sorting algorithms like Quick Sort or Merge Sort in certain scenarios.\n\nThe algorithm operates by counting the frequency of each distinct element in the input array. It then uses this frequency information to determine the correct position of each element in the sorted output array. Counting Sort assumes that the input elements are non-negative integers or can be mapped to non-negative integers.");
        jTextArea18.setWrapStyleWord(true);
        jTextArea18.setAutoscrolls(false);
        jTextArea18.setBorder(null);
        jTextArea18.setFocusable(false);
        jTextArea18.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane21.setViewportView(jTextArea18);

        pCountingIntro.add(jScrollPane21, java.awt.BorderLayout.CENTER);

        pOutput.add(pCountingIntro, "CountingIntro");

        pCountingOutput.setBackground(new java.awt.Color(35, 40, 50));
        pCountingOutput.setFocusable(false);
        pCountingOutput.setLayout(new java.awt.BorderLayout());

        jScrollPane23.setBackground(new java.awt.Color(35, 40, 50));
        jScrollPane23.setBorder(null);
        jScrollPane23.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane23.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane23.setHorizontalScrollBar(null);
        jScrollPane23.setOpaque(false);
        jScrollPane23.setPreferredSize(new java.awt.Dimension(750, 1000));
        jScrollPane23.setRequestFocusEnabled(false);
        jScrollPane23.setWheelScrollingEnabled(false);

        countingOutputArea.setEditable(false);
        countingOutputArea.setBackground(new java.awt.Color(35, 40, 50));
        countingOutputArea.setColumns(20);
        countingOutputArea.setFont(new java.awt.Font("Russo One", 0, 18)); // NOI18N
        countingOutputArea.setForeground(new java.awt.Color(255, 255, 255));
        countingOutputArea.setLineWrap(true);
        countingOutputArea.setWrapStyleWord(true);
        countingOutputArea.setAutoscrolls(false);
        countingOutputArea.setBorder(null);
        countingOutputArea.setFocusable(false);
        countingOutputArea.setPreferredSize(new java.awt.Dimension(440, 500));
        jScrollPane23.setViewportView(countingOutputArea);

        pCountingOutput.add(jScrollPane23, java.awt.BorderLayout.CENTER);

        pOutput.add(pCountingOutput, "CountingOutput");

        pSCenter20.add(pOutput);

        pSortingOperations.add(pSCenter20, java.awt.BorderLayout.CENTER);

        pSorting.add(pSortingOperations, "SortingOperations");

        pContainer.add(pSorting, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pContainer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 782, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(pContainer, javax.swing.GroupLayout.PREFERRED_SIZE, 782, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bBack5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBack5ActionPerformed
        // Show the loading panel first
        CardLayout cardLayout = (CardLayout) pSorting.getLayout();
        cardLayout.show(pSorting, "Loading");

        // Replace "Home" with the actual panel name in the Home JFrame
        Home homeFrame = new Home();

        // Delay the visibility of the Home JFrame
        Timer showTimer = new Timer(500, (ActionEvent e) -> {
            homeFrame.setVisible(true);
        });
        showTimer.setRepeats(false);
        showTimer.start();

        // Dispose the current frame after a delay
        Timer disposeTimer = new Timer(600, (ActionEvent e) -> {
            dispose();
        });
        disposeTimer.setRepeats(false);
        disposeTimer.start();
    }//GEN-LAST:event_bBack5ActionPerformed

    private void bNext5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNext5ActionPerformed
        CardLayout cardLayout = (CardLayout) pSorting.getLayout();
        cardLayout.show(pSorting, "Loading");
        Timer timer = new Timer(500, (ActionEvent e) -> {
            cardLayout.show(pSorting, "SortingOperations");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bNext5ActionPerformed

    private void bArrays1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays1MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bArrays1MouseEntered

    private void bArrays1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays1MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bArrays1MouseExited

    private void bArrays1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bArrays1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bArrays1ActionPerformed

    private void bBack9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBack9ActionPerformed
        CardLayout cardLayout = (CardLayout) pSorting.getLayout();
        cardLayout.show(pSorting, "Loading");
        Timer timer = new Timer(500, (ActionEvent e) -> {
            cardLayout.show(pSorting, "SortingIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bBack9ActionPerformed

    private void bHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHomeActionPerformed
        // Show the loading panel first
        CardLayout cardLayout = (CardLayout) pSorting.getLayout();
        cardLayout.show(pSorting, "Loading");

        // Replace "Home" with the actual panel name in the Home JFrame
        Home homeFrame = new Home();

        // Delay the visibility of the Home JFrame
        Timer showTimer = new Timer(500, (ActionEvent e) -> {
            homeFrame.setVisible(true);
        });
        showTimer.setRepeats(false);
        showTimer.start();

        // Dispose the current frame after a delay
        Timer disposeTimer = new Timer(600, (ActionEvent e) -> {
            dispose();
        });
        disposeTimer.setRepeats(false);
        disposeTimer.start();
    }//GEN-LAST:event_bHomeActionPerformed

    private void bCountingMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bCountingMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bCountingMouseEntered

    private void bCountingMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bCountingMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bCountingMouseExited

    private void bCountingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCountingActionPerformed
        // Get a reference to the CardLayout of the pInput panel
        CardLayout inputLayout = (CardLayout) pInput.getLayout();

        // Show the "ILoading" card in the pInput panel
        inputLayout.show(pInput, "ILoading");

        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pOutput.getLayout();

        // Show the "OLoading" card in the pOutput panel
        outputLayout.show(pOutput, "OLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            inputLayout.show(pInput, "CountingMenu");
            outputLayout.show(pOutput, "CountingIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bCountingActionPerformed

    private void bArrays3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays3MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bArrays3MouseEntered

    private void bArrays3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays3MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bArrays3MouseExited

    private void bArrays3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bArrays3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bArrays3ActionPerformed

    private void bSearchBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSearchBackActionPerformed
        switchLayouts(pInput, pOutput);
    }//GEN-LAST:event_bSearchBackActionPerformed

    private void bSearchTitleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSearchTitleMouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bSearchTitleMouseEntered

    private void bSearchTitleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSearchTitleMouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bSearchTitleMouseExited

    private void bSearchTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSearchTitleActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pOutput.getLayout();
        outputLayout.show(pOutput, "AOLoading");

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pOutput, "ASearchIntro");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bSearchTitleActionPerformed

    private void bCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCountActionPerformed
        // Get a reference to the CardLayout of the pOutput panel
        CardLayout outputLayout = (CardLayout) pOutput.getLayout();
        outputLayout.show(pOutput, "OLoading");

        // Perform the breadth-first search and obtain the result
        String result = performCountingSort();

        countingOutputArea.setText(result);

        Timer timer = new Timer(500, (ActionEvent e) -> {
            outputLayout.show(pOutput, "CountingOutput");
        });
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_bCountActionPerformed

    private String performCountingSort() {
    // Create an instance of DataHandler
    DataHandler dataHandler = new DataHandler();

    // Define the input array for counting sort
    int[] inputArray = {4, 2, 2, 8, 3, 3, 1};

    // Perform counting sort
    String countingSortResult = dataHandler.countingSort(inputArray);

    // Create a string representation of the input array
    String inputArrayString = Arrays.toString(inputArray);

    // Combine the input array and counting sort result
    String output = "Input Array: " + inputArrayString + "\nCounting Sort Result: " + countingSortResult;

    return output;
}
    
    
    private void bArrays2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays2MouseEntered
        home.setButtonForeground((JButton) evt.getComponent(), true);
    }//GEN-LAST:event_bArrays2MouseEntered

    private void bArrays2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bArrays2MouseExited
        home.setButtonForeground((JButton) evt.getComponent(), false);
    }//GEN-LAST:event_bArrays2MouseExited

    private void bArrays2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bArrays2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bArrays2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SortingAlgoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SortingAlgoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SortingAlgoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SortingAlgoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SortingAlgoFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bArrays1;
    private javax.swing.JButton bArrays2;
    private javax.swing.JButton bArrays3;
    private javax.swing.JButton bBack5;
    private javax.swing.JButton bBack9;
    private javax.swing.JButton bCount;
    private javax.swing.JButton bCounting;
    private javax.swing.JButton bHome;
    private javax.swing.JButton bNext5;
    private javax.swing.JButton bSearchBack;
    private javax.swing.JButton bSearchTitle;
    private javax.swing.JTextArea countingOutputArea;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextArea jTextArea12;
    private javax.swing.JTextArea jTextArea18;
    private javax.swing.JTextArea jTextArea6;
    private javax.swing.JPanel pContainer;
    private javax.swing.JPanel pCountingIntro;
    private javax.swing.JPanel pCountingMenu;
    private javax.swing.JPanel pCountingOutput;
    private javax.swing.JPanel pILoading;
    private javax.swing.JPanel pInput;
    private javax.swing.JPanel pLoading;
    private javax.swing.JPanel pMenus;
    private javax.swing.JPanel pOIntro;
    private javax.swing.JPanel pOLoading;
    private javax.swing.JPanel pOutput;
    private javax.swing.JPanel pSBot11;
    private javax.swing.JPanel pSBot15;
    private javax.swing.JPanel pSBot7;
    private javax.swing.JPanel pSCenter12;
    private javax.swing.JPanel pSCenter13;
    private javax.swing.JPanel pSCenter19;
    private javax.swing.JPanel pSCenter20;
    private javax.swing.JPanel pSCenter23;
    private javax.swing.JPanel pSTop11;
    private javax.swing.JPanel pSTop12;
    private javax.swing.JPanel pSTop17;
    private javax.swing.JPanel pSTop7;
    private javax.swing.JPanel pSorting;
    private javax.swing.JPanel pSortingIntro;
    private javax.swing.JPanel pSortingOperations;
    private javax.swing.JLabel sTitle12;
    private javax.swing.JLabel sTitle8;
    private javax.swing.JLabel structImg5;
    // End of variables declaration//GEN-END:variables
}
